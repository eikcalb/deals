{"version":3,"sources":["logo.svg","lib/firebase.ts","lib/util.ts","lib/user.ts","lib/theme.ts","lib/deals.ts","lib/index.ts","components/footer.tsx","lib/links.ts","components/toolbar.tsx","pages/loading.tsx","pages/deal.tsx","pages/error.tsx","pages/home.tsx","components/auth.tsx","pages/login.tsx","pages/logout.tsx","pages/register.tsx","pages/dealDetails.tsx","pages/profile.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","myAnalytics","analytics","log","console","functions","firebase","auth","usersRef","database","ref","vendorsRef","dealsRef","libraryRef","User","userObj","uid","displayName","fUser","isAnonymous","myDeals","_userReady","this","Promise","res","rej","fetch","fBase","then","json","data","Object","keys","finally","id","find","v","deal","dealExists","child","set","push","email","password","currentUser","signInAnonymously","Error","credential","EmailAuthProvider","linkWithCredential","usercred","a","async","user","updateProfile","catch","e","delete","error","message","signInWithEmailAndPassword","cred","errorCode","code","Vendor","companyName","register","httpsCallable","result","success","once","snapshot","exists","val","signOut","DEFAULT_THEME","main","background","color","minHeight","overflowY","paddingTop","mainDark","level1","header","boxShadow","footer","padding","DealManager","ctx","context","useMock","info","window","validator","author","CompanyName","nameRef","s","name","inflateDeal","signedIn","MOCK_DEALS","deals","c","item","reverse","startAt","dealsPerPage","lastItemIndex","findIndex","slice","Math","max","orderByKey","endAt","limitToLast","expiry","Date","now","isVendor","cover","createDeal","isDealValid","logEvent","isStudent","saveDeal","storage","refFromURL","remove","title","isLength","min","description","value","meta","unit","equals","expiryDate","moment","isAfter","inStore","actionUrl","require","DefaultAppContext","version","theme","dealMan","_isReady","document","onAuthStateChanged","getIdTokenResult","claims","vendor","session","JSON","parse","localStorage","getItem","setUserId","undefined","userDetails","login","vendorDetails","setItem","stringify","removeItem","vendors","length","ApplicationContext","createContext","Footer","Consumer","className","style","getFullYear","Toolbar","hideMenu","useContext","React","useState","isActive","updateActive","onClick","isActiveNow","setTimeout","activeClassName","exact","to","links","LoadingPhrases","Loading","round","random","phrase","setPhrase","intID","setInterval","clearInterval","useEffect","types","LoadingComponent","type","setType","intervalID","DealWidget","blank","expiryTime","link","loading","coverFile","state","setState","addToast","useToasts","onSubmit","preventDefault","stopPropagation","appearance","autoDismiss","getTime","brokenNames","split","storeRef","toString","btoa","put","t","getDownloadURL","addDeal","when","_","isEqual","src","alt","onChange","target","tabIndex","required","disabled","minLength","placeholder","files","size","file","reader","FileReader","onload","readAsDataURL","accept","maxLength","rows","step","pattern","MyDeals","isLoading","getMyDeals","map","key","PureComponent","contextType","AllDeals","getDeals","y","scrollY","scroll","scrollX","DealComponent","savingDeal","toLocaleString","isBefore","calendar","stud","confirm","pathname","removeDeal","ErrorPage","props","children","redirect","redirectText","Home","current","update","getVendorCount","d","destination","newVal","ceil","startCount","Login","redirectPath","registerPath","onLogin","updateState","showPassword","updateShowPassword","setRedirect","ev","Register","onRegister","loginPath","passwordVerify","LoginUser","loginStudent","LoginVendor","loginVendor","Logout","setLoading","logout","RegisterUser","registerUser","RegisterVendor","registerVendor","DealDetails","dealID","useParams","locationState","useLocation","isAllowed","getDeal","DealContents","useHistory","goBack","isURL","protocols","require_protocol","display","flex","seamless","border","width","height","aria-label","aria-current","substr","padEnd","readOnly","input","getElementById","focus","select","navigator","clipboard","writeText","execCommand","location","href","subject","Profile","App","ready","setReady","onLine","online","setOnline","onoffline","pauseOnHover","ononline","Provider","isReady","strict","path","component","Boolean","hostname","match","ReactDOM","render","placement","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.6fb521e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import { initializeApp, analytics } from \"firebase\";\r\nexport const firebaseConfig = {\r\n    apiKey: \"AIzaSyDRlJC_SV_wCL5eTDxVY24e3mHVGFJLNxg\",\r\n    authDomain: \"unidays-3205e.firebaseapp.com\",\r\n    databaseURL: \"https://unidays-3205e.firebaseio.com\",\r\n    projectId: \"unidays-3205e\",\r\n    storageBucket: \"unidays-3205e.appspot.com\",\r\n    messagingSenderId: \"127396561143\",\r\n    appId: \"1:127396561143:web:a032c8f3b20540fc4e53f2\",\r\n    measurementId: \"G-6HPPCPKTZ6\"\r\n};\r\n\r\n// Initialize Firebase\r\ninitializeApp(firebaseConfig);\r\nexport const myAnalytics = analytics();","export function log(...args: any[]){\r\n    console.log(...args)\r\n}","import firebase from \"firebase\"\r\nimport * as fBase from './firebase'\r\nimport { log } from \"./util\"\r\nimport { Deal } from \"./deals\"\r\n\r\nconst functions = firebase.functions()\r\nexport const auth = firebase.auth()\r\nexport const usersRef = firebase.database().ref('users')\r\nexport const vendorsRef = firebase.database().ref('vendors')\r\nexport const dealsRef = firebase.database().ref('deals')\r\nexport const libraryRef = firebase.database().ref('library')\r\n\r\nexport class User {\r\n    uid: string\r\n    displayName: string\r\n    protected fUser: firebase.User\r\n    readonly isAnonymous: boolean = false\r\n    protected myDeals: string[] = []\r\n    readonly _userReady: Promise<boolean>\r\n\r\n    constructor(userObj: firebase.User) {\r\n        this.uid = userObj.uid\r\n        this.displayName = userObj.displayName ? userObj.displayName : \"\"\r\n        this.fUser = userObj\r\n        this.isAnonymous = this.fUser.isAnonymous\r\n\r\n        this._userReady = new Promise((res, rej) => {\r\n            if (!this.isAnonymous) {\r\n                fetch(`${fBase.firebaseConfig.databaseURL}/library/${this.uid}.json?shallow=true`).then(res => res.json()).then(data => {\r\n                    this.myDeals = Object.keys(data)\r\n                }).finally(() => res(true))\r\n            }\r\n        })\r\n    }\r\n\r\n    isVendor(): boolean {\r\n        return false\r\n    }\r\n\r\n    dealExists(id: string) {\r\n        return this.myDeals.find(v => v === id) || false\r\n    }\r\n\r\n    async saveDeal(deal: Deal) {\r\n        if (this.dealExists(deal.id)) return\r\n\r\n        await libraryRef.child(`${this.uid}/${deal.id}`).set(deal)\r\n        this.myDeals.push(deal.id)\r\n    }\r\n    /**\r\n     * All access to app is anonymous by default.\r\n     * \r\n     * Upon registration, the user account is linked to the current aonymous user.\r\n     */\r\n    static async register({ displayName, email, password }: { email: string, password: string, displayName: string }) {\r\n        if (!auth.currentUser) {\r\n            auth.signInAnonymously()\r\n            throw new Error(\"This is weird! Application must start with atleast an anonymous user!\")\r\n        }\r\n\r\n        const credential = firebase.auth.EmailAuthProvider.credential(email, password)\r\n        return auth.currentUser.linkWithCredential(credential).then(async (usercred) => {\r\n            if (!usercred.user) {\r\n                throw new Error(\"User should not be empty!\")\r\n            }\r\n\r\n            const user = usercred.user;\r\n            console.log(\"Anonymous account successfully upgraded\", user);\r\n\r\n            await user.updateProfile({ displayName }).then(() => usersRef.child(user.uid).set({\r\n                displayName,\r\n                email\r\n            })\r\n            ).catch(e => {\r\n                log(e)\r\n                user!.delete()\r\n                throw new Error(\"Could not register user!\")\r\n            })\r\n\r\n            return new User(user)\r\n        }, (error) => {\r\n            console.log('Error upgrading anonymous account', error)\r\n            throw new Error(error.message);\r\n        })\r\n    }\r\n\r\n    static async login(email: string, password: string) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n            .then(cred => {\r\n                if (!cred.user) throw new Error(\"User not found!\")\r\n                return new User(cred.user)\r\n            })\r\n            .catch((error) => {\r\n                // Handle Errors here.\r\n                var errorCode = error.code;\r\n\r\n                console.log(error)\r\n                if (errorCode === 'auth/wrong-password') {\r\n                    throw new Error('Wrong password.');\r\n                } else {\r\n                    throw error;\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n/**\r\n * Vendor is an organization with access to publish and manage deals.\r\n */\r\nexport class Vendor extends User {\r\n    companyName: string\r\n\r\n    constructor(userObj: firebase.User, companyName: string) {\r\n        super(userObj)\r\n        this.companyName = companyName\r\n    }\r\n\r\n    isVendor() {\r\n        return true\r\n    }\r\n\r\n    /**`\r\n     * Registers a new vendor.\r\n     * \r\n     * Vendor registration is different from user registration and only one account type can be signedin at a time.\r\n     */\r\n    static async register({ companyName, displayName, email, password }: { companyName: string, email: string, password: string, displayName: string }) {\r\n        if (!auth.currentUser) {\r\n            auth.signInAnonymously()\r\n            throw new Error(\"This is weird! Application must start with atleast an anonymous user!\")\r\n        }\r\n\r\n        const register = functions.httpsCallable('vendorSignup')\r\n\r\n        try {\r\n            const result = await register({ email, password, displayName, companyName })\r\n            console.log(result)\r\n\r\n            if (!result.data.success) throw new Error('Something went wrong!')\r\n\r\n            const cred = await auth.signInWithEmailAndPassword(email, password)\r\n            if (!cred.user) throw new Error('Something went horribly wrong!')\r\n\r\n            return new Vendor(cred.user, companyName)\r\n        } catch (e) {\r\n            console.error(e)\r\n            throw e\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Login authenticates the current user as a vendor.\r\n     * \r\n     * If the company name of this vendor account is not found an error is thrown.\r\n     * It is an invalid action to create vendors without populating the company name.\r\n     */\r\n    static async login(email: string, password: string) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n            .then(async cred => {\r\n                if (!cred.user) throw new Error(\"User not found!\")\r\n\r\n                const companyName: string = await new Promise((res, rej) => {\r\n                    vendorsRef.child(`${cred.user!.uid}/companyName`).once('value', (snapshot) => {\r\n                        if (snapshot.exists()) {\r\n                            return res(snapshot.val())\r\n                        }\r\n                        //Vendor cannot exist without having a company name!\r\n                        auth.signOut()\r\n                        rej(new Error('Vendor account not found! Did you mean to login as a user?'))\r\n                    })\r\n                })\r\n                return new Vendor(cred.user, companyName)\r\n            })\r\n            .catch((error) => {\r\n                // Handle Errors here.\r\n                var errorCode = error.code;\r\n\r\n                console.log(error)\r\n                if (errorCode === 'auth/wrong-password') {\r\n                    throw new Error('Wrong password.');\r\n                } else {\r\n                    throw error;\r\n                }\r\n            })\r\n    }\r\n}","export interface Theme {\r\n    /**\r\n     * Main is the lowest level of the screen. This is the reall background of the application.\r\n     */\r\n    main?: React.CSSProperties,\r\n    mainDark?: React.CSSProperties,\r\n    level1?: React.CSSProperties\r\n    header?: React.CSSProperties\r\n    footer?: React.CSSProperties\r\n}\r\n\r\nexport const DEFAULT_THEME: Theme = {\r\n    main: {\r\n        background: \"#eee\",\r\n        color: \"#002\",\r\n        minHeight: '100%',\r\n        overflowY: 'scroll',\r\n        paddingTop: '3.25rem'\r\n    },\r\n    mainDark: {\r\n        background: \"#001\",\r\n        color: \"#efefef\",\r\n        minHeight: '100%',\r\n        overflowY: 'scroll',\r\n        paddingTop: '3.25rem'\r\n    },\r\n    level1: {\r\n        background: \"#222\"\r\n    },\r\n    header: {\r\n        background: \"#fefefe\",\r\n        color: '#353545',\r\n        boxShadow: '#1a1a1a38 0 1px 0.1em 0.1em'\r\n    },\r\n    footer: {\r\n        padding: '1em',\r\n        color: '#eee',\r\n        background: '#444455'\r\n    }\r\n}","import { AppContext } from \".\"\r\nimport { dealsRef, libraryRef, vendorsRef } from \"./user\"\r\nimport validator from \"validator\";\r\nimport { functions, storage } from \"firebase\";\r\nimport moment from \"moment\";\r\nimport { myAnalytics } from \"./firebase\";\r\n\r\nexport class DealManager {\r\n    protected context: AppContext\r\n\r\n    /**\r\n     * Use mock data in application deal management.\r\n     * \r\n     * @internal Only used for testing.\r\n     */\r\n    protected useMock: boolean = false\r\n\r\n    constructor(ctx: AppContext) {\r\n        if (process.env.NODE_ENV === 'production' && this.useMock) {\r\n            console.info('Bail application. Wrong code sent for production!!!!!!')\r\n            // throw new Error('Production environment should not use mock data!')\r\n        }\r\n\r\n        this.context = ctx\r\n        // @ts-ignore\r\n        window.v = validator\r\n    }\r\n\r\n    private async inflateDeal(deal: Deal) {\r\n        if (!deal.author.CompanyName) {\r\n            const nameRef = vendorsRef.child(`${deal.author.id}/companyName`)\r\n            const name = await nameRef.once('value').then(async s => {\r\n                if (s.exists()) {\r\n                    return s.val()\r\n                }\r\n            })\r\n            deal.author.CompanyName = name\r\n        }\r\n        return deal\r\n    }\r\n\r\n    async getDeal(id) {\r\n        return dealsRef.child(id).once('value').then(v => {\r\n            if (v.exists()) {\r\n                const deal = this.inflateDeal(v.val())\r\n                return deal\r\n            } else throw new Error(\"Deal not found!\")\r\n        })\r\n    }\r\n\r\n    async getMyDeals() {\r\n        if (!this.context.signedIn()) return []\r\n\r\n        if (this.useMock) return MOCK_DEALS\r\n\r\n        return await new Promise(res => {\r\n            libraryRef.child(`${this.context.user!.uid}`).once('value', async snapshot => {\r\n                if (!snapshot.exists()) return res([])\r\n\r\n                const deals = snapshot.val()\r\n                console.log(deals)\r\n                const result: Deal[] = []\r\n\r\n                for (let c in deals) {\r\n                    const item = deals[c]\r\n                    result.push(await this.inflateDeal(item))\r\n                }\r\n\r\n                return res(result.reverse())\r\n            })\r\n        }\r\n        )\r\n    }\r\n\r\n    async getDeals(startAt?: string) {\r\n        const dealsPerPage = 10\r\n\r\n        if (startAt) {\r\n            if (this.useMock) {\r\n                const lastItemIndex = MOCK_DEALS.findIndex(item => item.id === startAt)\r\n                console.log(lastItemIndex, startAt, MOCK_DEALS)\r\n                return MOCK_DEALS.slice(lastItemIndex > 0 ? lastItemIndex + 1 : 0, (Math.max(lastItemIndex, 0) + 1) + dealsPerPage)\r\n            }\r\n\r\n            return await dealsRef.orderByKey().endAt(startAt).limitToLast(2).once('value').then(async snapshot => {\r\n                if (!snapshot.exists()) return []\r\n\r\n                const deals = snapshot.val()\r\n                console.log('all deals', deals)\r\n                const result: Deal[] = []\r\n\r\n                for (let c in deals) {\r\n                    if (c === startAt) continue\r\n\r\n                    const item = deals[c]\r\n                    result.push(await this.inflateDeal(item))\r\n                }\r\n\r\n                return result.reverse()\r\n            })\r\n        }\r\n\r\n        if (this.useMock) return MOCK_DEALS.slice(0, dealsPerPage)\r\n\r\n        return await dealsRef.orderByKey().limitToLast(dealsPerPage).once('value').then(async snapshot => {\r\n            if (!snapshot.exists()) return []\r\n\r\n            const deals = snapshot.val()\r\n            const result: Deal[] = []\r\n\r\n            for (let c in deals) {\r\n                const item = deals[c]\r\n                if (item.expiry && Date.now() >= item.expiry) continue\r\n\r\n                result.push(await this.inflateDeal(item))\r\n            }\r\n\r\n            return result.reverse()\r\n        })\r\n    }\r\n\r\n    async addDeal(deal: Deal) {\r\n        if (!this.context.signedIn() || !this.context.user!.isVendor()) {\r\n            throw new Error(\"You are not authorized to create deals!\")\r\n        }\r\n\r\n        if (!deal.cover) {\r\n            throw new Error(\"You must specify a cover image for this deal!\")\r\n        }\r\n\r\n        const createDeal = functions().httpsCallable('vendorCreateDeal')\r\n        DealManager.isDealValid(deal)\r\n\r\n        try {\r\n            const result = await createDeal({ deal })\r\n            if (!result.data.success) throw new Error(\"Failed to create deal!\")\r\n            myAnalytics.logEvent('create_deal')\r\n            return true\r\n        } catch (e) {\r\n            console.error(e)\r\n            throw e\r\n        }\r\n    }\r\n\r\n    async saveDeal(deal: Deal) {\r\n        if (!this.context.isStudent()) {\r\n            throw new Error(\"Only students can save deals!\")\r\n        }\r\n\r\n        try {\r\n            await this.context.user?.saveDeal(deal)\r\n            return true\r\n        } catch (e) {\r\n            console.error(e)\r\n            throw e\r\n        }\r\n    }\r\n\r\n    async removeDeal(deal: Deal) {\r\n        if (!this.context.signedIn() || !this.context.user!.isVendor() || deal.author.id !== this.context.user?.uid) {\r\n            throw new Error(\"You are not authorized to manage deals!\")\r\n        }\r\n\r\n        try {\r\n            if (deal.cover) await storage().refFromURL(deal.cover).delete()\r\n            await libraryRef.child(`${this.context.user.uid}/${deal.id}`).remove()\r\n            await dealsRef.child(deal.id).remove()\r\n            return true\r\n        } catch (e) {\r\n            console.error(e)\r\n            throw e\r\n        }\r\n    }\r\n\r\n\r\n    static isDealValid(deal: Deal) {\r\n\r\n        if (!deal.title || !validator.isLength(deal.title, { min: 5 })) {\r\n            throw Error(\"Deal must contain a useful title!\")\r\n        }\r\n        else if (!deal.description || !validator.isLength(deal.description, { min: 10 })) {\r\n            throw new Error(\"Deal must have useful description!\")\r\n        }\r\n        else if (!deal.value) {\r\n            throw new Error(\"All deals must have a value!\")\r\n        }\r\n\r\n        deal.meta = deal.meta || { unit: \"FLAT\" }\r\n\r\n        if (!deal.meta.unit || (!validator.equals(deal.meta.unit, \"PERCENT\") && !validator.equals(deal.meta.unit, \"FLAT\"))) {\r\n            throw new Error(\"Invalid unit format\")\r\n        }\r\n        // if (deal.meta.actionUrl && !validator.isURL(deal.meta.actionUrl, { protocols: [\"http\", \"https\"] })) {\r\n        //     throw new Error(\"Url provided is invalid\")\r\n        // }\r\n        if (deal.meta.expiryDate && !moment(deal.meta.expiryDate).isAfter()) {\r\n            throw new Error(\"Invalid expiry date!\")\r\n        }\r\n\r\n        return true\r\n    }\r\n}\r\n\r\n/**\r\n * ValueType:\r\n * Discount | The deal provides a difference from the regular price.\r\n * This discount may be in the form of percentage removal from the current price of a product.\r\n * It could also represent a flat amount removed from the purchase price.\r\n * The type of discount is specified by the `ValueUnit` property.\r\n */\r\nexport type ValueUnit = \"PERCENT\" | \"FLAT\"\r\n\r\nexport interface Deal {\r\n    title: string,\r\n    inStore?: boolean,\r\n    description: string,\r\n    value: number,\r\n    meta?: {\r\n        actionUrl?: string,\r\n        unit: ValueUnit,\r\n        expiryDate?: number | Date\r\n    }\r\n    cover?: string,\r\n    author: {\r\n        id: string,\r\n        CompanyName?: string,\r\n        photoURL?: string\r\n    }\r\n    id: string\r\n}\r\n\r\n\r\nconst MOCK_DEALS: Deal[] = [{\r\n    id: '11',\r\n    cover: 'fff',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Dominos Pizza'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '30% off any purchase',\r\n    value: 30,\r\n    inStore: true\r\n},\r\n{\r\n    id: '12',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Taxify'\r\n    },\r\n    description: 'Walk in to any store and get these deals in november only',\r\n    title: '50% off any purchase',\r\n    value: 30,\r\n    meta: {\r\n        expiryDate: 1580697479000,\r\n        unit: 'FLAT',\r\n        actionUrl: 'nairaland.com'\r\n    },\r\n    cover: require('../logo.svg'),\r\n    inStore: true\r\n},\r\n{\r\n    id: '13',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'FilmHouse Cinemas'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '80% off any purchase',\r\n    cover: require('../logo.svg'),\r\n    value: 30\r\n},\r\n{\r\n    id: '14',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Microsoft'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '30% off any purchase',\r\n    value: 30\r\n},\r\n{\r\n    id: '14d',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Microsoft'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '30% off any purchase',\r\n    value: 30\r\n},\r\n{\r\n    id: '1s4',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Microsoft'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '30% off any purchase',\r\n    value: 30\r\n},\r\n{\r\n    id: '14dd',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Microsoft'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '30% off any purchase',\r\n    value: 30\r\n},\r\n{\r\n    id: '1s4d',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Microsoft'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '30% off any purchase',\r\n    value: 30\r\n},\r\n{\r\n    id: '14dss',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Microsoft'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '30% off any purchase',\r\n    value: 30\r\n},\r\n{\r\n    id: '1s4ss',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Microsoft'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '30% off any purchase',\r\n    value: 30\r\n}]","import { createContext } from 'react'\r\nimport * as fBase from './firebase'\r\nimport { User, Vendor, auth } from './user'\r\nimport { DEFAULT_THEME } from \"./theme\";\r\nimport firebase from 'firebase';\r\nimport { DealManager } from './deals';\r\n\r\nexport const USER_SESSION = 'user_session_'\r\n\r\nexport class AppContext {\r\n    // App datails\r\n    name = \"My Student Deal\"\r\n    description = \"Bringing the most exciting shopping discounts and deals to students worldwide!\"\r\n    version = \"0.0.1\"\r\n\r\n    // Theme settings\r\n    theme = DEFAULT_THEME\r\n\r\n    // Instance properties\r\n    //\r\n    // Currently logged in user\r\n    user?: User\r\n    dealMan: DealManager\r\n\r\n    protected _isReady: Promise<boolean>\r\n\r\n    constructor() {\r\n        document.title = this.name\r\n        this.dealMan = new DealManager(this)\r\n\r\n        this._isReady = new Promise((res) => {\r\n            auth.onAuthStateChanged(async user => {\r\n                if (user) {\r\n                    // If user is anonymous, create a user object to allow saving state once activity is done.\r\n                    if (user.isAnonymous) {\r\n                        console.log(\"Anonymous user created\", user)\r\n                        this.user = new User(user)\r\n                    }\r\n                    else {\r\n                        // If user is already created, skip completely.\r\n                        // This function is for inflating state upon reload and should not be run within a page view.\r\n                        if (this.user && !this.user.isAnonymous) return\r\n\r\n                        // get custom claims\r\n                        const token = await user.getIdTokenResult()\r\n                        if (token.claims.vendor) {\r\n                            // if (true) {\r\n                            const session = JSON.parse(localStorage.getItem(USER_SESSION) || \"{}\")\r\n                            if (!session) {\r\n                                // dunno how you authenticated without a session.\r\n                                auth.signOut()\r\n                                console.log(\"Anonymous user created\", user)\r\n                                this.user = new User(user)\r\n                            }\r\n                            console.log(\"currently signedin as \", session.companyName, user)\r\n                            this.user = new Vendor(user, session.companyName)\r\n                            fBase.myAnalytics.setUserId(user.uid)\r\n                        } else {\r\n                            console.log(\"currently signedin as \", user.displayName, user)\r\n                            this.user = new User(user)\r\n                            fBase.myAnalytics.setUserId(user.uid)\r\n                        }\r\n                        await this.user._userReady\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    this.user = undefined\r\n                    // Signs in current user anonymously\r\n                    if (!this.user) auth.signInAnonymously()\r\n                }\r\n                res(true)\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    isReady() {\r\n        return this._isReady\r\n    }\r\n\r\n    isStudent() {\r\n        return this.user && this.signedIn() && !this.user.isVendor()\r\n    }\r\n\r\n    signedIn() {\r\n        return this.user && !this.user.isAnonymous\r\n    }\r\n\r\n    loginStudent(userDetails: { email: string, password: string }) {\r\n        return User.login(userDetails.email, userDetails.password).then(user => {\r\n            this.user = user\r\n            return this\r\n        })\r\n    }\r\n\r\n    loginVendor(vendorDetails: { email: string, password: string }) {\r\n        return Vendor.login(vendorDetails.email, vendorDetails.password).then(user => {\r\n            this.user = user\r\n            localStorage.setItem(USER_SESSION, JSON.stringify({ companyName: user.companyName }))\r\n            return this\r\n        })\r\n    }\r\n\r\n\r\n    registerUser(userDetails: { displayName: string, email: string, password: string }) {\r\n        return User.register(userDetails).then(user => {\r\n            this.user = user\r\n        })\r\n    }\r\n\r\n    registerVendor(vendorDetails: { displayName: string, email: string, password: string, companyName: string }) {\r\n        return Vendor.register(vendorDetails).then(user => {\r\n            this.user = user\r\n            localStorage.setItem(USER_SESSION, JSON.stringify({ companyName: user.companyName }))\r\n        })\r\n    }\r\n\r\n    async logout() {\r\n        await auth.signOut()\r\n        localStorage.removeItem(USER_SESSION)\r\n\r\n        if (this.user) {\r\n            this.user = undefined\r\n        }\r\n    }\r\n\r\n\r\n    async getVendorCount() {\r\n        const vendors = await (await fetch(`${fBase.firebaseConfig.databaseURL}/vendors.json?shallow=true`)).json()\r\n        if (!vendors) return 0\r\n        return Object.keys(vendors).length\r\n    }\r\n}\r\n\r\nexport const DefaultAppContext = new AppContext()\r\nexport const ApplicationContext = createContext<AppContext>(DefaultAppContext)\r\n","import React from \"react\";\r\nimport { ApplicationContext } from \"../lib\";\r\n\r\nexport const Footer = () => (\r\n    <ApplicationContext.Consumer>{ctx => (\r\n        <footer className='footer' style={ctx.theme.footer}>\r\n            <div className=\"content is-unselectable has-text-centered\">\r\n                <p>&copy; {new Date().getFullYear()} {ctx.name} </p>\r\n            </div>\r\n        </footer>\r\n    )}\r\n    </ApplicationContext.Consumer>\r\n)","export default {\r\n    Transport: '/deals',\r\n    Fashion: '/deals',\r\n    LifeStyle: '/deals',\r\n    Technology: '/deals',\r\n    deals: '/deals',\r\n    myDeals: '/mydeals',\r\n    profile: '/user/view',\r\n    // profile: '/'\r\n}","import React, { useContext } from 'react';\r\nimport { FaHome, FaSignInAlt, FaSign, FaBriefcase, FaWallet, FaSignOutAlt, FaShoppingBasket, FaTags, FaUserCircle } from \"react-icons/fa\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ApplicationContext } from '../lib';\r\nimport { User, Vendor } from '../lib/user';\r\nimport links from '../lib/links';\r\n\r\nexport default function Toolbar({ hideMenu }: { hideMenu?: boolean }) {\r\n    const ctx = useContext(ApplicationContext)\r\n    let [isActive, updateActive] = React.useState(false)\r\n\r\n    if (hideMenu) {\r\n        return (\r\n            <nav className={`navbar is-centered is-unselectable is-fixed-top`} style={ctx.theme.header} >\r\n                <div className=\"navbar-brand\">\r\n                    <span className=\"navbar-item has-text-weight-bold\">{ctx.name}</span>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <nav className={`navbar is-centered is-unselectable is-fixed-top`} style={ctx.theme.header} >\r\n            <div className=\"navbar-brand\">\r\n                <span className=\"navbar-item has-text-weight-bold\">{ctx.name}</span>\r\n                <span onClick={() => {\r\n                    const isActiveNow = !isActive\r\n                    updateActive(isActiveNow)\r\n                    if (isActiveNow === true) {\r\n                        setTimeout(() => updateActive(false), 10000)\r\n                    }\r\n                }} className={`navbar-burger burger ${isActive ? 'is-active' : ''}`}>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </span>\r\n            </div>\r\n            <div className={`navbar-menu ${isActive ? 'is-active' : ''}`}>\r\n                <div className=\"navbar-start\">\r\n                    {ctx.signedIn() ?\r\n                        <NavLink activeClassName='is-active' exact to={links.myDeals} className='navbar-item'>\r\n                            <FaWallet />&emsp;My Deals\r\n                </NavLink> :\r\n                        <NavLink activeClassName='is-active' exact to='/' className='navbar-item'>\r\n                            <FaHome />&emsp;Home\r\n          </NavLink>}\r\n                    <NavLink activeClassName='is-active' exact to={links.deals} className='navbar-item'>\r\n                        <FaTags />&nbsp; Deals\r\n                </NavLink>\r\n                </div>\r\n                <div className=\"navbar-end\">\r\n                    {ctx.signedIn() ?\r\n                        <>\r\n                            <div className=\"navbar-item\">\r\n                            </div>\r\n                            <NavLink title=\"View profile\" activeClassName='is-active' exact to={links.profile} className='navbar-item'>\r\n                                <FaUserCircle />&emsp;Hello {ctx.user!.isVendor() ? (ctx.user as Vendor)!.companyName : ctx.user!.displayName}\r\n                                </NavLink>\r\n                        </> : null}\r\n                    <div className=\"navbar-item\">\r\n                        {!ctx.signedIn() ?\r\n                            <div className=\"field is-grouped is-uppercase\">\r\n                                <p className=\"control\">\r\n                                    <NavLink title='Login to student portal' activeClassName='is-active' exact to='/user/login' className=\"is-primary button\">\r\n                                        <FaSignInAlt />&emsp;Student\r\n                                        </NavLink>\r\n                                </p>\r\n                                <p className=\"control\">\r\n                                    <NavLink title=\"Login to vendor portal!\" activeClassName='is-active' exact to='/vendor/login' className=\"is-link button\">\r\n                                        <FaBriefcase />&emsp;Vendor\r\n                                        </NavLink>\r\n                                </p>\r\n                            </div> :\r\n                            <NavLink title='Logout' activeClassName='is-active' exact to={`/${ctx.user!.isVendor() ? 'vendor' : 'user'}/logout`} className=\"is-danger button\">\r\n                                <FaSignOutAlt />&emsp;Logout\r\n                            </NavLink>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\nimport Toolbar from '../components/toolbar'\r\nimport { ApplicationContext } from '../lib'\r\n\r\n\r\nconst LoadingPhrases: string[] = ['Contacting Mothership...', 'Configuring Defences...', 'Loading...', 'Ready In A Minute...', 'Launching...']\r\n\r\nexport const Loading = () => {\r\n    const ctx = useContext(ApplicationContext)\r\n    // const [loading, setLoading] = React.useState<boolean>(true)\r\n    const [phrase, setPhrase] = useState<string>(LoadingPhrases[Math.round(Math.random() * LoadingPhrases.length) % LoadingPhrases.length])\r\n\r\n    let intID = setInterval(() => {\r\n        if (intID) clearInterval(intID)\r\n        setPhrase(LoadingPhrases[Math.round(Math.random() * LoadingPhrases.length) % LoadingPhrases.length])\r\n    }, 2000)\r\n    useEffect(() => {\r\n        return () => {\r\n            clearInterval(intID)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div style={ctx.theme.main}>\r\n            <Toolbar hideMenu />\r\n            <div className='hero is-fullheight is-black is-bold'>\r\n                <div className='hero-body has-text-centered'>\r\n                    <div className='container'>\r\n                        <p className='title has-text-weight-bold is-2'>Welcome to {ctx.name}</p>\r\n                        <p className='subtitle'>{ctx.description}</p>\r\n                        <br />\r\n                        <br />\r\n                        <div className='section'>\r\n                            <p className='subtitle'>{phrase}</p>\r\n                            <progress className=\"progress is-small is-info\" max=\"100\">loading</progress>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst types = ['info', 'success', 'link', 'warning', 'danger', 'primary']\r\nexport const LoadingComponent = ({ phrase = \"Loading...\" }) => {\r\n    const [type, setType] = useState<string>('info')\r\n\r\n    useEffect(() => {\r\n        const intervalID = setInterval(() => setType(types[Math.round(Math.random() * types.length) % types.length]),900)\r\n        return () => clearInterval(intervalID)\r\n    })\r\n\r\n    return (\r\n        <div className='container has-text-centered'>\r\n            <p className='subtitle'>{phrase}</p>\r\n            <progress className={`progress is-small is-${type}`} max=\"100\">loading</progress>\r\n        </div>\r\n    )\r\n}","import React, { useContext, useState, PureComponent } from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport moment, { Moment } from \"moment\";\r\nimport { GiVendingMachine, GiWallet } from 'react-icons/gi'\r\nimport { NavLink, Redirect, Prompt } from 'react-router-dom'\r\nimport { Deal, DealManager } from '../lib/deals'\r\nimport { FaStore, FaCloud, FaExclamationCircle, FaCalendar, FaClock, FaGlobe } from 'react-icons/fa'\r\nimport { FiDelete, FiImage, FiFrown } from \"react-icons/fi\";\r\nimport { Vendor, User } from '../lib/user'\r\nimport { storage } from 'firebase'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport validator from 'validator'\r\nimport { LoadingComponent } from './loading'\r\nimport _ from \"underscore\";\r\n\r\n\r\nexport const DealWidget = ({ user, dealMan }: { user: Vendor, dealMan: DealManager }) => {\r\n    const blank: {\r\n        error: any,\r\n        cover: any\r\n    } & any = {\r\n        error: null,\r\n        inStore: \"ONLINE\",\r\n        title: \"\",\r\n        description: \"\",\r\n        value: \"\",\r\n        expiryTime: \"\",\r\n        expiryDate: \"\",\r\n        cover: null,\r\n        link: '',\r\n        type: 'FLAT',\r\n        loading: false,\r\n        coverFile: null\r\n    }\r\n    const [state, setState] = useState(blank)\r\n    const { addToast } = useToasts()\r\n\r\n\r\n    return (\r\n        <form className='card has-transition-1 is-unselectable' onSubmit={async (e) => {\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n\r\n            if (!user.isVendor()) {\r\n                addToast('Only vendors can create deals', { appearance: 'error' })\r\n            }\r\n\r\n            if (state.loading) {\r\n                addToast(\"Deal creation already in progress!\", { appearance: 'info', autoDismiss: true })\r\n                return\r\n            }\r\n\r\n            setState({ ...state, loading: true, error: null })\r\n            // verify all require fields.\r\n            if (state.title && state.title.length > 4 && state.description && state.description.length > 4 && state.cover && state.value) {\r\n                try {\r\n                    if (state.inStore === 'ONLINE' && !state.link) throw new Error(\"All online deals must have a url or voucher code!\")\r\n                    //set expiry\r\n                    let expiry\r\n                    if (state.expiryDate && state.expiryTime) {\r\n                        expiry = new Date(`${state.expiryDate} ${state.expiryTime}`)\r\n                        if (expiry.getTime() <= Date.now()) throw new Error(\"Expiry must be greater than today!\")\r\n                    } else if ((state.expiryTime && !state.expiryDate) || (state.expiryDate && !state.expiryTime)) { throw new Error(\"Both expiry date and time must be set!\") }\r\n\r\n                    const deal: Deal = {\r\n                        title: state.title,\r\n                        description: state.description,\r\n                        author: {\r\n                            id: user.uid\r\n                        },\r\n                        id: \"\",\r\n                        value: state.value,\r\n                        inStore: state.inStore !== 'ONLINE' ? true : false,\r\n                        meta: {\r\n                            unit: state.type,\r\n                            actionUrl: state.link,\r\n                            expiryDate: expiry ? expiry.getTime() : undefined\r\n                        }\r\n                    }\r\n\r\n                    DealManager.isDealValid(deal)\r\n\r\n                    // upload image\r\n                    const brokenNames: string[] = state.cover.name.split('.')\r\n                    const storeRef = storage().ref(`images/${Date.now().toString(36)}_${btoa(brokenNames[0])}_${brokenNames[brokenNames.length - 1]}`)\r\n                    storeRef.put(state.cover).then(async t => {\r\n                        if (t.state === 'success') deal.cover = await storeRef.getDownloadURL()\r\n                        else {\r\n                            storeRef.delete()\r\n                            console.log(t)\r\n                            throw new Error(\"Failed to save file properly!\")\r\n                        }\r\n                        await dealMan.addDeal(deal).catch(e => {\r\n                            storeRef.delete()\r\n                            throw e\r\n                        })\r\n                        addToast(\"Deal created successfully!\", { appearance: 'success', autoDismiss: true })\r\n                        setState({ ...state, error: \"\", loading: false })\r\n                    }).catch(e => {\r\n                        if (process.env.NODE_ENV === 'development') console.error(e)\r\n                        setState({ ...state, error: e.message || \"Failed to upload. Please try again\", loading: false })\r\n                    })\r\n                } catch (e) {\r\n                    if (process.env.NODE_ENV === 'development') console.error(e)\r\n                    setState({ ...state, error: e.message || \"Failed to upload. Please try again\", loading: false })\r\n                }\r\n            } else {\r\n                setState({\r\n                    ...state, error: \"Invalid values entered!\", loading: false\r\n                })\r\n            }\r\n        }\r\n        }>\r\n            <Prompt message='You have made changes to this page. Really want to leave now?' when={!_.isEqual(state, blank)} />\r\n            <header className='card-header'>\r\n                <p className='card-header-title is-uppercase'>Create New Deal</p>\r\n                <span onClick={() => {\r\n                    if (state.loading) return\r\n                    setState(blank)\r\n                }} className={`card-header-icon ${state.loading ? 'has-text-grey' : 'has-text-danger is-size-4'}`}> <FiDelete /></span>\r\n            </header>\r\n            {state.coverFile ? (\r\n                <div className=\"card-image\">\r\n                    <figure className=\"image is-16by9\">\r\n                        <img src={state.coverFile} alt={state.description} />\r\n                    </figure>\r\n                </div>)\r\n                : null}\r\n            <div className='card-content' >\r\n                {state.error ?\r\n                    <div className='notification is-danger'>\r\n                        <FaExclamationCircle /> {state.error}\r\n                    </div>\r\n                    : null}\r\n                <div className='field is-horizontal'>\r\n                    <div className='field-body'>\r\n                        <div className='field'>\r\n                            <div className='control'>\r\n                                <input value={state.title} onChange={e => setState({ ...state, title: e.target.value })} tabIndex={1} className='input' required disabled={state.loading} minLength={4} type='text' placeholder='Title' />\r\n                            </div>\r\n                        </div>\r\n                        <div className='field'>\r\n                            <div className={`file has-name is-fullwidth ${state.cover ? 'is-success' : ''}`}>\r\n                                <label className='file-label'>\r\n                                    <input onChange={e => {\r\n                                        if (e.target.files && e.target.files.length > 0 && e.target.files[0].size > 10) {\r\n                                            const file = e.target.files[0]\r\n                                            if (file.size / 1024 > 700) {\r\n                                                addToast(\"File is too large! Please select a different file!\", { appearance: 'error', autoDismiss: true })\r\n                                                return\r\n                                            }\r\n                                            if ('FileReader' in window) {\r\n                                                const reader = new FileReader()\r\n                                                reader.onload = (e) => {\r\n                                                    setState({ ...state, cover: file, coverFile: e.target?.result })\r\n                                                }\r\n                                                reader.readAsDataURL(file)\r\n                                            } else setState({ ...state, cover: file })\r\n\r\n                                        } else {\r\n                                            setState({ ...state, cover: null })\r\n                                        }\r\n\r\n                                    }} className=\"file-input\" required tabIndex={2} type='file' accept='image/*' alt='Cover photo for deal' disabled={state.loading} />\r\n                                    <span className='file-cta'>\r\n                                        <span className='file-icon'>\r\n                                            <FiImage />\r\n                                        </span>\r\n                                        <span className={`is-uppercase file-label ${state.cover ? 'has-text-white' : 'has-text-grey'}`}>\r\n                                            Select Cover image\r\n                                    </span>\r\n                                    </span>\r\n                                    <span className='file-name'>{state.cover ? state.cover.name : 'no file chosen'}</span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        <textarea tabIndex={3} className=\"textarea\" value={state.description} onChange={e => setState({ ...state, description: e.target.value })} disabled={state.loading} required maxLength={150} rows={2} placeholder=\"Describe what this deal has to offer...\"></textarea>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='field is-horizontal'>\r\n                    <div className='field-body'>\r\n                        <div className='field'>\r\n                            <div className='control' title=\"Select deal availability. This will guide users on where this deal can be applied.\">\r\n                                <div className='select is-fullwidth'>\r\n                                    <select tabIndex={4} value={state.inStore} onChange={e => setState({ ...state, inStore: e.target.value })} disabled={state.loading} >\r\n                                        <option value='ONLINE'>Online</option>\r\n                                        <option value='STORE'>Instore</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='field has-addons'>\r\n                            <div className='control'>\r\n                                <div className='select'>\r\n                                    <select tabIndex={5} value={state.type} onChange={e => setState({ ...state, type: e.target.value })} disabled={state.loading} >\r\n                                        <option value=\"PERCENT\">%</option>\r\n                                        <option value=\"FLAT\">&#x20A6;</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className='control is-expanded'>\r\n                                <input tabIndex={6} value={state.value} onChange={e => setState({ ...state, value: e.target.value })} className='input is-uppercase' disabled={state.loading} required type='number' step={0.01} placeholder='Discount or Percentage' />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    state.inStore !== 'ONLINE' ? null : (\r\n                        <div className='field'>\r\n                            <div className='control has-icons-left'>\r\n                                <input type='text' tabIndex={7} value={state.link} onChange={e => setState({ ...state, link: e.target.value })} disabled={state.loading} className='input' placeholder=\"Voucher Code or Web URL (starting with http://)\" />\r\n                                <span className='icon is-small is-left'>\r\n                                    <FaGlobe />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <label className='label is-uppercase has-text-grey'>Expiry (optional)</label>\r\n                <div className='field is-horizontal'>\r\n                    <div className='field-body'>\r\n                        <div className='field'>\r\n                            <div className=\"control has-icons-left\">\r\n                                <input className=\"input\" tabIndex={8} value={state.expiryTime} disabled={state.loading} onChange={e => setState({ ...state, expiryTime: e.target.value })} type=\"time\" placeholder=\"Time deal will expire\" />\r\n                                <span className=\"icon is-small is-left\">\r\n                                    <FaClock />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='field'>\r\n                            <div className=\"control has-icons-left\">\r\n                                <input name='date' tabIndex={9} disabled={state.loading} value={state.expiryDate} onChange={e => setState({ ...state, expiryDate: e.target.value })} className=\"input\" type=\"date\" pattern='[0-9]{4}/[0-9]{2}/[0-9]{2}' />\r\n                                <span className=\"icon is-small is-left\">\r\n                                    <FaCalendar />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='field'>\r\n                    <div className='is-fullwidth control'>\r\n                        <button type='submit' tabIndex={10} disabled={state.loading} className={`button is-primary is-uppercase ${state.loading ? 'is-loading' : ''}`}>submit</button>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        </form >)\r\n}\r\n\r\nexport class MyDeals extends PureComponent {\r\n    static contextType = ApplicationContext\r\n    context!: React.ContextType<typeof ApplicationContext>\r\n\r\n    state: { deals: Deal[], isLoading: boolean } = { deals: [], isLoading: true }\r\n\r\n    componentDidMount() {\r\n        this.context.dealMan.getMyDeals().then(deals => {\r\n            this.setState({ deals, isLoading: false })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const ctx = this.context\r\n        const { state: { deals, isLoading } } = this\r\n\r\n        if (!ctx.signedIn()) {\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n        return (\r\n            <div style={ctx.theme.main}>\r\n                <Toolbar />\r\n                <div className='container'>\r\n                    <div className='section'>\r\n                        {ctx.user?.isVendor() ? <DealWidget user={ctx.user as Vendor} dealMan={ctx.dealMan} /> : null}\r\n\r\n                        <div className='section is-marginless-horizontal'>\r\n                            {isLoading ? <LoadingComponent phrase='Fetching Your deals...' /> : null}\r\n                            <div className='columns is-multiline'>\r\n                                {deals.length > 0 ? deals.map(deal => {\r\n                                    return (\r\n                                        <div key={deal.id} className='column is-3-widescreen is-4 is-12-mobile'>\r\n                                            <DealComponent deal={deal} />\r\n                                        </div>\r\n                                    )\r\n                                }) : <div className='column has-text-centered has-text-grey'>\r\n                                        <br />\r\n                                        <FiFrown className='is-size-1' />\r\n                                        <br />\r\n                                        No Data available yet!\r\n                                    </div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/**\r\n * Component for displaying all deals!\r\n *\r\n * The deals are paginated and only fetch more deals if requested.\r\n */\r\nexport class AllDeals extends React.PureComponent {\r\n    static contextType = ApplicationContext\r\n    context!: React.ContextType<typeof ApplicationContext>\r\n\r\n    state: { deals: Deal[], isLoading: boolean } = { deals: [], isLoading: true }\r\n\r\n    componentDidMount() {\r\n        this.context.dealMan.getDeals().then(deals => {\r\n            this.setState({ deals, isLoading: false })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const ctx = this.context\r\n        const { isLoading, deals } = this.state\r\n\r\n        return (\r\n            <div style={ctx.theme.main}>\r\n                <Toolbar />\r\n\r\n                <div className='container is-fluid'>\r\n                    <div className='section is-marginless-horizontal'>\r\n                        <div className='columns is-multiline'>\r\n                            {deals.map(deal => {\r\n                                return (\r\n                                    <div key={deal.id} className='column is-3-widescreen is-4 is-12-mobile'>\r\n                                        <DealComponent deal={deal} />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <div className='container'>\r\n                            <button type='button' disabled={isLoading} onClick={async () => {\r\n                                this.setState({ isLoading: true })\r\n                                const y = window.scrollY\r\n                                deals.push(...await ctx.dealMan.getDeals(deals[deals.length - 1].id))\r\n                                this.setState({ deals, isLoading: false })\r\n                                window.scroll(window.scrollX, y)\r\n                            }} className={`button is-primary is-uppercase is-fullwidth ${isLoading ? 'is-loading' : ''}`}>Load More</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const DealComponent = ({ deal }: { deal: Deal }) => {\r\n    const ctx = useContext(ApplicationContext)\r\n    const { addToast } = useToasts()\r\n    const [state, setState] = useState({ loading: false, savingDeal: false, exists: ctx.user?.dealExists(deal.id) })\r\n\r\n    let expiryDate: Moment | undefined = deal.meta && deal.meta.expiryDate ? moment(new Date(deal.meta.expiryDate)) : undefined\r\n\r\n    return (\r\n        <div className=\"card is-deal-card is-unselectable\">\r\n            <div className=\"card-image\">\r\n                <figure className=\"image is-16by9\">\r\n                    <img src={deal.cover || require('../logo.svg')} alt={deal.description} />\r\n                </figure>\r\n            </div>\r\n            <div className=\"card-content has-text-centered\">\r\n                {deal.meta ?\r\n                    <div className='title has-text-weight-bold'>\r\n                        {validator.equals(deal.meta!.unit, 'FLAT') ? (\r\n                            `\\u20A6 ${deal.value.toLocaleString()}`\r\n                        ) : `${deal.value}%`}\r\n                    </div>\r\n                    : null}\r\n                <p className='title is-5'>{deal.title}</p>\r\n                <p className='subtitle is-6 is-deal-description'>{deal.description}</p>\r\n                {expiryDate ?\r\n                    <span className={`is-positioned-top tag is-medium ${expiryDate.isBefore(Date.now()) ? 'is-danger' : 'is-warning'}`} title={`Deal set to expire on ${expiryDate.toLocaleString()}`}><FaClock />&nbsp; {expiryDate.isBefore(Date.now()) ? 'Expired' : `Until ${expiryDate.calendar()}`}</span>\r\n                    : null}\r\n\r\n                <div className=\"content\">\r\n                    <div className='field is-grouped-centered is-grouped'>\r\n                        <div className='control'>\r\n                            <NavLink onClick={async e => {\r\n                                if (ctx.isStudent()) {\r\n                                    const stud = ctx.user as User\r\n                                    setState({ ...state, savingDeal: true })\r\n                                    if (!stud.dealExists(deal.id)) {\r\n                                        try {\r\n                                            if (window.confirm('Want to this deal?')) {\r\n                                                await ctx.dealMan.saveDeal(deal).then(() => setState({ ...state, savingDeal: false }))\r\n                                            } else {\r\n                                                throw new Error(\"User not interested!\")\r\n                                            }\r\n                                        } catch (er) {\r\n                                            console.error(er)\r\n                                            e.preventDefault()\r\n                                            e.stopPropagation()\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }} className='button is-success is-outlined' to={{ state: { deal }, pathname: `/deals/view/${deal.id}` }}>\r\n                                <GiWallet />&nbsp; {state.exists ? 'View Deal' : 'Get Deal'}\r\n                            </NavLink>\r\n                        </div>\r\n\r\n                        {ctx.user?.isVendor && deal.author.id === ctx.user.uid ? (\r\n                            <div className='control'>\r\n                                <button className={`button is-danger ${state.loading ? 'is-loading' : ''}`} onClick={async () => {\r\n                                    if (!window.confirm(`You have tried to delete deal with title \"${deal.title}\".\\r\\nDo you want to delete this deal?`)) return\r\n\r\n                                    setState({ ...state, loading: true })\r\n                                    ctx.dealMan.removeDeal(deal).then(() => addToast(\"Deal successfully removed!\", { appearance: 'success', autoDismiss: true })).catch(e => {\r\n                                        addToast(e.message || \"An error occurred!\", { appearance: 'error', autoDismiss: true })\r\n                                    }).finally(() => setState({ ...state, loading: false }))\r\n                                }}>Delete</button>\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"media\">\r\n                    <div className=\"media-content\">\r\n                        <p className=\"title is-6\"><GiVendingMachine /> {deal.author.CompanyName}</p>\r\n                        <p className=\"subtitle tags\">\r\n                            <span className={`tag ${deal.inStore ? 'is-primary' : 'is-link'}`}>{deal.inStore ? <><FaStore />&nbsp; instore</> : <><FaCloud />&nbsp; online</>}</span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}","import React from \"react\";\r\nimport { FaExclamationTriangle } from \"react-icons/fa\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Toolbar from \"../components/toolbar\";\r\nimport { ApplicationContext } from \"../lib\";\r\n\r\nexport function ErrorPage(props: { children: any, redirect?: string, redirectText?: string }) {\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <div style={ctx.theme.main}>\r\n                    <Toolbar />\r\n                    <div className='hero is-black is-bold is-fullheight'>\r\n                        <div className='hero-body'>\r\n                            <div className='container notification has-text-centered' style={ctx.theme.level1}>\r\n                                <FaExclamationTriangle size={50} className=\"has-text-warning\" />\r\n                                <p className='title is-uppercase'> {props.children || \"Page Not Found!\"}</p>\r\n                                <br />\r\n                                <br />\r\n                                <NavLink to={props.redirect || '/'} className='button is-danger is-outlined'>{props.redirectText || 'Go to Homepage!'}</NavLink>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}","import React, { useContext } from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport { GiShirt, GiSmartphone, GiCityCar, GiGlassCelebration, GiVendingMachine } from 'react-icons/gi'\r\nimport { NavLink, Redirect } from 'react-router-dom'\r\nimport links from '../lib/links'\r\n\r\nexport const Home = () => {\r\n    const ctx = useContext(ApplicationContext)\r\n    const [current, update] = React.useState<number>(0)\r\n\r\n    if (ctx.signedIn()) {\r\n        return <Redirect to={links.myDeals} />\r\n    }\r\n\r\n    const startCount = (destination, step = 10) => {\r\n        const intervalID = setInterval(() => {\r\n            if (destination !== current) {\r\n                const newVal = current + step\r\n                if (newVal > destination) {\r\n                    update(destination)\r\n                    clearInterval(intervalID)\r\n                } else {\r\n                    update(newVal)\r\n                }\r\n            } else {\r\n                clearInterval(intervalID)\r\n            }\r\n        }, Math.max(Math.ceil(destination / step)), 0)\r\n    }\r\n\r\n    ctx.getVendorCount().then((d) => startCount(d))\r\n\r\n    return (\r\n        <div style={ctx.theme.main}>\r\n            <Toolbar />\r\n            <div className='hero is-fullheight is-light is-bold'>\r\n                <div className='hero-body has-text-centered has-background'>\r\n                    <div className='container'>\r\n                        <p className='title has-text-weight-bold is-2'>Welcome to {ctx.name}</p>\r\n                        <p className='subtitle'>{ctx.description}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='hero is-medium is-primary is-bold'>\r\n                <div className='hero-body has-text-centered'>\r\n                    <div className='container'>\r\n                        <p className='title is-capitalized'>\r\n                            Gain access to thousands of great student discounts!\r\n                                </p>\r\n                        <div className='tile is-ancestor section'>\r\n                            <NavLink to={links.Fashion} className='tile is-parent'>\r\n                                <div className='tile is-child box'>\r\n                                    <GiShirt className='is-size-1' />\r\n                                    <p className='subtitle has-text-black has-text-weight-bold'>Fashion</p>\r\n                                </div>\r\n                            </NavLink>\r\n                            <NavLink to={links.Technology} className='tile is-parent'>\r\n                                <div className='tile is-child box'>\r\n                                    <GiSmartphone className='is-size-1' />\r\n                                    <p className='subtitle has-text-black has-text-weight-bold'>Technology</p>\r\n                                </div>\r\n                            </NavLink>\r\n                            <NavLink to={links.Transport} className='tile is-parent'>\r\n                                <div className='tile is-child box'>\r\n                                    <GiCityCar className='is-size-1' />\r\n                                    <p className='subtitle has-text-black has-text-weight-bold'>Transportation</p>\r\n                                </div>\r\n                            </NavLink>\r\n                            <NavLink to={links.LifeStyle} className='tile is-parent'>\r\n                                <div className='tile is-child box'>\r\n                                    <GiGlassCelebration className='is-size-1' />\r\n                                    <p className='subtitle has-text-black has-text-weight-bold'>Events &amp; Lifestyle</p>\r\n                                </div>\r\n                            </NavLink>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='hero is-medium is-dark'>\r\n                <div className='hero-body has-text-centered'>\r\n                    <div className='container'>\r\n                        <GiVendingMachine className='is-size-1' />\r\n                        <p className='subtitle'>Vendors Registered</p>\r\n                        <p className='title has-text-weight-bold is-1'>{current}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport { Footer } from '../components/footer'\r\nimport { FaEnvelope, FaExclamationCircle, FaEyeSlash, FaEye, FaKey, FaUser, FaBriefcase } from 'react-icons/fa'\r\nimport { NavLink, Redirect } from 'react-router-dom'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nexport const Login = ({ redirectPath, registerPath, onLogin }: { onLogin: (a) => Promise<any>, redirectPath: string, registerPath: string }) => {\r\n    const [state, updateState] = React.useState({ error: null, email: \"\", password: \"\", isLoading: false })\r\n    const [showPassword, updateShowPassword] = React.useState(false)\r\n    const [redirect, setRedirect] = React.useState(false)\r\n    const { addToast } = useToasts()\r\n\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <form onSubmit={(ev) => {\r\n                    ev.preventDefault(); ev.stopPropagation();\r\n                    updateState({ ...state, isLoading: true })\r\n\r\n                    onLogin(state).then(() => {\r\n                        console.log('login success')\r\n                        addToast('Login Success!', { appearance: 'success', autoDismiss: true })\r\n                        updateState({ ...state, isLoading: false })\r\n\r\n                        return setRedirect(true)\r\n                    })\r\n                        .catch(e => {\r\n                            updateState({ ...state, isLoading: false, error: e.message })\r\n                        })\r\n                }}>\r\n                    {redirect ? <Redirect to={redirectPath} /> : null}\r\n                    <div className=\"card\">\r\n                        <section className=\"card-content\">\r\n                            {state.error ?\r\n                                <div className='notification is-warning'>\r\n                                    <FaExclamationCircle /> {state.error}\r\n                                </div>\r\n                                : null}\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Email</label>\r\n                                </div>\r\n                                <div className='field-body'>\r\n                                    <div className=\"field\">\r\n                                        <div className=\"control has-icons-left\">\r\n                                            <input required name='email' value={state.email} onChange={(ev) => updateState({ ...state, email: ev.target.value })} className=\"input\" type=\"email\" placeholder=\"Enter email address\" />\r\n                                            <span className=\"icon is-small is-left\">\r\n                                                <FaEnvelope />\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Password</label>\r\n                                </div>\r\n                                <div className='field-body'>\r\n                                    <div className=\"field has-addons\">\r\n                                        <p className=\"control is-expanded\">\r\n                                            <input required name='password' value={state.password} onChange={(ev) => updateState({ ...state, password: ev.target.value })} className=\"input\" type={showPassword ? 'text' : 'password'} />\r\n                                        </p>\r\n                                        <p className=\"control\">\r\n                                            <button tabIndex={-1} type='button' className=\"button\" onClick={() => updateShowPassword(!showPassword)}>{showPassword ? <FaEyeSlash /> : <FaEye />}</button>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field'>\r\n                                <div className='control'>\r\n                                    <button type='submit' className={`is-success button ${state.isLoading ? 'is-loading' : ''}`} disabled={state.isLoading}>Login</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </section>\r\n\r\n                        <footer className=\"card-footer is-unselectable\">\r\n                            <NavLink to={registerPath} exact className=\"card-footer-item\">Create New Account</NavLink>\r\n                        </footer>\r\n                    </div>\r\n                </form>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const Register = ({ redirectPath, onRegister, vendor, loginPath }: { loginPath: string, vendor?: boolean, onRegister: (a) => Promise<any>, redirectPath: string }) => {\r\n    const [state, updateState] = React.useState({ error: '', email: \"\", password: \"\", passwordVerify: '', isLoading: false, showPassword: false, displayName: '', companyName: '' })\r\n    const { addToast } = useToasts()\r\n    const [redirect, setRedirect] = React.useState(false)\r\n\r\n\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <form onSubmit={(ev) => {\r\n                    ev.preventDefault(); ev.stopPropagation();\r\n\r\n                    if (state.password !== state.passwordVerify) return updateState({ ...state, error: 'Passwords do not match!' })\r\n\r\n                    updateState({ ...state, isLoading: true })\r\n\r\n                    onRegister(state).then(() => {\r\n                        addToast('Registration Success!', { appearance: 'success', autoDismiss: true })\r\n                        updateState({ ...state, isLoading: false })\r\n                        return setRedirect(true)\r\n                    })\r\n                        .catch(e => {\r\n                            updateState({ ...state, isLoading: false, error: e.message })\r\n                        })\r\n                }}>\r\n                    {redirect ? <Redirect to={redirectPath} /> : null}\r\n\r\n                    <div className=\"card\">\r\n                        <section className=\"card-content\">\r\n                            {state.error ?\r\n                                <div className='notification is-warning'>\r\n                                    <FaExclamationCircle /> {state.error}\r\n                                </div>\r\n                                : null}\r\n\r\n                            {vendor ?\r\n                                <div className='field is-horizontal'>\r\n                                    <div className=\"field-label\">\r\n                                        <label className=\"label\">Company Name</label>\r\n                                    </div>\r\n                                    <div className='field-body'>\r\n                                        <div className=\"field\">\r\n                                            <div className=\"control has-icons-left\">\r\n                                                <input required name='companyname' value={state.companyName} onChange={(ev) => updateState({ ...state, companyName: ev.target.value })} className=\"input\" type=\"text\" placeholder=\"Enter company name\" />\r\n                                                <span className=\"icon is-small is-left\">\r\n                                                    <FaBriefcase />\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> : null}\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Name</label>\r\n                                </div>\r\n                                <div className='field-body'>\r\n                                    <div className=\"field\">\r\n                                        <div className=\"control has-icons-left\">\r\n                                            <input required name='name' value={state.displayName} onChange={(ev) => updateState({ ...state, displayName: ev.target.value })} className=\"input\" type=\"person\" placeholder=\"Enter your fullname\" />\r\n                                            <span className=\"icon is-small is-left\">\r\n                                                <FaUser />\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Email</label>\r\n                                </div>\r\n                                <div className='field-body'>\r\n                                    <div className=\"field\">\r\n                                        <div className=\"control has-icons-left\">\r\n                                            <input required name='email' value={state.email} onChange={(ev) => updateState({ ...state, email: ev.target.value })} className=\"input\" type=\"email\" placeholder=\"Enter email address\" />\r\n                                            <span className=\"icon is-small is-left\">\r\n                                                <FaEnvelope />\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Password</label>\r\n                                </div>\r\n                                <div className='field-body'>\r\n                                    <div className=\"field has-addons\">\r\n                                        <p className=\"control is-expanded has-icons-left\">\r\n                                            <input required name='password' value={state.password} onChange={(ev) => updateState({ ...state, password: ev.target.value })} className=\"input\" type={state.showPassword ? 'text' : 'password'} />\r\n                                            <span className=\"icon is-small is-left\">\r\n                                                <FaKey />\r\n                                            </span>\r\n                                        </p>\r\n                                        <p className=\"control\">\r\n                                            <button disabled={state.isLoading} tabIndex={-1} className=\"button\" type=\"button\" onClick={() => updateState({ ...state, showPassword: !state.showPassword })}>{state.showPassword ? <FaEyeSlash /> : <FaEye />}</button>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Confirm Password</label>\r\n                                </div>\r\n                                <div className='field-body'>\r\n\r\n                                    <div className='field'>\r\n                                        <p className=\"control has-icons-left\">\r\n                                            <input required name='password' value={state.passwordVerify} onChange={(ev) => updateState({ ...state, passwordVerify: ev.target.value })} className=\"input\" type={state.showPassword ? 'text' : 'password'} />\r\n                                            <span className=\"icon is-small is-left\">\r\n                                                <FaKey />\r\n                                            </span>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field'>\r\n                                <div className='control'>\r\n                                    <button type='submit' className={`is-success button ${state.isLoading ? 'is-loading' : ''}`} disabled={state.isLoading}>Join</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </section>\r\n\r\n                        <footer className=\"card-footer\">\r\n                            <NavLink to={loginPath} exact className=\"card-footer-item\">Login with existing account</NavLink>\r\n                        </footer>\r\n                    </div>\r\n                </form>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}","import React from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport { Footer } from '../components/footer'\r\nimport { Login } from '../components/auth'\r\n\r\nexport const LoginUser = () => {\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <div style={ctx.theme.main}>\r\n                    <Toolbar />\r\n                    <div className='section container'>\r\n                        <h2 className='is-title is-size-2 has-text-centered'>Login with username and password</h2>\r\n\r\n                        <div className='section'>\r\n                            <Login onLogin={(props) => {\r\n                                return ctx.loginStudent(props)\r\n                            }} redirectPath=\"/\" registerPath={'/user/register'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}\r\n\r\nexport const LoginVendor = () => {\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <div style={ctx.theme.main}>\r\n                    <Toolbar />\r\n                    <div className='section container'>\r\n                        <h2 className='is-title is-size-2 has-text-centered'>Login with username and password</h2>\r\n\r\n                        <div className='section'>\r\n                            <Login onLogin={props => { return ctx.loginVendor(props) }} redirectPath=\"/\" registerPath={'/vendor/register'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}","import React, { useContext, useState } from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport { Footer } from '../components/footer'\r\nimport { Login, Register } from '../components/auth'\r\nimport { Redirect } from 'react-router'\r\n\r\nexport const Logout = () => {\r\n    const ctx = useContext(ApplicationContext)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    if (!ctx.signedIn()) {\r\n        // return <Redirect to='/' />\r\n    }\r\n\r\n    ctx.logout().then(() => setLoading(false))\r\n\r\n    return (\r\n        <div style={ctx.theme.main}>\r\n            <Toolbar />\r\n            <div className='section container'>\r\n\r\n                <div className='section'>\r\n                    <div className='hero is-fullheight'>\r\n                        <div className='hero-body'>\r\n                            <h2 className='is-title is-size-2'>Thank you for using {ctx.name}!</h2>\r\n                            {loading ? <progress className=\"progress is-small is-info\" max=\"100\">loading...</progress> : null}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport { Footer } from '../components/footer'\r\nimport { Login, Register } from '../components/auth'\r\n\r\nexport const RegisterUser = () => {\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <div style={ctx.theme.main}>\r\n                    <Toolbar />\r\n                    <div className='section container'>\r\n                        <h2 className='is-title is-size-2 has-text-centered'>Create a new account</h2>\r\n\r\n                        <div className='section'>\r\n                            <Register onRegister={props => ctx.registerUser(props)} redirectPath=\"/\" loginPath={'/user/login'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}\r\n\r\nexport const RegisterVendor = () => {\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <div style={ctx.theme.main}>\r\n                    <Toolbar />\r\n                    <div className='section container'>\r\n                        <h2 className='is-title is-size-2 has-text-centered'>Create a new vendor account</h2>\r\n\r\n                        <div className='section'>\r\n                            <Register vendor onRegister={props => ctx.registerVendor(props)} redirectPath=\"/\" loginPath={'/vendor/login'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { ApplicationContext } from \"../lib\";\r\nimport { Deal } from \"../lib/deals\";\r\nimport { useParams, useLocation, useHistory } from \"react-router\";\r\nimport { LoadingComponent } from \"./loading\";\r\nimport { ErrorPage } from \"./error\";\r\nimport Toolbar from \"../components/toolbar\";\r\nimport validator from \"validator\";\r\nimport { GiVendingMachine } from \"react-icons/gi\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { FaCloud, FaStore, FaClock } from \"react-icons/fa\";\r\nimport { Twitter, Mail, Whatsapp } from \"react-social-sharing\";\r\nimport moment, { Moment } from \"moment\";\r\nimport { FiTrash, FiCopy } from \"react-icons/fi\";\r\nimport { myAnalytics } from \"../lib/firebase\";\r\nimport { User } from \"../lib/user\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport links from \"../lib/links\";\r\n\r\n\r\nexport const DealDetails = () => {\r\n    const ctx = useContext(ApplicationContext)\r\n    const { id: dealID } = useParams()\r\n    const { state: locationState } = useLocation()\r\n    const isAllowed = ctx.user && !ctx.user.isAnonymous\r\n    const [state, setState] = useState({\r\n        loading: locationState && locationState.deal ? false : true,\r\n        error: isAllowed ? \"\" : \"You are not authenticated! Please login to view details!\",\r\n        deal: isAllowed && locationState ? locationState.deal : null\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (!isAllowed) return\r\n\r\n        if (state.deal) {\r\n            // if deal is already resolved, do not take any action in effect :)!\r\n            return\r\n        }\r\n\r\n        if (!dealID) {\r\n            setState({ ...state, loading: false, error: \"Deal could not be found!\" })\r\n        }\r\n        else {\r\n            ctx.dealMan.getDeal(dealID).then(deal => {\r\n                setState({ ...state, loading: false, deal, error: \"\" })\r\n            }).catch(e => setState({ ...state, error: e.message, loading: false, deal: null }))\r\n        }\r\n        return\r\n    }, [dealID, isAllowed, state, ctx.dealMan, ctx.user])\r\n\r\n    return (\r\n        state.loading ? (\r\n            <div style={ctx.theme.main}>\r\n                <Toolbar />\r\n                <div className='container'>\r\n                    <div className='section'>\r\n\r\n                        <LoadingComponent phrase='Fetching details' />\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : state.error || !state.deal ? (\r\n            <ErrorPage>{state.error}</ErrorPage>\r\n        ) : (\r\n                    <DealContents deal={state.deal} />\r\n                )\r\n    )\r\n}\r\n\r\nconst DealContents = ({ deal }: { deal: null | Deal }) => {\r\n    const ctx = useContext(ApplicationContext)\r\n    const { addToast } = useToasts()\r\n    const { goBack } = useHistory()\r\n    const [state, setState] = useState({ loading: false })\r\n\r\n    if (!deal) throw new Error(\"Dunno how this happened!!!!\")\r\n\r\n    if (ctx.isStudent()) {\r\n        const stud = ctx.user as User\r\n        if (!stud.dealExists(deal.id)) {\r\n            return <ErrorPage>You have to accept a deal before viewing!</ErrorPage>\r\n        }\r\n    }\r\n\r\n\r\n    myAnalytics.logEvent('view_item', { item: deal.id })\r\n\r\n    let expiryDate: Moment | undefined = deal.meta && deal.meta.expiryDate ? moment(new Date(deal.meta.expiryDate)) : undefined\r\n\r\n    if (deal.meta && deal.meta.actionUrl && validator.isURL(deal.meta.actionUrl, { protocols: [\"https\"], require_protocol: true })) {\r\n        return (\r\n            <div style={{ ...ctx.theme.main, display: 'flex' }}>\r\n                <Toolbar />\r\n                <div className='content' style={{ flex: 1 }}>\r\n                    <iframe src={deal.meta.actionUrl} title={deal.title} seamless style={{ border: 'none', width: '100%', height: '100%' }} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n\r\n        <div style={ctx.theme.main}>\r\n            <Toolbar />\r\n            <figure className=\"image is-unselectable is-16by9\">\r\n                <img src={deal.cover || require('../logo.svg')} alt={deal.description} />\r\n            </figure>\r\n            <div className=\"container is-unselectable has-text-centered\">\r\n                <div className='container'>\r\n                    <nav className=\"breadcrumb is-centered\" aria-label=\"breadcrumbs\">\r\n                        <ul>\r\n                            <li><NavLink to={links.deals}>Deals</NavLink></li>\r\n                            <li className=\"is-active\"><a aria-current=\"page\">{deal.title.length > 12 ? deal.title.substr(0, 12).padEnd(15, '...') : deal.title}</a></li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n                <div className='section'>\r\n                    <div className='content'>\r\n                        {deal.meta ?\r\n                            <div className='title is-size-2 has-text-weight-bold'>\r\n                                {validator.equals(deal.meta!.unit, 'FLAT') ? (\r\n                                    `\\u20A6 ${deal.value.toLocaleString()}`\r\n                                ) : `${deal.value}%`}\r\n                            </div>\r\n                            : null}\r\n                        <i></i>\r\n                        <p className=\"subtitle is-centered tags\">\r\n                            <span className={`tag ${deal.inStore ? 'is-primary' : 'is-link'}`}>{deal.inStore ? <><FaStore />&nbsp; instore</> : <><FaCloud />&nbsp; online</>}</span>\r\n                            {expiryDate ?\r\n                                <span className={`tag subtitle ${expiryDate.isBefore(Date.now()) ? 'is-danger' : 'is-warning'}`} title={`Deal set to expire on ${expiryDate.toLocaleString()}`}><FaClock />&nbsp; {expiryDate.isBefore(Date.now()) ? 'Expired' : `Expiring ${expiryDate.calendar()}`}</span>\r\n                                : null}\r\n                        </p>\r\n                    </div>\r\n                    <div className='section'>\r\n                        <p className='title is-4'>{deal.title}</p>\r\n                        <p className='subtitle'>{deal.description}</p>\r\n\r\n                        <div className=\"level is-mobile\">\r\n                            <div className=\"level-item\">\r\n                                <div>\r\n                                    <p className='heading is-uppercase'><GiVendingMachine /> Company name</p>\r\n                                    <p className=\"subtitle\">{deal.author.CompanyName}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"content\">\r\n                            {deal.meta && deal.meta.actionUrl ?\r\n                                <>\r\n                                    <div className='field has-addons has-addons-centered'>\r\n                                        <div className='control'>\r\n                                            <input className='input is-uppercase is-medium' id='actionUrl' readOnly type='text' value={deal.meta?.actionUrl} />\r\n                                        </div>\r\n                                        <div title='Copy code' className='control'>\r\n                                            <button className='button is-medium' onClick={() => {\r\n                                                const input: HTMLInputElement | any = document.getElementById('actionUrl')\r\n                                                if (input) {\r\n                                                    input.focus()\r\n                                                    input.select()\r\n                                                    if (navigator.clipboard) navigator.clipboard.writeText(input.value).then(() => addToast('Copied!', { appearance: 'success', autoDismiss: true }))\r\n                                                    else if (document.execCommand('copy', true, input.value)) addToast('Copied!', { appearance: 'success', autoDismiss: true })\r\n                                                }\r\n                                            }}><FiCopy /></button>\r\n                                        </div>\r\n                                        {ctx.user?.isVendor && deal.author.id === ctx.user.uid ? (\r\n                                            <div title='Delete deal' className='control'>\r\n                                                <button className={`button is-medium is-danger ${state.loading ? 'is-loading' : ''}`} onClick={async () => {\r\n                                                    if (!window.confirm(`You have tried to delete deal with title \"${deal.title}\".\\r\\nDo you want to delete this deal?`)) return\r\n\r\n                                                    setState({ loading: true })\r\n                                                    ctx.dealMan.removeDeal(deal).then(() => addToast(\"Deal successfully removed!\", { appearance: 'success', autoDismiss: true })).catch(e => {\r\n                                                        addToast(e.message || \"An error occurred!\", { appearance: 'error', autoDismiss: true })\r\n                                                    }).finally(() => setState({ loading: true }))\r\n                                                }}><FiTrash /></button>\r\n                                            </div>\r\n                                        ) : null}\r\n                                    </div>\r\n                                </>\r\n                                : null}\r\n                        </div>\r\n                    </div>\r\n                    <Twitter link={window.location.href} message={deal.title} />\r\n                    <Mail link={window.location.href} subject={deal.title} />\r\n                    <Whatsapp link={window.location.href} message={deal.title} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport { GiShirt, GiSmartphone, GiCityCar, GiGlassCelebration, GiVendingMachine } from 'react-icons/gi'\r\nimport { NavLink, Redirect } from 'react-router-dom'\r\nimport links from '../lib/links'\r\nimport { ErrorPage } from './error'\r\n\r\nexport const Profile = () => {\r\n    const ctx = useContext(ApplicationContext)\r\n    const [current, update] = React.useState<number>(0)\r\n\r\n    if (!ctx.user || ctx.user.isAnonymous) {\r\n        return <ErrorPage>You must be authenticated to view this page!</ErrorPage>\r\n    }\r\n\r\n    return (\r\n        <div style={ctx.theme.main}>\r\n            <Toolbar />\r\n            <div className='container'>\r\n                <div className='section'>\r\n                    <div className='card'>\r\n                        <div className='card-content'>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\nimport { FaThumbsUp } from 'react-icons/fa';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { useToasts } from \"react-toast-notifications\";\nimport './App.css';\nimport { Footer } from './components/footer';\nimport { ApplicationContext, DefaultAppContext } from './lib';\nimport links from './lib/links';\nimport { AllDeals, MyDeals } from './pages/deal';\nimport { ErrorPage } from './pages/error';\nimport { Home } from './pages/home';\nimport { Loading } from './pages/loading';\nimport { LoginUser, LoginVendor } from './pages/login';\nimport { Logout } from './pages/logout';\nimport { RegisterUser, RegisterVendor } from './pages/register';\nimport { DealDetails } from './pages/dealDetails';\nimport { Profile } from './pages/profile';\n\n\nconst App: React.FC = () => {\n  const [ready, setReady] = useState(false)\n  const [online, setOnline] = useState(navigator.onLine)\n\n  const { addToast } = useToasts()\n  window.onoffline = () => {\n    if (!online) return\n    setOnline(false)\n    addToast(\"You are offline!\", {\n      appearance: 'warning',\n      autoDismiss: true,\n      pauseOnHover: true\n    })\n  }\n  window.ononline = () => {\n    if (online) return\n\n    setOnline(true)\n    addToast(<p>Welcome back to the Internet &nbsp;<FaThumbsUp /></p>, {\n      appearance: 'info',\n      autoDismiss: true,\n      pauseOnHover: true\n    })\n  }\n\n  return (\n    <ApplicationContext.Provider value={DefaultAppContext}  >\n      <ApplicationContext.Consumer>{ctx => {\n        ctx.isReady().then(isReady => setReady(isReady))\n\n        return (\n          <BrowserRouter>\n            {!ready ? <Loading /> : (\n              <>\n                <Switch>\n                  <Route strict exact path='/deals/view/:id' component={DealDetails} />\n                  <Route strict exact path={links.deals} component={AllDeals} />\n                  <Route strict exact path={links.myDeals} component={MyDeals} />\n                  {/* <Route strict exact path='/deals/:category' component={} /> */}\n                  <Route strict exact path=\"/vendor/register\" component={RegisterVendor} />\n                  <Route strict exact path=\"/user/register\" component={RegisterUser} />\n                  <Route strict exact path=\"/vendor/login\" component={LoginVendor} />\n                  <Route strict exact path=\"/user/login\" component={LoginUser} />\n                  <Route strict exact path=\"/:user/logout\" component={Logout} />\n                  <Route strict exact path={links.profile} component={Profile} />\n                  <Route strict exact path=\"/\" component={Home} />\n                  <Route component={ErrorPage} />\n                </Switch>\n                <Footer />\n              </>\n            )}\n          </BrowserRouter>\n        )\n      }}</ApplicationContext.Consumer>\n    </ApplicationContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ToastProvider } from 'react-toast-notifications';\n\nReactDOM.render(\n    <ToastProvider placement={'bottom-center'}>\n        <App />\n    </ToastProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}