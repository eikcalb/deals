{"version":3,"sources":["logo.svg","lib/firebase.ts","lib/util.ts","lib/user.ts","lib/theme.ts","lib/deals.ts","lib/index.ts","components/footer.tsx","lib/links.ts","components/toolbar.tsx","pages/deal.tsx","pages/error.tsx","pages/home.tsx","pages/loading.tsx","components/auth.tsx","pages/login.tsx","pages/logout.tsx","pages/register.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","analytics","log","console","functions","auth","usersRef","database","ref","vendorsRef","dealsRef","libraryRef","User","userObj","uid","displayName","fUser","isAnonymous","this","email","password","currentUser","signInAnonymously","Error","credential","EmailAuthProvider","linkWithCredential","then","usercred","a","async","user","updateProfile","child","set","catch","e","delete","error","message","signInWithEmailAndPassword","cred","errorCode","code","Vendor","companyName","register","httpsCallable","result","data","success","Promise","res","rej","once","snapshot","exists","val","signOut","DEFAULT_THEME","main","background","color","minHeight","overflowY","paddingTop","level1","header","boxShadow","footer","padding","DealManager","ctx","context","useMock","info","signedIn","MOCK_DEALS","on","c","deals","item","push","startAt","dealsPerPage","lastItemIndex","findIndex","id","slice","Math","max","orderByKey","limitToLast","deal","isVendor","createDeal","title","validator","isLength","min","description","value","cover","meta","unit","equals","actionUrl","isURL","protocols","expiryDate","isAfter","toString","author","CompanyName","inStore","DefaultAppContext","name","version","theme","dealMan","_isReady","document","onAuthStateChanged","session","JSON","parse","localStorage","getItem","undefined","userDetails","login","vendorDetails","setItem","stringify","removeItem","fetch","fBase","json","vendors","Object","keys","length","ApplicationContext","createContext","Footer","Consumer","className","style","Date","getFullYear","Toolbar","hideMenu","useContext","React","useState","isActive","updateActive","onClick","isActiveNow","setTimeout","activeClassName","exact","to","links","DealWidget","blank","expiryTime","link","type","loading","state","setState","onSubmit","preventDefault","stopPropagation","onChange","target","tabIndex","required","minLength","placeholder","files","size","file","accept","alt","maxLength","rows","pattern","MyDeals","AllDeals","isLoading","getDeals","map","key","y","window","scrollY","scroll","scrollX","PureComponent","contextType","DealComponent","src","require","ErrorPage","props","children","redirect","redirectText","Home","current","update","getVendorCount","d","destination","step","intervalID","setInterval","newVal","clearInterval","ceil","startCount","LoadingPhrases","Loading","round","random","phrase","setPhrase","intID","useEffect","Login","redirectPath","registerPath","onLogin","updateState","showPassword","updateShowPassword","setRedirect","addToast","useToasts","ev","appearance","autoDismiss","disabled","Register","onRegister","vendor","loginPath","passwordVerify","LoginUser","loginStudent","LoginVendor","loginVendor","Logout","setLoading","logout","RegisterUser","registerUser","RegisterVendor","registerVendor","App","ready","setReady","navigator","onLine","online","setOnline","onoffline","pauseOnHover","ononline","Provider","isReady","basename","strict","path","component","Boolean","location","hostname","match","ReactDOM","render","placement","getElementById","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.120b3aeb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import firebase from \"firebase\";\r\nexport const firebaseConfig = {\r\n    apiKey: \"AIzaSyDRlJC_SV_wCL5eTDxVY24e3mHVGFJLNxg\",\r\n    authDomain: \"unidays-3205e.firebaseapp.com\",\r\n    databaseURL: \"https://unidays-3205e.firebaseio.com\",\r\n    projectId: \"unidays-3205e\",\r\n    storageBucket: \"unidays-3205e.appspot.com\",\r\n    messagingSenderId: \"127396561143\",\r\n    appId: \"1:127396561143:web:a032c8f3b20540fc4e53f2\",\r\n    measurementId: \"G-6HPPCPKTZ6\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();","export function log(...args: any[]){\r\n    console.log(...args)\r\n}","import firebase from \"firebase\"\r\nimport { log } from \"./util\"\r\n\r\nconst functions = firebase.functions()\r\nexport const auth = firebase.auth()\r\nexport const usersRef = firebase.database().ref('users')\r\nexport const vendorsRef = firebase.database().ref('vendors')\r\nexport const dealsRef = firebase.database().ref('deals')\r\nexport const libraryRef = firebase.database().ref('library')\r\n\r\nexport class User {\r\n    uid: string\r\n    displayName: string\r\n    protected fUser: firebase.User\r\n    readonly isAnonymous: boolean = false\r\n\r\n    constructor(userObj: firebase.User) {\r\n        this.uid = userObj.uid\r\n        this.displayName = userObj.displayName ? userObj.displayName : \"\"\r\n        this.fUser = userObj\r\n        this.isAnonymous = this.fUser.isAnonymous\r\n    }\r\n\r\n    isVendor(): boolean {\r\n        return false\r\n    }\r\n\r\n\r\n    /**\r\n     * All access to app is anonymous by default.\r\n     * \r\n     * Upon registration, the user account is linked to the current aonymous user.\r\n     */\r\n    static async register({ displayName, email, password }: { email: string, password: string, displayName: string }) {\r\n        if (!auth.currentUser) {\r\n            auth.signInAnonymously()\r\n            throw new Error(\"This is weird! Application must start with atleast an anonymous user!\")\r\n        }\r\n\r\n        const credential = firebase.auth.EmailAuthProvider.credential(email, password)\r\n        return auth.currentUser.linkWithCredential(credential).then(async (usercred) => {\r\n            if (!usercred.user) {\r\n                throw new Error(\"User should not be empty!\")\r\n            }\r\n\r\n            const user = usercred.user;\r\n            console.log(\"Anonymous account successfully upgraded\", user);\r\n\r\n            await user.updateProfile({ displayName }).then(() => usersRef.child(user.uid).set({\r\n                displayName,\r\n                email\r\n            })\r\n            ).catch(e => {\r\n                log(e)\r\n                user!.delete()\r\n                throw new Error(\"Could not register user!\")\r\n            })\r\n\r\n            return new User(user)\r\n        }, (error) => {\r\n            console.log('Error upgrading anonymous account', error)\r\n            throw new Error(error.message);\r\n        })\r\n    }\r\n\r\n    static async login(email: string, password: string) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n            .then(cred => {\r\n                if (!cred.user) throw new Error(\"User not found!\")\r\n                return new User(cred.user)\r\n            })\r\n            .catch((error) => {\r\n                // Handle Errors here.\r\n                var errorCode = error.code;\r\n\r\n                console.log(error)\r\n                if (errorCode === 'auth/wrong-password') {\r\n                    throw new Error('Wrong password.');\r\n                } else {\r\n                    throw error;\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n/**\r\n * Vendor is an organization with access to publish and manage deals.\r\n */\r\nexport class Vendor extends User {\r\n    companyName: string\r\n\r\n    constructor(userObj: firebase.User, companyName: string) {\r\n        super(userObj)\r\n        this.companyName = companyName\r\n    }\r\n\r\n    isVendor() {\r\n        return true\r\n    }\r\n\r\n    /**`\r\n     * Registers a new vendor.\r\n     * \r\n     * Vendor registration is different from user registration and only one account type can be signedin at a time.\r\n     */\r\n    static async register({ companyName, displayName, email, password }: { companyName: string, email: string, password: string, displayName: string }) {\r\n        if (!auth.currentUser) {\r\n            auth.signInAnonymously()\r\n            throw new Error(\"This is weird! Application must start with atleast an anonymous user!\")\r\n        }\r\n\r\n        const register = functions.httpsCallable('vendorSignup')\r\n\r\n        try {\r\n            const result = await register({ email, password, displayName, companyName })\r\n            console.log(result)\r\n\r\n            if (!result.data.success) throw new Error('Something went wrong!')\r\n\r\n            const cred = await auth.signInWithEmailAndPassword(email, password)\r\n            if (!cred.user) throw new Error('Something went horribly wrong!')\r\n\r\n            return new Vendor(cred.user, companyName)\r\n        } catch (e) {\r\n            console.error(e)\r\n            throw e\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Login authenticates the current user as a vendor.\r\n     * \r\n     * If the company name of this vendor account is not found an error is thrown.\r\n     * It is an invalid action to create vendors without populating the company name.\r\n     */\r\n    static async login(email: string, password: string) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n            .then(async cred => {\r\n                if (!cred.user) throw new Error(\"User not found!\")\r\n\r\n                const companyName: string = await new Promise((res, rej) => {\r\n                    vendorsRef.child(`${cred.user!.uid}/companyName`).once('value', (snapshot) => {\r\n                        if (snapshot.exists()) {\r\n                            return res(snapshot.val())\r\n                        }\r\n                        //Vendor cannot exist without having a company name!\r\n                        auth.signOut()\r\n                        rej(new Error('Vendor account not found! Did you mean to login as a user?'))\r\n                    })\r\n                })\r\n                return new Vendor(cred.user, companyName)\r\n            })\r\n            .catch((error) => {\r\n                // Handle Errors here.\r\n                var errorCode = error.code;\r\n\r\n                console.log(error)\r\n                if (errorCode === 'auth/wrong-password') {\r\n                    throw new Error('Wrong password.');\r\n                } else {\r\n                    throw error;\r\n                }\r\n            })\r\n    }\r\n}","export interface Theme {\r\n    /**\r\n     * Main is the lowest level of the screen. This is the reall background of the application.\r\n     */\r\n    main?: React.CSSProperties,\r\n    level1?: React.CSSProperties\r\n    header?: React.CSSProperties\r\n    footer?: React.CSSProperties\r\n}\r\n\r\nexport const DEFAULT_THEME: Theme = {\r\n    main: {\r\n        background: \"#001\",\r\n        color: \"#efefef\",\r\n        minHeight: '100%',\r\n        overflowY: 'scroll',\r\n        paddingTop: '3.25rem'\r\n    },\r\n    level1: {\r\n        background: \"#222\"\r\n    },\r\n    header: {\r\n        background: \"#353545\",\r\n        color: '#fefefe',\r\n        boxShadow: '#1a1a1a88 0 1px 0.1em 0.1em'\r\n    },\r\n    footer: {\r\n        padding: '1em',\r\n        color: '#555'\r\n    }\r\n}","import { Context } from \"react\"\r\nimport { AppContext } from \".\"\r\nimport { dealsRef, libraryRef } from \"./user\"\r\nimport validator from \"validator\";\r\nimport { functions } from \"firebase\";\r\n\r\nexport class DealManager {\r\n    protected context: AppContext\r\n\r\n    /**\r\n     * Use mock data in application deal management.\r\n     * \r\n     * @internal Only used for testing.\r\n     */\r\n    protected useMock: boolean = true\r\n\r\n    constructor(ctx: AppContext) {\r\n        if (process.env.NODE_ENV === 'production' && this.useMock) {\r\n            console.info('Bail application. Wrong code sent for production!!!!!!')\r\n            // throw new Error('Production environment should not use mock data!')\r\n        }\r\n\r\n        this.context = ctx\r\n    }\r\n\r\n    async getMyDeals() {\r\n        if (!this.context.signedIn()) return []\r\n\r\n        if (this.useMock) return MOCK_DEALS\r\n\r\n        return await new Promise(res => {\r\n            libraryRef.child(`${this.context.user!.uid}`).on('value', async snapshot => {\r\n                if (!snapshot.exists()) return res([])\r\n\r\n                const deals = snapshot.val()\r\n                console.log(deals)\r\n                const result: Deal[] = []\r\n\r\n                for (let c in deals) {\r\n                    const item = deals[c]\r\n                    result.push(item)\r\n                }\r\n\r\n                return res(result)\r\n            })\r\n        }\r\n        )\r\n    }\r\n\r\n    async getDeals(startAt?: string) {\r\n        const dealsPerPage = 5\r\n\r\n        if (startAt) {\r\n            if (this.useMock) {\r\n                const lastItemIndex = MOCK_DEALS.findIndex(item => item.id === startAt)\r\n                console.log(lastItemIndex, startAt, MOCK_DEALS)\r\n                return MOCK_DEALS.slice(lastItemIndex > 0 ? lastItemIndex + 1 : 0, (Math.max(lastItemIndex, 0) + 1) + dealsPerPage)\r\n            }\r\n\r\n            return await dealsRef.orderByKey().limitToLast(dealsPerPage + 1).startAt(startAt).once('value').then(async snapshot => {\r\n                if (!snapshot.exists()) return []\r\n\r\n                const deals = snapshot.val()\r\n                console.log('all deals', deals)\r\n                const result: Deal[] = []\r\n\r\n                for (let c in deals) {\r\n                    if (c === startAt) continue\r\n\r\n                    const item = deals[c]\r\n                    result.push(item)\r\n                }\r\n\r\n                return result\r\n            })\r\n        }\r\n\r\n        if (this.useMock) return MOCK_DEALS.slice(0, dealsPerPage)\r\n\r\n        return await dealsRef.orderByKey().limitToLast(dealsPerPage).once('value').then(async snapshot => {\r\n            if (!snapshot.exists()) return []\r\n\r\n            const deals = snapshot.val()\r\n            console.log('all deals', deals)\r\n            const result: Deal[] = []\r\n\r\n            for (let c in deals) {\r\n                const item = deals[c]\r\n                result.push(item)\r\n            }\r\n\r\n            return result\r\n        })\r\n    }\r\n\r\n    async addDeal(deal: Deal) {\r\n        if (!this.context.signedIn() || !this.context.user!.isVendor()) {\r\n            throw new Error(\"You are not authorized to create deals!\")\r\n        }\r\n\r\n        const createDeal = functions().httpsCallable('vendorCreateDeal')\r\n\r\n        try {\r\n            const result = await createDeal({ deal })\r\n            if (!result.data.success) throw new Error(\"Failed to create deal!\")\r\n            return true\r\n        } catch (e) {\r\n            console.error(e)\r\n            throw e\r\n        }\r\n    }\r\n\r\n    static isDealValid(deal: Deal) {\r\n\r\n        if (!deal.title || !validator.isLength(deal.title, { min: 5 })) {\r\n            throw Error(\"Deal must contain a useful title!\")\r\n        }\r\n        else if (!deal.description || !validator.isLength(deal.description, { min: 10 })) {\r\n            throw new Error(\"Deal must have useful description!\")\r\n        }\r\n        else if (!deal.value) {\r\n            throw new Error(\"All deals must have a value!\")\r\n        }\r\n        if (!deal.cover) {\r\n            // TODO: decide if deals must have a cover.\r\n            // an alternative will be to use the author's image as cover.\r\n        }\r\n\r\n        deal.meta = deal.meta || { unit: \"Flat\" }\r\n\r\n        if (!deal.meta.unit || !validator.equals(deal.meta.unit, \"Percent\") || !validator.equals(deal.meta.unit, \"Flat\")) {\r\n            throw new Error(\"Invalid unit format\")\r\n        }\r\n        if (deal.meta.actionUrl && !validator.isURL(deal.meta.actionUrl, { protocols: [\"http\", \"https\"] })) {\r\n            throw new Error(\"Url provided is invalid\")\r\n        }\r\n        if (deal.meta.expiryDate && !validator.isAfter(deal.meta.expiryDate.toString())) {\r\n            throw new Error(\"Invalid expiry date!\")\r\n        }\r\n\r\n        return true\r\n    }\r\n}\r\n\r\n/**\r\n * ValueType:\r\n * Discount | The deal provides a difference from the regular price.\r\n * This discount may be in the form of percentage removal from the current price of a product.\r\n * It could also represent a flat amount removed from the purchase price.\r\n * The type of discount is specified by the `ValueUnit` property.\r\n */\r\nexport type ValueUnit = \"Percent\" | \"Flat\"\r\n\r\nexport interface Deal {\r\n    title: string,\r\n    inStore?: boolean,\r\n    description: string,\r\n    value: number,\r\n    meta?: {\r\n        actionUrl?: string,\r\n        unit: ValueUnit,\r\n        expiryDate?: number | Date\r\n    }\r\n    cover?: string,\r\n    author: {\r\n        id: string,\r\n        CompanyName?: string,\r\n        photoURL?: string\r\n    }\r\n    id: string\r\n}\r\n\r\n\r\nconst MOCK_DEALS: Deal[] = [{\r\n    id: '11',\r\n    cover: 'fff',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Dominos Pizza'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '30% off any purchase',\r\n    value: 30,\r\n    inStore: true\r\n},\r\n{\r\n    id: '12',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Taxify'\r\n    },\r\n    description: 'Walk in to any store and get these deals in november only',\r\n    title: '50% off any purchase',\r\n    value: 30,\r\n    inStore: true\r\n},\r\n{\r\n    id: '13',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'FilmHouse Cinemas'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '80% off any purchase',\r\n    value: 30\r\n},\r\n{\r\n    id: '14',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Microsoft'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '30% off any purchase',\r\n    value: 30\r\n},\r\n{\r\n    id: '14d',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Microsoft'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '30% off any purchase',\r\n    value: 30\r\n},\r\n{\r\n    id: '1s4',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Microsoft'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '30% off any purchase',\r\n    value: 30\r\n},\r\n{\r\n    id: '14dd',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Microsoft'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '30% off any purchase',\r\n    value: 30\r\n},\r\n{\r\n    id: '1s4d',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Microsoft'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '30% off any purchase',\r\n    value: 30\r\n},\r\n{\r\n    id: '14dss',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Microsoft'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '30% off any purchase',\r\n    value: 30\r\n},\r\n{\r\n    id: '1s4ss',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Microsoft'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '30% off any purchase',\r\n    value: 30\r\n}]","import { createContext } from 'react'\r\nimport * as fBase from './firebase'\r\nimport { User, Vendor, auth } from './user'\r\nimport { log } from './util'\r\nimport { DEFAULT_THEME } from \"./theme\";\r\nimport firebase from 'firebase';\r\nimport { DealManager } from './deals';\r\n\r\nexport const USER_SESSION = 'user_session_'\r\n\r\nexport class AppContext {\r\n    // App datails\r\n    name = \"My Student Deal\"\r\n    description = \"Bringing the most exciting shopping discounts and deals to students worldwide!\"\r\n    version = \"0.0.1\"\r\n\r\n    // Theme settings\r\n    theme = DEFAULT_THEME\r\n\r\n    // Instance properties\r\n    //\r\n    // Currently logged in user\r\n    user?: User\r\n    dealMan: DealManager\r\n\r\n    protected _isReady: Promise<boolean>\r\n\r\n    constructor() {\r\n        document.title = this.name\r\n        this.dealMan = new DealManager(this)\r\n\r\n        this._isReady = new Promise((res) => {\r\n            auth.onAuthStateChanged(async user => {\r\n                if (user) {\r\n                    // If user is anonymous, create a user object to allow saving state once activity is done.\r\n                    if (user.isAnonymous) {\r\n                        console.log(\"Anonymous user created\", user)\r\n                        this.user = new User(user)\r\n                    }\r\n                    else {\r\n                        // If user is already created, skip completely.\r\n                        // This function is for inflating state upon reload and should not be run within a page view.\r\n                        if (this.user && !this.user.isAnonymous) return\r\n\r\n                        // get custom claims\r\n\r\n                        // TODO: enforce token check here!!!\r\n                        // This is currently set to allow vendor signin without internet!\r\n                        // Should never enter production!\r\n                        //\r\n                        //const token = await user.getIdTokenResult()\r\n                        // if (token.claims.vendor) {\r\n                        if (true) {\r\n                            const session = JSON.parse(localStorage.getItem(USER_SESSION) || \"{}\")\r\n                            if (!session) {\r\n                                // dunno how you authenticated without a session.\r\n                                auth.signOut()\r\n                                console.log(\"Anonymous user created\", user)\r\n                                this.user = new User(user)\r\n                            }\r\n                            console.log(\"currently signedin as \", session.companyName, user)\r\n                            this.user = new Vendor(user, session.companyName)\r\n                        } else {\r\n                            // console.log(\"currently signedin as \", user.displayName, user)\r\n                            // this.user = new User(user)\r\n                        }\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    this.user = undefined\r\n                    // Signs in current user anonymously\r\n                    if (!this.user) auth.signInAnonymously()\r\n                }\r\n                res(true)\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    isReady() {\r\n        return this._isReady\r\n    }\r\n\r\n    signedIn() {\r\n        return this.user && !this.user.isAnonymous\r\n    }\r\n\r\n    loginStudent(userDetails: { email: string, password: string }) {\r\n        return User.login(userDetails.email, userDetails.password).then(user => {\r\n            this.user = user\r\n            return this\r\n        })\r\n    }\r\n\r\n    loginVendor(vendorDetails: { email: string, password: string }) {\r\n        return Vendor.login(vendorDetails.email, vendorDetails.password).then(user => {\r\n            this.user = user\r\n            localStorage.setItem(USER_SESSION, JSON.stringify({ companyName: user.companyName }))\r\n            return this\r\n        })\r\n    }\r\n\r\n\r\n    registerUser(userDetails: { displayName: string, email: string, password: string }) {\r\n        return User.register(userDetails).then(user => {\r\n            this.user = user\r\n        })\r\n    }\r\n\r\n    registerVendor(vendorDetails: { displayName: string, email: string, password: string, companyName: string }) {\r\n        return Vendor.register(vendorDetails).then(user => {\r\n            this.user = user\r\n            localStorage.setItem(USER_SESSION, JSON.stringify({ companyName: user.companyName }))\r\n        })\r\n    }\r\n\r\n    async logout() {\r\n        await auth.signOut()\r\n        localStorage.removeItem(USER_SESSION)\r\n\r\n        if (this.user) {\r\n            this.user = undefined\r\n        }\r\n    }\r\n\r\n\r\n    async getVendorCount() {\r\n        const vendors = await (await fetch(`${fBase.firebaseConfig.databaseURL}/vendors.json?shallow=true`)).json()\r\n        if (!vendors) return 0\r\n        return Object.keys(vendors).length\r\n    }\r\n}\r\n\r\nexport const DefaultAppContext = new AppContext()\r\nexport const ApplicationContext = createContext<AppContext>(DefaultAppContext)\r\n","import React from \"react\";\r\nimport { ApplicationContext } from \"../lib\";\r\n\r\nexport const Footer = () => (\r\n    <ApplicationContext.Consumer>{ctx => (\r\n        <footer className='footer' style={ctx.theme.footer}>\r\n            <div className=\"content has-text-centered\">\r\n                <p>&copy; {new Date().getFullYear()} {ctx.name} </p>\r\n            </div>\r\n        </footer>\r\n    )}\r\n    </ApplicationContext.Consumer>\r\n)","export default {\r\n    Transport: '/deals/transport',\r\n    Fashion: '/deals/fashion',\r\n    LifeStyle: '/deals/lifestyle',\r\n    Technology: '/deals/tech',\r\n    deals: '/deals',\r\n    myDeals: '/mydeals',\r\n    profile: '/user/view',\r\n}","import React, { useContext } from 'react';\r\nimport { FaHome, FaSignInAlt, FaSign, FaBriefcase, FaWallet, FaSignOutAlt, FaShoppingBasket, FaTags, FaUserCircle } from \"react-icons/fa\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ApplicationContext } from '../lib';\r\nimport { User, Vendor } from '../lib/user';\r\nimport links from '../lib/links';\r\n\r\nexport default function Toolbar({ hideMenu }: { hideMenu?: boolean }) {\r\n    const ctx = useContext(ApplicationContext)\r\n    let [isActive, updateActive] = React.useState(false)\r\n\r\n    if (hideMenu) {\r\n        return (\r\n            <nav className={`navbar is-centered is-unselectable is-fixed-top is-black`} style={ctx.theme.header} >\r\n                <div className=\"navbar-brand\">\r\n                    <span className=\"navbar-item has-text-weight-bold\">{ctx.name}</span>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <nav className={`navbar is-centered is-unselectable is-fixed-top is-black`} style={ctx.theme.header} >\r\n            <div className=\"navbar-brand\">\r\n                <span className=\"navbar-item has-text-weight-bold\">{ctx.name}</span>\r\n                <span onClick={() => {\r\n                    const isActiveNow = !isActive\r\n                    updateActive(isActiveNow)\r\n                    if (isActiveNow === true) {\r\n                        setTimeout(() => updateActive(false), 10000)\r\n                    }\r\n                }} className={`navbar-burger burger ${isActive ? 'is-active' : ''}`}>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </span>\r\n            </div>\r\n            <div className={`navbar-menu ${isActive ? 'is-active' : ''}`}>\r\n                <div className=\"navbar-start\">\r\n                    {ctx.signedIn() ?\r\n                        <NavLink activeClassName='is-active' exact to={links.myDeals} className='navbar-item'>\r\n                            <FaWallet />&emsp;My Deals\r\n                </NavLink> :\r\n                        <NavLink activeClassName='is-active' exact to='/' className='navbar-item'>\r\n                            <FaHome />&emsp;Home\r\n          </NavLink>}\r\n                    <NavLink activeClassName='is-active' exact to={links.deals} className='navbar-item'>\r\n                        <FaTags />&nbsp; Deals\r\n                </NavLink>\r\n                </div>\r\n                <div className=\"navbar-end\">\r\n                    {ctx.signedIn() ?\r\n                        <>\r\n                            <div className=\"navbar-item\">\r\n                            </div>\r\n                            <NavLink title=\"View profile\" activeClassName='is-active' exact to={links.profile} className='navbar-item'>\r\n                                <FaUserCircle />&emsp;Hello {ctx.user!.isVendor() ? (ctx.user as Vendor)!.companyName : ctx.user!.displayName}\r\n                                </NavLink>\r\n                        </> : null}\r\n                    <div className=\"navbar-item\">\r\n                        {!ctx.signedIn() ?\r\n                            <div className=\"field is-grouped is-uppercase\">\r\n                                <p className=\"control\">\r\n                                    <NavLink title='Login to student portal' activeClassName='is-active' exact to='/user/login' className=\"is-primary button\">\r\n                                        <FaSignInAlt />&emsp;Student\r\n                                        </NavLink>\r\n                                </p>\r\n                                <p className=\"control\">\r\n                                    <NavLink title=\"Login to vendor portal!\" activeClassName='is-active' exact to='/vendor/login' className=\"is-link button\">\r\n                                        <FaBriefcase />&emsp;Vendor\r\n                                        </NavLink>\r\n                                </p>\r\n                            </div> :\r\n                            <NavLink title='Logout' activeClassName='is-active' exact to={`/${ctx.user!.isVendor() ? 'vendor' : 'user'}/logout`} className=\"is-danger button\">\r\n                                <FaSignOutAlt />&emsp;Logout\r\n                            </NavLink>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React, { useContext, useState, useEffect } from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport { Footer } from '../components/footer'\r\nimport { GiShirt, GiSmartphone, GiCityCar, GiGlassCelebration, GiVendingMachine, GiWallet } from 'react-icons/gi'\r\nimport { NavLink, Redirect } from 'react-router-dom'\r\nimport links from '../lib/links'\r\nimport { useIncreaseNumber } from '../lib/hooks'\r\nimport { Deal } from '../lib/deals'\r\nimport { FaStore, FaCloud, FaExclamationCircle, FaCalendar, FaClock, FaGlobe } from 'react-icons/fa'\r\nimport { FiChevronDown, FiMoreVertical, FiChevronUp, FiGlobe, FiHome, FiDelete, FiImage } from \"react-icons/fi\";\r\n\r\nexport const DealWidget = () => {\r\n    const blank: {\r\n        error: any,\r\n        cover: any\r\n    } & any = {\r\n        error: null,\r\n        inStore: \"ONLINE\",\r\n        title: \"\",\r\n        description: \"\",\r\n        value: \"\",\r\n        expiryTime: \"\",\r\n        expiryDate: \"\",\r\n        cover: null,\r\n        link: '',\r\n        type: 'FLAT',\r\n        loading: false\r\n    }\r\n    const [state, setState] = useState(blank)\r\n\r\n\r\n    return (\r\n        <form className='card has-transition-1' onSubmit={(e) => {\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n\r\n            // verify all require fields.\r\n            // document.forms.\r\n        }}>\r\n            <header className='card-header'>\r\n                <p className='card-header-title is-uppercase'>Create New Deal</p>\r\n                <span onClick={() => setState(blank)} className='card-header-icon has-text-danger is-size-4'> <FiDelete /></span>\r\n            </header>\r\n            <div className='card-content' >\r\n                {state.error ?\r\n                    <div className='notification is-warning'>\r\n                        <FaExclamationCircle /> {state.error}\r\n                    </div>\r\n                    : null}\r\n                <div className='field is-horizontal'>\r\n                    <div className='field-body'>\r\n                        <div className='field'>\r\n                            <div className='control'>\r\n                                <input value={state.title} onChange={e => setState({ ...state, title: e.target.value })} tabIndex={1} className='input' required minLength={4} type='text' placeholder='Title' />\r\n                            </div>\r\n                        </div>\r\n                        <div className='field'>\r\n                            <div className={`control`}>\r\n                                <div className='file input'>\r\n                                    <div className='file-label'>\r\n                                        <label className={`is-uppercase label ${state.cover ? 'has-text-success' : 'has-text-grey'}`}>\r\n                                            <FiImage /> Select Cover image for deal\r\n                                    </label>\r\n                                    </div>\r\n                                    <input onChange={e => {\r\n                                        if (e.target.files && e.target.files.length > 0 && e.target.files[0].size > 10) {\r\n                                            const file = e.target.files[0]\r\n                                            setState({ ...state, cover: file }) \r\n                                            console.log(state)\r\n                                        } else {\r\n                                            setState({ ...state, cover: null })\r\n                                        }\r\n\r\n                                    }} className=\"file-input\" required tabIndex={2} type='file' accept='image/*' alt='Cover photo for deal' />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        <textarea tabIndex={3} className=\"textarea\" value={state.description} onChange={e => setState({ ...state, description: e.target.value })} required maxLength={150} rows={2} placeholder=\"Describe what this deal has to offer...\"></textarea>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='field is-horizontal'>\r\n                    <div className='field-body'>\r\n                        <div className='field'>\r\n                            <div className='control' title=\"Select deal availability. This will guide users on where this deal can be applied.\">\r\n                                <div className='select is-fullwidth'>\r\n                                    <select tabIndex={4} value={state.inStore} onChange={e => setState({ ...state, inStore: e.target.value })}>\r\n                                        <option value='ONLINE'>Online</option>\r\n                                        <option value='STORE'>Instore</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='field has-addons'>\r\n                            <div className='control'>\r\n                                <div className='select'>\r\n                                    <select tabIndex={5} value={state.type} onChange={e => setState({ ...state, type: e.target.value })}>\r\n                                        <option value=\"PERCENT\">%</option>\r\n                                        <option value=\"FLAT\">&#x20A6;</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className='control is-expanded'>\r\n                                <input tabIndex={6} value={state.value} onChange={e => setState({ ...state, value: e.target.value })} className='input' required type='number' placeholder='Discount or Percentage' />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {state.inStore !== 'ONLINE' ? null : (\r\n                    <div className='field'>\r\n                        <div className='control has-icons-left'>\r\n                            <input type='text' tabIndex={7} value={state.link} onChange={e => setState({ ...state, link: e.target.value })} className='input' placeholder=\"Web URL or Voucher Code\" />\r\n                            <span className='icon is-small is-left'>\r\n                                <FaGlobe />\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <label className='label is-uppercase has-text-grey'>Expiry</label>\r\n                <div className='field is-horizontal'>\r\n                    <div className='field-body'>\r\n                        <div className='field'>\r\n                            <div className=\"control has-icons-left\">\r\n                                <input className=\"input\" tabIndex={8} value={state.expiryTime} onChange={e => setState({ ...state, expiryTime: e.target.value })} type=\"time\" placeholder=\"Time deal will expire\" />\r\n                                <span className=\"icon is-small is-left\">\r\n                                    <FaClock />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='field'>\r\n                            <div className=\"control has-icons-left\">\r\n                                <input required name='date' tabIndex={9} value={state.expiryDate} onChange={e => setState({ ...state, expiryDate: e.target.value })} className=\"input\" type=\"date\" pattern='[0-9]{4}/[0-9]{2}/[0-9]{2}' />\r\n                                <span className=\"icon is-small is-left\">\r\n                                    <FaCalendar />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='field'>\r\n                    <div className='is-fullwidth control'>\r\n                        <button type='submit' className={`button is-primary is-uppercase ${state.loading ? 'is-loading' : ''}`}>submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form >)\r\n}\r\n\r\nexport const MyDeals = () => {\r\n    const ctx = useContext(ApplicationContext)\r\n\r\n    if (!ctx.signedIn()) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n        <div style={ctx.theme.main}>\r\n            <Toolbar />\r\n            <div className='container'>\r\n                <div className='section'>\r\n                    <DealWidget />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * Component for displaying all deals!\r\n *\r\n * The deals are paginated and only fetch more deals if requested.\r\n */\r\nexport class AllDeals extends React.PureComponent {\r\n    static contextType = ApplicationContext\r\n    context!: React.ContextType<typeof ApplicationContext>\r\n\r\n    state: { deals: Deal[], isLoading: boolean } = { deals: [], isLoading: false }\r\n\r\n    componentDidMount() {\r\n        this.context.dealMan.getDeals().then(deals => {\r\n            this.setState({ deals })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const ctx = this.context\r\n        const { isLoading, deals } = this.state\r\n\r\n        return (\r\n            <div style={ctx.theme.main}>\r\n                <Toolbar />\r\n                <div className='container is-fluid'>\r\n                    <div className='section is-marginless-horizontal'>\r\n                        <div className='columns is-multiline'>\r\n                            {deals.map(deal => {\r\n                                return (\r\n                                    <div key={deal.id} className='column is-3-widescreen is-4 is-12-mobile'>\r\n                                        <DealComponent deal={deal} />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <div className='container'>\r\n                            <button type='button' onClick={async () => {\r\n                                this.setState({ deals, isLoading: true })\r\n                                const y = window.scrollY\r\n                                deals.push(...await ctx.dealMan.getDeals(deals[deals.length - 1].id))\r\n                                this.setState({ deals: [...deals], isLoading: false })\r\n                                window.scroll(window.scrollX, y)\r\n                            }} className={`button is-outlined is-primary is-uppercase is-fullwidth ${isLoading ? 'is-loading' : ''}`}>Load More</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const DealComponent = ({ deal }: { deal: Deal }) => {\r\n    const ctx = useContext(ApplicationContext)\r\n\r\n    return (\r\n        <div className=\"card is-unselectable\">\r\n            <div className=\"card-image\">\r\n                <figure className=\"image is-16by9\">\r\n                    <img src={deal.cover || require('../logo.svg')} alt={deal.description} />\r\n                </figure>\r\n            </div>\r\n            <div className=\"card-content has-text-centered\">\r\n\r\n                <p className='title is-5'>{deal.title}</p>\r\n                <p className='subtitle is-6'>{deal.description}</p>\r\n\r\n                <div className=\"content\">\r\n                    <NavLink className='button is-medium is-success is-outlined' to={`/deals/view/${deal.id}`}>\r\n                        <GiWallet />&nbsp; Get Deal\r\n    </NavLink>\r\n                </div>\r\n\r\n                <div className=\"media\">\r\n                    {/* <div className=\"media-left\">\r\n                        <figure className=\"image is-48x48\">\r\n                            <img src=\"https://bulma.io/images/placeholders/96x96.png\" alt=\"Placeholder image\" />\r\n                        </figure>\r\n                    </div> */}\r\n                    <div className=\"media-content\">\r\n                        <p className=\"title is-6\"><GiVendingMachine /> {deal.author.CompanyName}</p>\r\n                        <p className=\"subtitle tags\">\r\n                            <span className={`tag ${deal.inStore ? 'is-primary' : 'is-link'}`}>{deal.inStore ? <><FaStore />&nbsp; instore</> : <><FaCloud />&nbsp; online</>}</span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { FaExclamationTriangle } from \"react-icons/fa\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Toolbar from \"../components/toolbar\";\r\nimport { ApplicationContext } from \"../lib\";\r\n\r\nexport function ErrorPage(props: { children: any, redirect: string, redirectText: string }) {\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <div style={ctx.theme.main}>\r\n                    <Toolbar />\r\n                    <div className='hero is-black is-bold is-fullheight'>\r\n                        <div className='hero-body'>\r\n                            <div className='container notification has-text-centered' style={ctx.theme.level1}>\r\n                                <FaExclamationTriangle size={50} className=\"has-text-warning\" />\r\n                                <p className='title is-uppercase'> {props.children || \"Page Not Found!\"}</p>\r\n                                <br />\r\n                                <br />\r\n                                <NavLink to={props.redirect || '/'} className='button is-danger is-outlined'>{props.redirectText || 'Go to Homepage!'}</NavLink>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}","import React, { useContext } from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport { Footer } from '../components/footer'\r\nimport { GiShirt, GiSmartphone, GiCityCar, GiGlassCelebration, GiVendingMachine } from 'react-icons/gi'\r\nimport { NavLink, Redirect } from 'react-router-dom'\r\nimport links from '../lib/links'\r\nimport { useIncreaseNumber } from '../lib/hooks'\r\n\r\nexport const Home = () => {\r\n    const ctx = useContext(ApplicationContext)\r\n    const [current, update] = React.useState<number>(0)\r\n\r\n    if (ctx.signedIn()) {\r\n        return <Redirect to={links.myDeals} />\r\n    }\r\n\r\n    const startCount = (destination, step = 10) => {\r\n        const intervalID = setInterval(() => {\r\n            if (destination !== current) {\r\n                const newVal = current + step\r\n                if (newVal > destination) {\r\n                    update(destination)\r\n                    clearInterval(intervalID)\r\n                } else {\r\n                    update(newVal)\r\n                }\r\n            } else {\r\n                clearInterval(intervalID)\r\n            }\r\n        }, Math.max(Math.ceil(destination / step)), 0)\r\n    }\r\n\r\n    ctx.getVendorCount().then((d) => startCount(d))\r\n\r\n    return (\r\n        <div style={ctx.theme.main}>\r\n            <Toolbar />\r\n            <div className='hero is-fullheight is-light is-bold'>\r\n                <div className='hero-body has-text-centered has-background'>\r\n                    <div className='container'>\r\n                        <p className='title has-text-weight-bold is-2'>Welcome to {ctx.name}</p>\r\n                        <p className='subtitle'>{ctx.description}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='hero is-medium is-primary is-bold'>\r\n                <div className='hero-body has-text-centered'>\r\n                    <div className='container'>\r\n                        <p className='title is-capitalized'>\r\n                            Gain access to thousands of great student discounts!\r\n                                </p>\r\n                        <div className='tile is-ancestor section'>\r\n                            <NavLink to={links.Fashion} className='tile is-parent'>\r\n                                <div className='tile is-child box'>\r\n                                    <GiShirt className='is-size-1' />\r\n                                    <p className='subtitle has-text-black has-text-weight-bold'>Fashion</p>\r\n                                </div>\r\n                            </NavLink>\r\n                            <NavLink to={links.Technology} className='tile is-parent'>\r\n                                <div className='tile is-child box'>\r\n                                    <GiSmartphone className='is-size-1' />\r\n                                    <p className='subtitle has-text-black has-text-weight-bold'>Technology</p>\r\n                                </div>\r\n                            </NavLink>\r\n                            <NavLink to={links.Transport} className='tile is-parent'>\r\n                                <div className='tile is-child box'>\r\n                                    <GiCityCar className='is-size-1' />\r\n                                    <p className='subtitle has-text-black has-text-weight-bold'>Transportation</p>\r\n                                </div>\r\n                            </NavLink>\r\n                            <NavLink to={links.LifeStyle} className='tile is-parent'>\r\n                                <div className='tile is-child box'>\r\n                                    <GiGlassCelebration className='is-size-1' />\r\n                                    <p className='subtitle has-text-black has-text-weight-bold'>Events &amp; Lifestyle</p>\r\n                                </div>\r\n                            </NavLink>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='hero is-medium is-dark'>\r\n                <div className='hero-body has-text-centered'>\r\n                    <div className='container'>\r\n                        <GiVendingMachine className='is-size-1' />\r\n                        <p className='subtitle'>Vendors Registered</p>\r\n                        <p className='title has-text-weight-bold is-1'>{current}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\nimport Toolbar from '../components/toolbar'\r\nimport { ApplicationContext } from '../lib'\r\n\r\n\r\nconst LoadingPhrases: string[] = ['Contacting Mothership...', 'Configuring Defences...', 'Loading...', 'Ready In A Minute...', 'Launching...']\r\n\r\nexport const Loading = () => {\r\n    const ctx = useContext(ApplicationContext)\r\n    // const [loading, setLoading] = React.useState<boolean>(true)\r\n    const [phrase, setPhrase] = useState<string>(LoadingPhrases[Math.round(Math.random() * LoadingPhrases.length) % LoadingPhrases.length])\r\n\r\n    let intID = setInterval(() => {\r\n        if (intID) clearInterval(intID)\r\n        setPhrase(LoadingPhrases[Math.round(Math.random() * LoadingPhrases.length) % LoadingPhrases.length])\r\n    }, 2000)\r\n    useEffect(() => {\r\n        return () => {\r\n            clearInterval(intID)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div style={ctx.theme.main}>\r\n            <Toolbar hideMenu />\r\n            <div className='hero is-fullheight is-black is-bold'>\r\n                <div className='hero-body has-text-centered'>\r\n                    <div className='container'>\r\n                        <p className='title has-text-weight-bold is-2'>Welcome to {ctx.name}</p>\r\n                        <p className='subtitle'>{ctx.description}</p>\r\n                        <br />\r\n                        <br />\r\n                        <div className='section'>\r\n                            <p className='subtitle'>{phrase}</p>\r\n                            <progress className=\"progress is-small is-info\" max=\"100\">loading</progress>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst types = ['info', 'success', 'link', 'warning', 'danger', 'primary']\r\nexport const LoadingComponent = ({ phrase = \"Loading...\" }) => {\r\n    const [type, setType] = useState<string>('info')\r\n\r\n    useEffect(() => {\r\n        const intervalID = setInterval(() => setType(types[Math.round(Math.random() * types.length) % types.length]))\r\n        return () => clearInterval(intervalID)\r\n    })\r\n\r\n    return (\r\n        <div className='container has-text-centered'>\r\n            <p className='subtitle'>{phrase}</p>\r\n            <progress className={`progress is-small is-${type}`} max=\"100\">loading</progress>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport { Footer } from '../components/footer'\r\nimport { FaEnvelope, FaExclamationCircle, FaEyeSlash, FaEye, FaKey, FaUser, FaBriefcase } from 'react-icons/fa'\r\nimport { NavLink, Redirect } from 'react-router-dom'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nexport const Login = ({ redirectPath, registerPath, onLogin }: { onLogin: (a) => Promise<any>, redirectPath: string, registerPath: string }) => {\r\n    const [state, updateState] = React.useState({ error: null, email: \"\", password: \"\", isLoading: false })\r\n    const [showPassword, updateShowPassword] = React.useState(false)\r\n    const [redirect, setRedirect] = React.useState(false)\r\n    const { addToast } = useToasts()\r\n\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <form onSubmit={(ev) => {\r\n                    ev.preventDefault(); ev.stopPropagation();\r\n                    updateState({ ...state, isLoading: true })\r\n\r\n                    onLogin(state).then(() => {\r\n                        console.log('login success')\r\n                        addToast('Login Success!', { appearance: 'success', autoDismiss: true })\r\n                        updateState({ ...state, isLoading: false })\r\n\r\n                        return setRedirect(true)\r\n                    })\r\n                        .catch(e => {\r\n                            updateState({ ...state, isLoading: false, error: e.message })\r\n                        })\r\n                }}>\r\n                    {redirect ? <Redirect to={redirectPath} /> : null}\r\n                    <div className=\"card\">\r\n                        <section className=\"card-content\">\r\n                            {state.error ?\r\n                                <div className='notification is-warning'>\r\n                                    <FaExclamationCircle /> {state.error}\r\n                                </div>\r\n                                : null}\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Email</label>\r\n                                </div>\r\n                                <div className='field-body'>\r\n                                    <div className=\"field\">\r\n                                        <div className=\"control has-icons-left\">\r\n                                            <input required name='email' value={state.email} onChange={(ev) => updateState({ ...state, email: ev.target.value })} className=\"input\" type=\"email\" placeholder=\"Enter email address\" />\r\n                                            <span className=\"icon is-small is-left\">\r\n                                                <FaEnvelope />\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Password</label>\r\n                                </div>\r\n                                <div className='field-body'>\r\n                                    <div className=\"field has-addons\">\r\n                                        <p className=\"control is-expanded\">\r\n                                            <input required name='password' value={state.password} onChange={(ev) => updateState({ ...state, password: ev.target.value })} className=\"input\" type={showPassword ? 'text' : 'password'} />\r\n                                        </p>\r\n                                        <p className=\"control\">\r\n                                            <button tabIndex={-1} type='button' className=\"button\" onClick={() => updateShowPassword(!showPassword)}>{showPassword ? <FaEyeSlash /> : <FaEye />}</button>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field'>\r\n                                <div className='control'>\r\n                                    <button type='submit' className={`is-success button ${state.isLoading ? 'is-loading' : ''}`} disabled={state.isLoading}>Login</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </section>\r\n\r\n                        <footer className=\"card-footer is-unselectable\">\r\n                            <NavLink to={registerPath} exact className=\"card-footer-item\">Create New Account</NavLink>\r\n                        </footer>\r\n                    </div>\r\n                </form>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const Register = ({ redirectPath, onRegister, vendor, loginPath }: { loginPath: string, vendor?: boolean, onRegister: (a) => Promise<any>, redirectPath: string }) => {\r\n    const [state, updateState] = React.useState({ error: '', email: \"\", password: \"\", passwordVerify: '', isLoading: false, showPassword: false, displayName: '', companyName: '' })\r\n    const { addToast } = useToasts()\r\n    const [redirect, setRedirect] = React.useState(false)\r\n\r\n\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <form onSubmit={(ev) => {\r\n                    ev.preventDefault(); ev.stopPropagation();\r\n\r\n                    if (state.password !== state.passwordVerify) return updateState({ ...state, error: 'Passwords do not match!' })\r\n\r\n                    updateState({ ...state, isLoading: true })\r\n\r\n                    onRegister(state).then(() => {\r\n                        addToast('Registration Success!', { appearance: 'success', autoDismiss: true })\r\n                        updateState({ ...state, isLoading: false })\r\n                        return setRedirect(true)\r\n                    })\r\n                        .catch(e => {\r\n                            updateState({ ...state, isLoading: false, error: e.message })\r\n                        })\r\n                }}>\r\n                    {redirect ? <Redirect to={redirectPath} /> : null}\r\n\r\n                    <div className=\"card\">\r\n                        <section className=\"card-content\">\r\n                            {state.error ?\r\n                                <div className='notification is-warning'>\r\n                                    <FaExclamationCircle /> {state.error}\r\n                                </div>\r\n                                : null}\r\n\r\n                            {vendor ?\r\n                                <div className='field is-horizontal'>\r\n                                    <div className=\"field-label\">\r\n                                        <label className=\"label\">Company Name</label>\r\n                                    </div>\r\n                                    <div className='field-body'>\r\n                                        <div className=\"field\">\r\n                                            <div className=\"control has-icons-left\">\r\n                                                <input required name='companyname' value={state.companyName} onChange={(ev) => updateState({ ...state, companyName: ev.target.value })} className=\"input\" type=\"text\" placeholder=\"Enter company name\" />\r\n                                                <span className=\"icon is-small is-left\">\r\n                                                    <FaBriefcase />\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> : null}\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Name</label>\r\n                                </div>\r\n                                <div className='field-body'>\r\n                                    <div className=\"field\">\r\n                                        <div className=\"control has-icons-left\">\r\n                                            <input required name='name' value={state.displayName} onChange={(ev) => updateState({ ...state, displayName: ev.target.value })} className=\"input\" type=\"person\" placeholder=\"Enter your fullname\" />\r\n                                            <span className=\"icon is-small is-left\">\r\n                                                <FaUser />\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Email</label>\r\n                                </div>\r\n                                <div className='field-body'>\r\n                                    <div className=\"field\">\r\n                                        <div className=\"control has-icons-left\">\r\n                                            <input required name='email' value={state.email} onChange={(ev) => updateState({ ...state, email: ev.target.value })} className=\"input\" type=\"email\" placeholder=\"Enter email address\" />\r\n                                            <span className=\"icon is-small is-left\">\r\n                                                <FaEnvelope />\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Password</label>\r\n                                </div>\r\n                                <div className='field-body'>\r\n                                    <div className=\"field has-addons\">\r\n                                        <p className=\"control is-expanded has-icons-left\">\r\n                                            <input required name='password' value={state.password} onChange={(ev) => updateState({ ...state, password: ev.target.value })} className=\"input\" type={state.showPassword ? 'text' : 'password'} />\r\n                                            <span className=\"icon is-small is-left\">\r\n                                                <FaKey />\r\n                                            </span>\r\n                                        </p>\r\n                                        <p className=\"control\">\r\n                                            <button disabled={state.isLoading} tabIndex={-1} className=\"button\" type=\"button\" onClick={() => updateState({ ...state, showPassword: !state.showPassword })}>{state.showPassword ? <FaEyeSlash /> : <FaEye />}</button>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Confirm Password</label>\r\n                                </div>\r\n                                <div className='field-body'>\r\n\r\n                                    <div className='field'>\r\n                                        <p className=\"control has-icons-left\">\r\n                                            <input required name='password' value={state.passwordVerify} onChange={(ev) => updateState({ ...state, passwordVerify: ev.target.value })} className=\"input\" type={state.showPassword ? 'text' : 'password'} />\r\n                                            <span className=\"icon is-small is-left\">\r\n                                                <FaKey />\r\n                                            </span>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field'>\r\n                                <div className='control'>\r\n                                    <button type='submit' className={`is-success button ${state.isLoading ? 'is-loading' : ''}`} disabled={state.isLoading}>Join</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </section>\r\n\r\n                        <footer className=\"card-footer\">\r\n                            <NavLink to={loginPath} exact className=\"card-footer-item\">Login with existing account</NavLink>\r\n                        </footer>\r\n                    </div>\r\n                </form>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}","import React from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport { Footer } from '../components/footer'\r\nimport { Login } from '../components/auth'\r\n\r\nexport const LoginUser = () => {\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <div style={ctx.theme.main}>\r\n                    <Toolbar />\r\n                    <div className='section container'>\r\n                        <h2 className='is-title is-size-2 has-text-centered'>Login with username and password</h2>\r\n\r\n                        <div className='section'>\r\n                            <Login onLogin={(props) => {\r\n                                return ctx.loginStudent(props)\r\n                            }} redirectPath=\"/\" registerPath={'/user/register'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}\r\n\r\nexport const LoginVendor = () => {\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <div style={ctx.theme.main}>\r\n                    <Toolbar />\r\n                    <div className='section container'>\r\n                        <h2 className='is-title is-size-2 has-text-centered'>Login with username and password</h2>\r\n\r\n                        <div className='section'>\r\n                            <Login onLogin={props => { return ctx.loginVendor(props) }} redirectPath=\"/\" registerPath={'/vendor/register'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}","import React, { useContext, useState } from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport { Footer } from '../components/footer'\r\nimport { Login, Register } from '../components/auth'\r\nimport { Redirect } from 'react-router'\r\n\r\nexport const Logout = () => {\r\n    const ctx = useContext(ApplicationContext)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    if (!ctx.signedIn()) {\r\n        // return <Redirect to='/' />\r\n    }\r\n\r\n    ctx.logout().then(() => setLoading(false))\r\n\r\n    return (\r\n        <div style={ctx.theme.main}>\r\n            <Toolbar />\r\n            <div className='section container'>\r\n\r\n                <div className='section'>\r\n                    <div className='hero is-fullheight'>\r\n                        <div className='hero-body'>\r\n                            <h2 className='is-title is-size-2'>Thank you for using {ctx.name}!</h2>\r\n                            {loading ? <progress className=\"progress is-small is-info\" max=\"100\">loading...</progress> : null}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport { Footer } from '../components/footer'\r\nimport { Login, Register } from '../components/auth'\r\n\r\nexport const RegisterUser = () => {\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <div style={ctx.theme.main}>\r\n                    <Toolbar />\r\n                    <div className='section container'>\r\n                        <h2 className='is-title is-size-2 has-text-centered'>Create a new account</h2>\r\n\r\n                        <div className='section'>\r\n                            <Register onRegister={props => ctx.registerUser(props)} redirectPath=\"/\" loginPath={'/user/login'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}\r\n\r\nexport const RegisterVendor = () => {\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <div style={ctx.theme.main}>\r\n                    <Toolbar />\r\n                    <div className='section container'>\r\n                        <h2 className='is-title is-size-2 has-text-centered'>Create a new vendor account</h2>\r\n\r\n                        <div className='section'>\r\n                            <Register vendor onRegister={props => ctx.registerVendor(props)} redirectPath=\"/\" loginPath={'/vendor/login'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}","import React, { useState } from 'react';\nimport { FaThumbsUp } from 'react-icons/fa';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { useToasts } from \"react-toast-notifications\";\nimport './App.css';\nimport { Footer } from './components/footer';\nimport { ApplicationContext, DefaultAppContext } from './lib';\nimport links from './lib/links';\nimport { AllDeals, MyDeals } from './pages/deal';\nimport { ErrorPage } from './pages/error';\nimport { Home } from './pages/home';\nimport { Loading } from './pages/loading';\nimport { LoginUser, LoginVendor } from './pages/login';\nimport { Logout } from './pages/logout';\nimport { RegisterUser, RegisterVendor } from './pages/register';\n\n\nconst App: React.FC = () => {\n  const [ready, setReady] = useState(false)\n  const [online, setOnline] = useState(navigator.onLine)\n\n  const { addToast } = useToasts()\n  window.onoffline = () => {\n    if (!online) return\n    setOnline(false)\n    addToast(\"You are offline!\", {\n      appearance: 'warning',\n      autoDismiss: true,\n      pauseOnHover: true\n    })\n  }\n  window.ononline = () => {\n    if (online) return\n\n    setOnline(true)\n    addToast(<p>Welcome back to the Internet &nbsp;<FaThumbsUp /></p>, {\n      appearance: 'info',\n      autoDismiss: true,\n      pauseOnHover: true\n    })\n  }\n\n  return (\n    <ApplicationContext.Provider value={DefaultAppContext}  >\n      <ApplicationContext.Consumer>{ctx => {\n        ctx.isReady().then(isReady => setReady(isReady))\n\n        return (\n          <BrowserRouter basename='/deals'>\n            {!ready ? <Loading /> : (\n              <>\n                <Switch>\n                  <Route strict exact path='deals/view/:id' component={ErrorPage} />\n                  <Route strict exact path={links.deals} component={AllDeals} />\n                  <Route strict exact path={links.myDeals} component={MyDeals} />\n                  {/* <Route strict exact path='/deals/:category' component={} /> */}\n                  <Route strict exact path=\"/vendor/register\" component={RegisterVendor} />\n                  <Route strict exact path=\"/user/register\" component={RegisterUser} />\n                  <Route strict exact path=\"/vendor/login\" component={LoginVendor} />\n                  <Route strict exact path=\"/user/login\" component={LoginUser} />\n                  <Route strict exact path=\"/:user/logout\" component={Logout} />\n                  <Route strict exact path=\"/\" component={Home} />\n                  <Route component={ErrorPage} />\n                </Switch>\n                <Footer />\n              </>\n            )}\n          </BrowserRouter>\n        )\n      }}</ApplicationContext.Consumer>\n    </ApplicationContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ToastProvider } from 'react-toast-notifications';\n\nReactDOM.render(\n    <ToastProvider placement={'bottom-center'}>\n        <App />\n    </ToastProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}