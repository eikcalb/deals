{"version":3,"sources":["logo.svg","lib/firebase.ts","lib/util.ts","lib/user.ts","lib/theme.ts","lib/deals.ts","lib/index.ts","lib/links.ts","components/toolbar.tsx","pages/error.tsx","pages/home.tsx","components/footer.tsx","components/auth.tsx","pages/login.tsx","pages/register.tsx","pages/logout.tsx","pages/loading.tsx","pages/deal.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","analytics","log","console","auth","usersRef","database","ref","vendorsRef","dealsRef","libraryRef","User","userObj","uid","displayName","fUser","isAnonymous","this","email","password","currentUser","signInAnonymously","Error","credential","EmailAuthProvider","linkWithCredential","then","a","usercred","user","updateProfile","child","set","catch","e","delete","error","message","signInWithEmailAndPassword","cred","errorCode","code","Vendor","companyName","Promise","res","rej","once","snapshot","exists","val","signOut","DEFAULT_THEME","main","background","color","minHeight","overflowY","paddingTop","level1","header","boxShadow","footer","padding","DealManager","ctx","context","useMock","signedIn","MOCK_DEALS","on","c","deals","result","item","push","startAt","dealsPerPage","lastItemIndex","findIndex","id","slice","Math","max","orderByKey","limitToLast","deal","isVendor","newDeal","key","author","cover","CompanyName","description","title","value","inStore","fBase","DefaultAppContext","name","version","theme","dealMan","_isReady","document","onAuthStateChanged","undefined","userDetails","login","vendorDetails","register","fetch","json","vendors","Object","keys","length","ApplicationContext","createContext","Transport","Fashion","LifeStyle","Technology","myDeals","profile","Toolbar","hideMenu","useContext","React","useState","isActive","updateActive","className","style","onClick","isActiveNow","setTimeout","activeClassName","exact","to","links","ErrorPage","Consumer","size","Home","current","update","getVendorCount","d","destination","step","intervalID","setInterval","newVal","clearInterval","ceil","startCount","Footer","Date","getFullYear","Login","redirectPath","registerPath","onLogin","isLoading","state","updateState","showPassword","updateShowPassword","redirect","setRedirect","addToast","useToasts","onSubmit","ev","preventDefault","stopPropagation","appearance","autoDismiss","required","onChange","target","type","placeholder","tabIndex","disabled","Register","onRegister","vendor","loginPath","passwordVerify","LoginUser","props","loginStudent","LoginVendor","loginVendor","RegisterUser","registerUser","RegisterVendor","registerVendor","Logout","loading","setLoading","logout","LoadingPhrases","Loading","round","random","phrase","setPhrase","intID","useEffect","MyDeals","AllDeals","getDeals","setState","map","y","window","scrollY","scroll","scrollX","PureComponent","contextType","DealComponent","src","require","alt","App","ready","setReady","navigator","onLine","online","setOnline","onoffline","ononline","Provider","isReady","basename","strict","path","component","Boolean","location","hostname","match","ReactDOM","render","placement","getElementById","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.2e70be64.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import firebase from \"firebase\";\r\nexport const firebaseConfig = {\r\n    apiKey: \"AIzaSyDRlJC_SV_wCL5eTDxVY24e3mHVGFJLNxg\",\r\n    authDomain: \"unidays-3205e.firebaseapp.com\",\r\n    databaseURL: \"https://unidays-3205e.firebaseio.com\",\r\n    projectId: \"unidays-3205e\",\r\n    storageBucket: \"unidays-3205e.appspot.com\",\r\n    messagingSenderId: \"127396561143\",\r\n    appId: \"1:127396561143:web:a032c8f3b20540fc4e53f2\",\r\n    measurementId: \"G-6HPPCPKTZ6\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();","export function log(...args: any[]){\r\n    console.log(...args)\r\n}","import firebase from \"firebase\"\r\nimport { log } from \"./util\"\r\n\r\nexport const auth = firebase.auth()\r\nexport const usersRef = firebase.database().ref('users')\r\nexport const vendorsRef = firebase.database().ref('vendors')\r\nexport const dealsRef = firebase.database().ref('deals')\r\nexport const libraryRef = firebase.database().ref('library')\r\n\r\nexport class User {\r\n    uid: string\r\n    displayName: string\r\n    protected fUser: firebase.User\r\n    readonly isAnonymous: boolean = false\r\n\r\n    constructor(userObj: firebase.User) {\r\n        this.uid = userObj.uid\r\n        this.displayName = userObj.displayName ? userObj.displayName : \"\"\r\n        this.fUser = userObj\r\n        this.isAnonymous = this.fUser.isAnonymous\r\n    }\r\n\r\n    isVendor(): boolean {\r\n        return false\r\n    }\r\n\r\n\r\n    /**\r\n     * All access to app is anonymous by default.\r\n     * \r\n     * Upon registration, the user account is linked to the current aonymous user.\r\n     */\r\n    static async register({ displayName, email, password }: { email: string, password: string, displayName: string }) {\r\n        if (!auth.currentUser) {\r\n            auth.signInAnonymously()\r\n            throw new Error(\"This is weird! Application must start with atleast an anonymous user!\")\r\n        }\r\n\r\n        const credential = firebase.auth.EmailAuthProvider.credential(email, password)\r\n        return auth.currentUser.linkWithCredential(credential).then(async (usercred) => {\r\n            if (!usercred.user) {\r\n                throw new Error(\"User should not be empty!\")\r\n            }\r\n\r\n            const user = usercred.user;\r\n            console.log(\"Anonymous account successfully upgraded\", user);\r\n\r\n            await user.updateProfile({ displayName }).then(() => usersRef.child(user.uid).set({\r\n                displayName,\r\n                email\r\n            })\r\n            ).catch(e => {\r\n                log(e)\r\n                user!.delete()\r\n                throw new Error(\"Could not register user!\")\r\n            })\r\n\r\n            return new User(user)\r\n        }, (error) => {\r\n            console.log('Error upgrading anonymous account', error)\r\n            throw new Error(error.message);\r\n        })\r\n    }\r\n\r\n    static async login(email: string, password: string) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n            .then(cred => {\r\n                if (!cred.user) throw new Error(\"User not found!\")\r\n                return new User(cred.user)\r\n            })\r\n            .catch((error) => {\r\n                // Handle Errors here.\r\n                var errorCode = error.code;\r\n\r\n                console.log(error)\r\n                if (errorCode === 'auth/wrong-password') {\r\n                    throw new Error('Wrong password.');\r\n                } else {\r\n                    throw error;\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport class Vendor extends User {\r\n    companyName: string\r\n\r\n    constructor(userObj: firebase.User, companyName: string) {\r\n        super(userObj)\r\n        this.companyName = companyName\r\n    }\r\n\r\n    isVendor() {\r\n        return true\r\n    }\r\n\r\n    /**`\r\n     * Registers a new vendor.\r\n     * \r\n     * Vendor registration is different from user registration and only one account type can be signedin at a time.\r\n     */\r\n    static async register({ companyName, displayName, email, password }: { companyName: string, email: string, password: string, displayName: string }) {\r\n        if (!auth.currentUser) {\r\n            auth.signInAnonymously()\r\n            throw new Error(\"This is weird! Application must start with atleast an anonymous user!\")\r\n        }\r\n\r\n        const credential = firebase.auth.EmailAuthProvider.credential(email, password)\r\n        return auth.currentUser.linkWithCredential(credential).then(async (usercred) => {\r\n            if (!usercred.user) {\r\n                throw new Error(\"User should not be empty!\")\r\n            }\r\n\r\n            const user = usercred.user;\r\n            console.log(\"Anonymous account successfully upgraded\", user);\r\n            await user.updateProfile({ displayName }).then(() => vendorsRef.child(user.uid).set({\r\n                displayName,\r\n                email,\r\n                companyName\r\n            })\r\n            ).catch(e => {\r\n                log(e)\r\n                user!.delete()\r\n                throw new Error(\"Could not register vendor!\")\r\n            })\r\n\r\n            return new Vendor(user, companyName)\r\n        }, (error) => {\r\n            console.log(\"Error upgrading anonymous account\", error)\r\n            throw new Error(error.message || \"Failed to register account!\");\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Login authenticates the current user as a vendor.\r\n     * \r\n     * If the company name of this vendor account is not found an error is thrown.\r\n     * It is an invalid action to create vendors without populating the company name.\r\n     */\r\n    static async login(email: string, password: string) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n            .then(async cred => {\r\n                if (!cred.user) throw new Error(\"User not found!\")\r\n\r\n                const companyName: string = await new Promise((res, rej) => {\r\n                    vendorsRef.child(`${cred.user!.uid}/companyName`).once('value', (snapshot) => {\r\n                        if (snapshot.exists()) {\r\n                            return res(snapshot.val())\r\n                        }\r\n                        //Vendor cannot exist without having a company name!\r\n                        auth.signOut()\r\n                        rej(new Error('Vendor account not found! Did you mean to login as a user?'))\r\n                    })\r\n                })\r\n                return new Vendor(cred.user, companyName)\r\n            })\r\n            .catch((error) => {\r\n                // Handle Errors here.\r\n                var errorCode = error.code;\r\n\r\n                console.log(error)\r\n                if (errorCode === 'auth/wrong-password') {\r\n                    throw new Error('Wrong password.');\r\n                } else {\r\n                    throw error;\r\n                }\r\n            })\r\n    }\r\n}","export interface Theme {\r\n    /**\r\n     * Main is the lowest level of the screen. This is the reall background of the application.\r\n     */\r\n    main?: React.CSSProperties,\r\n    level1?: React.CSSProperties\r\n    header?: React.CSSProperties\r\n    footer?: React.CSSProperties\r\n}\r\n\r\nexport const DEFAULT_THEME: Theme = {\r\n    main: {\r\n        background: \"#001\",\r\n        color: \"#efefef\",\r\n        minHeight: '100%',\r\n        overflowY: 'scroll',\r\n        paddingTop: '3.25rem'\r\n    },\r\n    level1: {\r\n        background: \"#222\"\r\n    },\r\n    header: {\r\n        background: \"#353545\",\r\n        color: '#fefefe',\r\n        boxShadow: '#1a1a1a88 0 1px 0.1em 0.1em'\r\n    },\r\n    footer: {\r\n        padding: '1em',\r\n        color: '#555'\r\n    }\r\n}","import { Context } from \"react\"\r\nimport { AppContext } from \".\"\r\nimport { dealsRef, libraryRef } from \"./user\"\r\n\r\nexport class DealManager {\r\n    protected context: AppContext\r\n\r\n    /**\r\n     * Use mock data in application deal management.\r\n     * \r\n     * @internal Only used for testing.\r\n     */\r\n    protected useMock: boolean = true\r\n\r\n    constructor(ctx: AppContext) {\r\n        if (process.env.NODE_ENV === 'production' && this.useMock) {\r\n            console.log('Bail application. Wrong code sent for production!!!!!!')\r\n            throw new Error('Production environment should not use mock data!')\r\n        }\r\n\r\n        this.context = ctx\r\n    }\r\n\r\n    async getMyDeals() {\r\n        if (!this.context.signedIn()) return []\r\n\r\n        if (this.useMock) return MOCK_DEALS\r\n\r\n        return await new Promise(res => {\r\n            libraryRef.child(`${this.context.user!.uid}`).on('value', async snapshot => {\r\n                if (!snapshot.exists()) return res([])\r\n\r\n                const deals = snapshot.val()\r\n                console.log(deals)\r\n                const result: Deal[] = []\r\n\r\n                for (let c in deals) {\r\n                    const item = deals[c]\r\n                    result.push(item)\r\n                }\r\n\r\n                return res(result)\r\n            })\r\n        }\r\n        )\r\n    }\r\n\r\n    async getDeals(startAt?: string) {\r\n        const dealsPerPage = 5\r\n\r\n        if (startAt) {\r\n            if (this.useMock) {\r\n                const lastItemIndex = MOCK_DEALS.findIndex(item => item.id === startAt)\r\n                console.log(lastItemIndex, startAt, MOCK_DEALS)\r\n                return MOCK_DEALS.slice(lastItemIndex > 0 ? lastItemIndex + 1 : 0, (Math.max(lastItemIndex, 0) + 1) + dealsPerPage)\r\n            }\r\n\r\n            return await dealsRef.orderByKey().limitToLast(dealsPerPage).startAt(startAt).once('value').then(async snapshot => {\r\n                if (!snapshot.exists()) return []\r\n\r\n                const deals = snapshot.val()\r\n                console.log('all deals', deals)\r\n                const result: Deal[] = []\r\n\r\n                for (let c in deals) {\r\n                    if (c === startAt) continue\r\n\r\n                    const item = deals[c]\r\n                    result.push(item)\r\n                }\r\n\r\n                return result\r\n            })\r\n        }\r\n\r\n        if (this.useMock) return MOCK_DEALS.slice(0, dealsPerPage)\r\n\r\n        return await dealsRef.orderByKey().limitToLast(dealsPerPage).once('value').then(async snapshot => {\r\n            if (!snapshot.exists()) return []\r\n\r\n            const deals = snapshot.val()\r\n            console.log('all deals', deals)\r\n            const result: Deal[] = []\r\n\r\n            for (let c in deals) {\r\n                const item = deals[c]\r\n                result.push(item)\r\n            }\r\n\r\n            return result\r\n        })\r\n    }\r\n\r\n    async addDeal(deal: Deal) {\r\n        if (!this.context.signedIn() || !this.context.user!.isVendor()) {\r\n            throw new Error(\"You are not authorized to create deals!\")\r\n        }\r\n\r\n        try {\r\n            const newDeal = await dealsRef.push()\r\n            if (newDeal.key) {\r\n                deal.id = newDeal.key\r\n                deal.author.id = this.context.user!.uid\r\n\r\n                await newDeal.set(deal)\r\n                return deal\r\n            } else throw new Error(\"Creation Failed!\")\r\n        } catch (e) {\r\n            console.log(e)\r\n            throw e\r\n        }\r\n    }\r\n}\r\n\r\nexport type ValueType = \"Discount\" | \"Bonus\";\r\nexport type ValueUnit = \"Percent\" | \"Flat\"\r\n\r\nexport interface Deal {\r\n    title: string,\r\n    inStore?: boolean,\r\n    description: string,\r\n    value: number,\r\n    meta?: {\r\n        type: ValueType,\r\n        unit: ValueUnit\r\n    }\r\n    cover?: string,\r\n    author: {\r\n        id: string,\r\n        CompanyName?: string,\r\n        photoURL?: string\r\n    }\r\n    id: string\r\n}\r\n\r\n\r\nconst MOCK_DEALS: Deal[] = [{\r\n    id: '11',\r\n    cover: 'fff',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Dominos Pizza'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '30% off any purchase',\r\n    value: 30,\r\n    inStore: true\r\n},\r\n{\r\n    id: '12',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Taxify'\r\n    },\r\n    description: 'Walk in to any store and get these deals in november only',\r\n    title: '50% off any purchase',\r\n    value: 30,\r\n    inStore: true\r\n},\r\n{\r\n    id: '13',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'FilmHouse Cinemas'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '80% off any purchase',\r\n    value: 30\r\n},\r\n{\r\n    id: '14',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Microsoft'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '30% off any purchase',\r\n    value: 30\r\n},\r\n{\r\n    id: '14d',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Microsoft'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '30% off any purchase',\r\n    value: 30\r\n},\r\n{\r\n    id: '1s4',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Microsoft'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '30% off any purchase',\r\n    value: 30\r\n},\r\n{\r\n    id: '14dd',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Microsoft'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '30% off any purchase',\r\n    value: 30\r\n},\r\n{\r\n    id: '1s4d',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Microsoft'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '30% off any purchase',\r\n    value: 30\r\n},\r\n{\r\n    id: '14dss',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Microsoft'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '30% off any purchase',\r\n    value: 30\r\n},\r\n{\r\n    id: '1s4ss',\r\n    author: {\r\n        id: 'dsdusdsdusudsdusdsuds',\r\n        CompanyName: 'Microsoft'\r\n    },\r\n    description: 'Test deals spooled by me##',\r\n    title: '30% off any purchase',\r\n    value: 30\r\n}]","import { createContext } from 'react'\r\nimport * as fBase from './firebase'\r\nimport { User, Vendor, auth } from './user'\r\nimport { log } from './util'\r\nimport { DEFAULT_THEME } from \"./theme\";\r\nimport firebase from 'firebase';\r\nimport { DealManager } from './deals';\r\n\r\nlog(fBase.firebaseConfig)\r\n\r\nexport class AppContext {\r\n    // App datails\r\n    name = \"My Student Deal\"\r\n    description = \"Bringing the most exciting shopping discounts and deals to students worldwide!\"\r\n    version = \"0.0.1\"\r\n\r\n    // Theme settings\r\n    theme = DEFAULT_THEME\r\n\r\n    // Instance properties\r\n    //\r\n    // Currently logged in user\r\n    user?: User\r\n    dealMan: DealManager\r\n\r\n    protected _isReady: Promise<boolean>\r\n\r\n    constructor() {\r\n        document.title = this.name\r\n        this.dealMan = new DealManager(this)\r\n\r\n        this._isReady = new Promise((res) => {\r\n            auth.onAuthStateChanged(user => {\r\n                if (user) {\r\n                    // If user is anonymous, create a user object to allow saving state once activity is done.\r\n                    if (user.isAnonymous) {\r\n                        console.log(\"Anonymous user created\", user)\r\n                        this.user = new User(user)\r\n                    }\r\n                    else {\r\n                        console.log(\"currently signedin as \", user.displayName)\r\n                        this.user = new User(user)\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    this.user = undefined\r\n                    // Signs in current user anonymously\r\n                    if (!this.user) auth.signInAnonymously()\r\n                }\r\n                res(true)\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    isReady() {\r\n        return this._isReady\r\n    }\r\n\r\n    signedIn() {\r\n        return this.user && !this.user.isAnonymous\r\n    }\r\n\r\n    loginStudent(userDetails: { email: string, password: string }) {\r\n        return User.login(userDetails.email, userDetails.password).then(user => {\r\n            this.user = user\r\n            return this\r\n        })\r\n    }\r\n\r\n    loginVendor(vendorDetails: { email: string, password: string }) {\r\n        return Vendor.login(vendorDetails.email, vendorDetails.password).then(user => {\r\n            this.user = user\r\n            return this\r\n        })\r\n    }\r\n\r\n\r\n    registerUser(userDetails: { displayName: string, email: string, password: string }) {\r\n        return User.register(userDetails).then(user => {\r\n            this.user = user\r\n        })\r\n    }\r\n\r\n    registerVendor(vendorDetails: { displayName: string, email: string, password: string, companyName: string }) {\r\n        return Vendor.register(vendorDetails).then(user => {\r\n            this.user = user\r\n        })\r\n    }\r\n\r\n    async logout() {\r\n        if (this.user) {\r\n            this.user = undefined\r\n            return await auth.signOut()\r\n        }\r\n    }\r\n\r\n\r\n    async getVendorCount() {\r\n        const vendors = await (await fetch(`${fBase.firebaseConfig.databaseURL}/vendors.json?shallow=true`)).json()\r\n        if (!vendors) return 0\r\n        return Object.keys(vendors).length\r\n    }\r\n}\r\n\r\nexport const DefaultAppContext = new AppContext()\r\nexport const ApplicationContext = createContext<AppContext>(DefaultAppContext)\r\n","export default {\r\n    Transport: '/deals/transport',\r\n    Fashion: '/deals/fashion',\r\n    LifeStyle: '/deals/lifestyle',\r\n    Technology: '/deals/tech',\r\n    deals: '/deals',\r\n    myDeals: '/mydeals',\r\n    profile: '/user/view',\r\n\r\n}","import React, { useContext } from 'react';\r\nimport { FaHome, FaSignInAlt, FaSign, FaBriefcase, FaWallet, FaSignOutAlt, FaShoppingBasket, FaTags, FaUserCircle } from \"react-icons/fa\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ApplicationContext } from '../lib';\r\nimport { User } from '../lib/user';\r\nimport links from '../lib/links';\r\n\r\nexport default function Toolbar({ hideMenu }: { hideMenu?: boolean }) {\r\n    const ctx = useContext(ApplicationContext)\r\n    let [isActive, updateActive] = React.useState(false)\r\n\r\n    if (hideMenu) {\r\n        return (\r\n            <nav className={`navbar is-centered is-unselectable is-fixed-top is-black`} style={ctx.theme.header} >\r\n                <div className=\"navbar-brand\">\r\n                    <span className=\"navbar-item has-text-weight-bold\">{ctx.name}</span>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <nav className={`navbar is-centered is-unselectable is-fixed-top is-black`} style={ctx.theme.header} >\r\n            <div className=\"navbar-brand\">\r\n                <span className=\"navbar-item has-text-weight-bold\">{ctx.name}</span>\r\n                <span onClick={() => {\r\n                    const isActiveNow = !isActive\r\n                    updateActive(isActiveNow)\r\n                    if (isActiveNow === true) {\r\n                        setTimeout(() => updateActive(false), 10000)\r\n                    }\r\n                }} className={`navbar-burger burger ${isActive ? 'is-active' : ''}`}>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </span>\r\n            </div>\r\n            <div className={`navbar-menu ${isActive ? 'is-active' : ''}`}>\r\n                <div className=\"navbar-start\">\r\n                    {ctx.signedIn() ?\r\n                        <NavLink activeClassName='is-active' exact to={links.myDeals} className='navbar-item'>\r\n                            <FaWallet />&emsp;My Deals\r\n                </NavLink> :\r\n                        <NavLink activeClassName='is-active' exact to='/' className='navbar-item'>\r\n                            <FaHome />&emsp;Home\r\n          </NavLink>}\r\n                    <NavLink activeClassName='is-active' exact to={links.deals} className='navbar-item'>\r\n                        <FaTags />&nbsp; Deals\r\n                </NavLink>\r\n                </div>\r\n                <div className=\"navbar-end\">\r\n                    {ctx.signedIn() ?\r\n                        <>\r\n                            <div className=\"navbar-item\">\r\n                            </div>\r\n                            <NavLink title=\"View profile\" activeClassName='is-active' exact to={links.profile} className='navbar-item'>\r\n                                <FaUserCircle />&emsp;Hello {ctx.user!.displayName}!\r\n                                </NavLink>\r\n                        </> : null}\r\n                    <div className=\"navbar-item\">\r\n                        {!ctx.signedIn() ?\r\n                            <div className=\"field is-grouped is-uppercase\">\r\n                                <p className=\"control\">\r\n                                    <NavLink title='Login to student portal' activeClassName='is-active' exact to='/user/login' className=\"is-primary button\">\r\n                                        <FaSignInAlt />&emsp;Student\r\n                                        </NavLink>\r\n                                </p>\r\n                                <p className=\"control\">\r\n                                    <NavLink title=\"Login to vendor portal!\" activeClassName='is-active' exact to='/vendor/login' className=\"is-link button\">\r\n                                        <FaBriefcase />&emsp;Vendor\r\n                                        </NavLink>\r\n                                </p>\r\n                            </div> :\r\n                            <NavLink title='Logout' activeClassName='is-active' exact to={`/${ctx.user!.isVendor() ? 'vendor' : 'user'}/logout`} className=\"is-danger button\">\r\n                                <FaSignOutAlt />&emsp;Logout\r\n                            </NavLink>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from \"react\";\r\nimport { FaExclamationTriangle, FaGithub } from \"react-icons/fa\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Toolbar from \"../components/toolbar\";\r\nimport { ApplicationContext } from \"../lib\";\r\nimport { Footer } from \"../components/footer\";\r\n\r\nexport function ErrorPage() {\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <div style={ctx.theme.main}>\r\n                    <Toolbar />\r\n                    <div className='hero is-black is-bold is-fullheight'>\r\n                        <div className='hero-body'>\r\n                            <div className='container notification has-text-centered' style={ctx.theme.level1}>\r\n                                <FaExclamationTriangle size={50} className=\"has-text-warning\" />\r\n                                <p className='title is-uppercase'> Page Not Found!</p>\r\n                                <br />\r\n                                <br />\r\n                                <NavLink to='/' className='button is-danger is-outlined'>Go to Homepage!</NavLink>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}","import React, { useContext } from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport { Footer } from '../components/footer'\r\nimport { GiShirt, GiSmartphone, GiCityCar, GiGlassCelebration, GiVendingMachine } from 'react-icons/gi'\r\nimport { NavLink, Redirect } from 'react-router-dom'\r\nimport links from '../lib/links'\r\nimport { useIncreaseNumber } from '../lib/hooks'\r\n\r\nexport const Home = () => {\r\n    const ctx = useContext(ApplicationContext)\r\n    const [current, update] = React.useState<number>(0)\r\n\r\n    if (ctx.signedIn()) {\r\n        return <Redirect to={links.myDeals} />\r\n    }\r\n\r\n    const startCount = (destination, step = 10) => {\r\n        const intervalID = setInterval(() => {\r\n            if (destination !== current) {\r\n                const newVal = current + step\r\n                if (newVal > destination) {\r\n                    update(destination)\r\n                    clearInterval(intervalID)\r\n                } else {\r\n                    update(newVal)\r\n                }\r\n            } else {\r\n                clearInterval(intervalID)\r\n            }\r\n        }, Math.max(Math.ceil(destination / step)), 0)\r\n    }\r\n\r\n    ctx.getVendorCount().then((d) => startCount(d))\r\n\r\n    return (\r\n        <div style={ctx.theme.main}>\r\n            <Toolbar />\r\n            <div className='hero is-fullheight is-light is-bold'>\r\n                <div className='hero-body has-text-centered'>\r\n                    <div className='container'>\r\n                        <p className='title has-text-weight-bold is-2'>Welcome to {ctx.name}</p>\r\n                        <p className='subtitle'>{ctx.description}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='hero is-medium is-primary is-bold'>\r\n                <div className='hero-body has-text-centered'>\r\n                    <div className='container'>\r\n                        <p className='title is-capitalized'>\r\n                            Gain access to thousands of great student discounts!\r\n                                </p>\r\n                        <div className='tile is-ancestor section'>\r\n                            <NavLink to={links.Fashion} className='tile is-parent'>\r\n                                <div className='tile is-child box'>\r\n                                    <GiShirt className='is-size-1' />\r\n                                    <p className='subtitle has-text-black has-text-weight-bold'>Fashion</p>\r\n                                </div>\r\n                            </NavLink>\r\n                            <NavLink to={links.Technology} className='tile is-parent'>\r\n                                <div className='tile is-child box'>\r\n                                    <GiSmartphone className='is-size-1' />\r\n                                    <p className='subtitle has-text-black has-text-weight-bold'>Technology</p>\r\n                                </div>\r\n                            </NavLink>\r\n                            <NavLink to={links.Transport} className='tile is-parent'>\r\n                                <div className='tile is-child box'>\r\n                                    <GiCityCar className='is-size-1' />\r\n                                    <p className='subtitle has-text-black has-text-weight-bold'>Transportation</p>\r\n                                </div>\r\n                            </NavLink>\r\n                            <NavLink to={links.LifeStyle} className='tile is-parent'>\r\n                                <div className='tile is-child box'>\r\n                                    <GiGlassCelebration className='is-size-1' />\r\n                                    <p className='subtitle has-text-black has-text-weight-bold'>Events &amp; Lifestyle</p>\r\n                                </div>\r\n                            </NavLink>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='hero is-medium is-dark'>\r\n                <div className='hero-body has-text-centered'>\r\n                    <div className='container'>\r\n                        <GiVendingMachine className='is-size-1' />\r\n                        <p className='subtitle'>Vendors Registered</p>\r\n                        <p className='title has-text-weight-bold is-1'>{current}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { ApplicationContext } from \"../lib\";\r\n\r\nexport const Footer = () => (\r\n    <ApplicationContext.Consumer>{ctx => (\r\n        <footer className='footer' style={ctx.theme.footer}>\r\n            <div className=\"content has-text-centered\">\r\n                <p>Copyright &copy; {ctx.name} {new Date().getFullYear()} </p>\r\n            </div>\r\n        </footer>\r\n    )}\r\n    </ApplicationContext.Consumer>\r\n)","import React from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport { Footer } from '../components/footer'\r\nimport { FaEnvelope, FaExclamationCircle, FaEyeSlash, FaEye, FaKey, FaUser, FaBriefcase } from 'react-icons/fa'\r\nimport { NavLink, Redirect } from 'react-router-dom'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nexport const Login = ({ redirectPath, registerPath, onLogin }: { onLogin: (a) => Promise<any>, redirectPath: string, registerPath: string }) => {\r\n    const [state, updateState] = React.useState({ error: null, email: \"\", password: \"\", isLoading: false })\r\n    const [showPassword, updateShowPassword] = React.useState(false)\r\n    const [redirect, setRedirect] = React.useState(false)\r\n    const { addToast } = useToasts()\r\n\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <form onSubmit={(ev) => {\r\n                    ev.preventDefault(); ev.stopPropagation();\r\n                    updateState({ ...state, isLoading: true })\r\n\r\n                    onLogin(state).then(() => {\r\n                        console.log('login success')\r\n                        addToast('Login Success!', { appearance: 'success', autoDismiss: true })\r\n                        updateState({ ...state, isLoading: false })\r\n\r\n                        return setRedirect(true)\r\n                    })\r\n                        .catch(e => {\r\n                            updateState({ ...state, isLoading: false, error: e.message })\r\n                        })\r\n                }}>\r\n                    {redirect ? <Redirect to={redirectPath} /> : null}\r\n                    <div className=\"card\">\r\n                        <section className=\"card-content\">\r\n                            {state.error ?\r\n                                <div className='notification is-warning'>\r\n                                    <FaExclamationCircle /> {state.error}\r\n                                </div>\r\n                                : null}\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Email</label>\r\n                                </div>\r\n                                <div className='field-body'>\r\n                                    <div className=\"field\">\r\n                                        <div className=\"control has-icons-left\">\r\n                                            <input required name='email' value={state.email} onChange={(ev) => updateState({ ...state, email: ev.target.value })} className=\"input\" type=\"email\" placeholder=\"Enter email address\" />\r\n                                            <span className=\"icon is-small is-left\">\r\n                                                <FaEnvelope />\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Password</label>\r\n                                </div>\r\n                                <div className='field-body'>\r\n                                    <div className=\"field has-addons\">\r\n                                        <p className=\"control is-expanded\">\r\n                                            <input required name='password' value={state.password} onChange={(ev) => updateState({ ...state, password: ev.target.value })} className=\"input\" type={showPassword ? 'text' : 'password'} />\r\n                                        </p>\r\n                                        <p className=\"control\">\r\n                                            <button tabIndex={-1} type='button' className=\"button\" onClick={() => updateShowPassword(!showPassword)}>{showPassword ? <FaEyeSlash /> : <FaEye />}</button>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field'>\r\n                                <div className='control'>\r\n                                    <button type='submit' className={`is-success button ${state.isLoading ? 'is-loading' : ''}`} disabled={state.isLoading}>Login</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </section>\r\n\r\n                        <footer className=\"card-footer is-unselectable\">\r\n                            <NavLink to={registerPath} exact className=\"card-footer-item\">Create New Account</NavLink>\r\n                        </footer>\r\n                    </div>\r\n                </form>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const Register = ({ redirectPath, onRegister, vendor, loginPath }: { loginPath: string, vendor?: boolean, onRegister: (a) => Promise<any>, redirectPath: string }) => {\r\n    const [state, updateState] = React.useState({ error: '', email: \"\", password: \"\", passwordVerify: '', isLoading: false, showPassword: false, displayName: '', companyName: '' })\r\n    const { addToast } = useToasts()\r\n    const [redirect, setRedirect] = React.useState(false)\r\n\r\n\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <form onSubmit={(ev) => {\r\n                    ev.preventDefault(); ev.stopPropagation();\r\n\r\n                    if (state.password !== state.passwordVerify) return updateState({ ...state, error: 'Passwords do not match!' })\r\n\r\n                    updateState({ ...state, isLoading: true })\r\n\r\n                    onRegister(state).then(() => {\r\n                        addToast('Registration Success!', { appearance: 'success', autoDismiss: true })\r\n                        updateState({ ...state, isLoading: false })\r\n                        return setRedirect(true)\r\n                    })\r\n                        .catch(e => {\r\n                            updateState({ ...state, isLoading: false, error: e.message })\r\n                        })\r\n                }}>\r\n                    {redirect ? <Redirect to={redirectPath} /> : null}\r\n\r\n                    <div className=\"card\">\r\n                        <section className=\"card-content\">\r\n                            {state.error ?\r\n                                <div className='notification is-warning'>\r\n                                    <FaExclamationCircle /> {state.error}\r\n                                </div>\r\n                                : null}\r\n\r\n                            {vendor ?\r\n                                <div className='field is-horizontal'>\r\n                                    <div className=\"field-label\">\r\n                                        <label className=\"label\">Company Name</label>\r\n                                    </div>\r\n                                    <div className='field-body'>\r\n                                        <div className=\"field\">\r\n                                            <div className=\"control has-icons-left\">\r\n                                                <input required name='companyname' value={state.companyName} onChange={(ev) => updateState({ ...state, companyName: ev.target.value })} className=\"input\" type=\"text\" placeholder=\"Enter company name\" />\r\n                                                <span className=\"icon is-small is-left\">\r\n                                                    <FaBriefcase />\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> : null}\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Name</label>\r\n                                </div>\r\n                                <div className='field-body'>\r\n                                    <div className=\"field\">\r\n                                        <div className=\"control has-icons-left\">\r\n                                            <input required name='name' value={state.displayName} onChange={(ev) => updateState({ ...state, displayName: ev.target.value })} className=\"input\" type=\"person\" placeholder=\"Enter your fullname\" />\r\n                                            <span className=\"icon is-small is-left\">\r\n                                                <FaUser />\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Email</label>\r\n                                </div>\r\n                                <div className='field-body'>\r\n                                    <div className=\"field\">\r\n                                        <div className=\"control has-icons-left\">\r\n                                            <input required name='email' value={state.email} onChange={(ev) => updateState({ ...state, email: ev.target.value })} className=\"input\" type=\"email\" placeholder=\"Enter email address\" />\r\n                                            <span className=\"icon is-small is-left\">\r\n                                                <FaEnvelope />\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Password</label>\r\n                                </div>\r\n                                <div className='field-body'>\r\n                                    <div className=\"field has-addons\">\r\n                                        <p className=\"control is-expanded has-icons-left\">\r\n                                            <input required name='password' value={state.password} onChange={(ev) => updateState({ ...state, password: ev.target.value })} className=\"input\" type={state.showPassword ? 'text' : 'password'} />\r\n                                            <span className=\"icon is-small is-left\">\r\n                                                <FaKey />\r\n                                            </span>\r\n                                        </p>\r\n                                        <p className=\"control\">\r\n                                            <button disabled={state.isLoading} tabIndex={-1} className=\"button\" type=\"button\" onClick={() => updateState({ ...state, showPassword: !state.showPassword })}>{state.showPassword ? <FaEyeSlash /> : <FaEye />}</button>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Confirm Password</label>\r\n                                </div>\r\n                                <div className='field-body'>\r\n\r\n                                    <div className='field'>\r\n                                        <p className=\"control has-icons-left\">\r\n                                            <input required name='password' value={state.passwordVerify} onChange={(ev) => updateState({ ...state, passwordVerify: ev.target.value })} className=\"input\" type={state.showPassword ? 'text' : 'password'} />\r\n                                            <span className=\"icon is-small is-left\">\r\n                                                <FaKey />\r\n                                            </span>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field'>\r\n                                <div className='control'>\r\n                                    <button type='submit' className={`is-success button ${state.isLoading ? 'is-loading' : ''}`} disabled={state.isLoading}>Join</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </section>\r\n\r\n                        <footer className=\"card-footer\">\r\n                            <NavLink to={loginPath} exact className=\"card-footer-item\">Login with existing account</NavLink>\r\n                        </footer>\r\n                    </div>\r\n                </form>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}","import React from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport { Footer } from '../components/footer'\r\nimport { Login } from '../components/auth'\r\n\r\nexport const LoginUser = () => {\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <div style={ctx.theme.main}>\r\n                    <Toolbar />\r\n                    <div className='section container'>\r\n                        <h2 className='is-title is-size-2 has-text-centered'>Login with username and password</h2>\r\n\r\n                        <div className='section'>\r\n                            <Login onLogin={(props) => {\r\n                                return ctx.loginStudent(props)\r\n                            }} redirectPath=\"/\" registerPath={'/user/register'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}\r\n\r\nexport const LoginVendor = () => {\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <div style={ctx.theme.main}>\r\n                    <Toolbar />\r\n                    <div className='section container'>\r\n                        <h2 className='is-title is-size-2 has-text-centered'>Login with username and password</h2>\r\n\r\n                        <div className='section'>\r\n                            <Login onLogin={props => { return ctx.loginVendor(props) }} redirectPath=\"/\" registerPath={'/vendor/register'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}","import React from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport { Footer } from '../components/footer'\r\nimport { Login, Register } from '../components/auth'\r\n\r\nexport const RegisterUser = () => {\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <div style={ctx.theme.main}>\r\n                    <Toolbar />\r\n                    <div className='section container'>\r\n                        <h2 className='is-title is-size-2 has-text-centered'>Create a new account</h2>\r\n\r\n                        <div className='section'>\r\n                            <Register onRegister={props => ctx.registerUser(props)} redirectPath=\"/\" loginPath={'/user/login'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}\r\n\r\nexport const RegisterVendor = () => {\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <div style={ctx.theme.main}>\r\n                    <Toolbar />\r\n                    <div className='section container'>\r\n                        <h2 className='is-title is-size-2 has-text-centered'>Create a new vendor account</h2>\r\n\r\n                        <div className='section'>\r\n                            <Register vendor onRegister={props => ctx.registerVendor(props)} redirectPath=\"/\" loginPath={'/vendor/login'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}","import React, { useContext, useState } from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport { Footer } from '../components/footer'\r\nimport { Login, Register } from '../components/auth'\r\nimport { Redirect } from 'react-router'\r\n\r\nexport const Logout = () => {\r\n    const ctx = useContext(ApplicationContext)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    if (!ctx.signedIn()) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    ctx.logout().then(() => setLoading(false))\r\n\r\n    return (\r\n        <div style={ctx.theme.main}>\r\n            <Toolbar />\r\n            <div className='section container'>\r\n\r\n                <div className='section'>\r\n                    <div className='hero is-fullheight'>\r\n                        <div className='hero-body'>\r\n                            <h2 className='is-title is-size-2'>Thank you for using {ctx.name}!</h2>\r\n                            {loading ? <progress className=\"progress is-small is-info\" max=\"100\">loading...</progress> : null}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport Toolbar from '../components/toolbar'\r\nimport { ApplicationContext } from '../lib'\r\n\r\n\r\nconst LoadingPhrases: string[] = ['Contacting Mothership...', 'Configuring Defences...', 'Loading...']\r\n\r\nexport const Loading = () => {\r\n    const ctx = useContext(ApplicationContext)\r\n    // const [loading, setLoading] = React.useState<boolean>(true)\r\n    const [phrase, setPhrase] = useState<string>(LoadingPhrases[Math.round(Math.random() * LoadingPhrases.length) % LoadingPhrases.length])\r\n\r\n    const intID = setInterval(() => setPhrase(LoadingPhrases[Math.round(Math.random() * LoadingPhrases.length) % LoadingPhrases.length]), 2000)\r\n    useEffect(() => {\r\n        return () => {\r\n            clearInterval(intID)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div style={ctx.theme.main}>\r\n            <Toolbar hideMenu />\r\n            <div className='hero is-fullheight is-black is-bold'>\r\n                <div className='hero-body has-text-centered'>\r\n                    <div className='container'>\r\n                        <p className='title has-text-weight-bold is-2'>Welcome to {ctx.name}</p>\r\n                        <p className='subtitle'>{ctx.description}</p>\r\n                        <br />\r\n                        <br />\r\n                        <p className='subtitle'>{phrase}</p>\r\n                        <progress className=\"progress is-small is-info\" max=\"100\">loading</progress>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst types = ['info', 'success', 'link', 'warning', 'danger', 'primary']\r\nexport const LoadingComponent = ({ phrase = \"Loading...\" }) => {\r\n    const [type, setType] = useState<string>('info')\r\n\r\n    useEffect(() => {\r\n        const intervalID = setInterval(() => setType(types[Math.round(Math.random() * types.length) % types.length]))\r\n        return () => clearInterval(intervalID)\r\n    })\r\n\r\n    return (\r\n        <div className='container has-text-centered'>\r\n            <p className='subtitle'>{phrase}</p>\r\n            <progress className={`progress is-small is-${type}`} max=\"100\">loading</progress>\r\n        </div>\r\n    )\r\n}","import React, { useContext, useState, useEffect } from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport { Footer } from '../components/footer'\r\nimport { GiShirt, GiSmartphone, GiCityCar, GiGlassCelebration, GiVendingMachine, GiWallet } from 'react-icons/gi'\r\nimport { NavLink, Redirect } from 'react-router-dom'\r\nimport links from '../lib/links'\r\nimport { useIncreaseNumber } from '../lib/hooks'\r\nimport { Deal } from '../lib/deals'\r\nimport { FaStore, FaCloud } from 'react-icons/fa'\r\n\r\n\r\nexport const MyDeals = () => {\r\n    const ctx = useContext(ApplicationContext)\r\n\r\n    if (!ctx.signedIn()) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n        <div style={ctx.theme.main}>\r\n            <Toolbar />\r\n            <div className='container'>\r\n                <div className='section'>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * Component for displaying all deals!\r\n * \r\n * The deals are paginated and only fetch more deals as requested.\r\n */\r\nexport class AllDeals extends React.PureComponent {\r\n    static contextType = ApplicationContext\r\n    context!: React.ContextType<typeof ApplicationContext>\r\n\r\n    state: { deals: Deal[], isLoading: boolean } = { deals: [], isLoading: false }\r\n\r\n    componentDidMount() {\r\n        this.context.dealMan.getDeals().then(deals => {\r\n            this.setState({ deals })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const ctx = this.context\r\n        const { isLoading, deals } = this.state\r\n\r\n        return (\r\n            <div style={ctx.theme.main}>\r\n                <Toolbar />\r\n                <div className='container is-fluid'>\r\n                    <div className='section'>\r\n                        <div className='columns is-multiline'>\r\n                            {deals.map(deal => {\r\n                                return (\r\n                                    <div key={deal.id} className='column is-3-widescreen is-4 is-12-mobile'>\r\n                                        <DealComponent deal={deal} />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <div className='container'>\r\n                            <button type='button' onClick={async () => {\r\n                                this.setState({ deals, isLoading: true })\r\n                                const y = window.scrollY\r\n                                deals.push(...await ctx.dealMan.getDeals(deals[deals.length - 1].id))\r\n                                this.setState({ deals: [...deals], isLoading: false })\r\n                                window.scroll(window.scrollX, y)\r\n                            }} className={`button is-outlined is-primary is-uppercase is-fullwidth ${isLoading ? 'is-loading' : ''}`}>Load More</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const DealComponent = ({ deal }: { deal: Deal }) => {\r\n    const ctx = useContext(ApplicationContext)\r\n\r\n    return (\r\n        <div className=\"card is-unselectable\">\r\n            <div className=\"card-image\">\r\n                <figure className=\"image is-16by9\">\r\n                    <img src={deal.cover || require('../logo.svg')} alt=\"Placeholder image\" />\r\n                </figure>\r\n            </div>\r\n            <div className=\"card-content has-text-centered\">\r\n\r\n                <p className='title is-5'>{deal.title}</p>\r\n                <p className='subtitle is-6'>{deal.description}</p>\r\n\r\n                <div className=\"content\">\r\n                    <NavLink className='button is-medium is-success is-outlined' to={`/deals/view/${deal.id}`}>\r\n                        <GiWallet />&nbsp; Get Deal\r\n    </NavLink>\r\n                </div>\r\n\r\n                <div className=\"media\">\r\n                    {/* <div className=\"media-left\">\r\n                        <figure className=\"image is-48x48\">\r\n                            <img src=\"https://bulma.io/images/placeholders/96x96.png\" alt=\"Placeholder image\" />\r\n                        </figure>\r\n                    </div> */}\r\n                    <div className=\"media-content\">\r\n                        <p className=\"title is-6\"><GiVendingMachine /> {deal.author.CompanyName}</p>\r\n                        <p className=\"subtitle tags\">\r\n                            <span className={`tag ${deal.inStore ? 'is-primary' : 'is-link'}`}>{deal.inStore ? <><FaStore />&nbsp; instore</> : <><FaCloud />&nbsp; online</>}</span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\nimport './App.css';\nimport { ApplicationContext, DefaultAppContext } from './lib';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\nimport { ErrorPage } from './pages/error';\nimport { Home } from './pages/home';\nimport { Footer } from './components/footer';\nimport { auth } from './lib/user';\nimport { LoginUser, LoginVendor } from './pages/login';\nimport { RegisterVendor, RegisterUser } from './pages/register';\nimport { Logout } from './pages/logout';\nimport { Loading } from './pages/loading';\nimport links from './lib/links';\nimport { MyDeals, AllDeals } from './pages/deal';\nimport { FaThumbsUp } from 'react-icons/fa';\n\n\nconst App: React.FC = () => {\n  const [ready, setReady] = useState(false)\n  const [online, setOnline] = useState(navigator.onLine)\n\n  const { addToast } = useToasts()\n  window.onoffline = () => {\n    if (!online) return\n    console.log('lagbaja')\n    setOnline(false)\n    addToast(\"You are offline!\", {\n      appearance: 'warning',\n      autoDismiss: false\n    })\n  }\n  window.ononline = () => {\n    if (online) return\n\n    setOnline(true)\n    addToast(<p>Welcome back to the Internet &nbsp;<FaThumbsUp /></p>, {\n      appearance: 'info',\n      autoDismiss: false\n    })\n  }\n\n  return (\n    <ApplicationContext.Provider value={DefaultAppContext}  >\n      <ApplicationContext.Consumer>{ctx => {\n        ctx.isReady().then(isReady => setReady(isReady))\n\n        return (\n          <BrowserRouter basename='/deals'>\n            {!ready ? <Loading /> : (\n              <>\n                <Switch>\n                  <Route strict exact path='deals/view/:id' component={ErrorPage} />\n                  <Route strict exact path={links.deals} component={AllDeals} />\n                  <Route strict exact path={links.myDeals} component={MyDeals} />\n                  {/* <Route strict exact path='/deals/:category' component={} /> */}\n                  <Route strict exact path=\"/vendor/register\" component={RegisterVendor} />\n                  <Route strict exact path=\"/user/register\" component={RegisterUser} />\n                  <Route strict exact path=\"/vendor/login\" component={LoginVendor} />\n                  <Route strict exact path=\"/user/login\" component={LoginUser} />\n                  <Route strict exact path=\"/:user/logout\" component={Logout} />\n                  <Route strict exact path=\"/\" component={Home} />\n                  <Route component={ErrorPage} />\n                </Switch>\n                <Footer />\n              </>\n            )}\n          </BrowserRouter>\n        )\n      }}</ApplicationContext.Consumer>\n    </ApplicationContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ToastProvider } from 'react-toast-notifications';\n\nReactDOM.render(\n    <ToastProvider placement={'bottom-center'}>\n        <App />\n    </ToastProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}