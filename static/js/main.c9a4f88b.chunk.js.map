{"version":3,"sources":["lib/firebase.ts","lib/util.ts","lib/user.ts","lib/theme.ts","lib/index.ts","components/toolbar.tsx","pages/error.tsx","lib/links.ts","pages/home.tsx","components/footer.tsx","components/auth.tsx","pages/login.tsx","pages/register.tsx","pages/logout.tsx","pages/loading.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","analytics","log","console","auth","usersRef","database","ref","vendorsRef","User","userObj","uid","displayName","fUser","isAnonymous","this","email","password","currentUser","signInAnonymously","Error","credential","EmailAuthProvider","linkWithCredential","then","a","usercred","user","updateProfile","child","set","catch","e","delete","error","message","signInWithEmailAndPassword","cred","errorCode","code","Vendor","companyName","Promise","res","rej","once","snapshot","exists","val","signOut","DEFAULT_THEME","main","background","color","minHeight","overflowY","paddingTop","level1","header","boxShadow","footer","padding","fBase","DefaultAppContext","name","description","version","theme","_isReady","document","title","onAuthStateChanged","undefined","userDetails","login","vendorDetails","register","fetch","json","vendors","Object","keys","length","ApplicationContext","createContext","Toolbar","hideMenu","ctx","useContext","React","useState","isActive","updateActive","className","style","onClick","isActiveNow","setTimeout","activeClassName","exact","to","signedIn","isVendor","ErrorPage","Consumer","size","Home","current","update","getVendorCount","d","destination","step","intervalID","setInterval","newVal","clearInterval","Math","max","ceil","startCount","links","Footer","Date","getFullYear","Login","redirectPath","registerPath","onLogin","isLoading","state","updateState","showPassword","updateShowPassword","redirect","setRedirect","addToast","useToasts","onSubmit","ev","preventDefault","stopPropagation","appearance","autoDismiss","required","value","onChange","target","type","placeholder","tabIndex","disabled","Register","onRegister","vendor","loginPath","passwordVerify","LoginUser","props","loginStudent","LoginVendor","loginVendor","RegisterUser","registerUser","RegisterVendor","registerVendor","Logout","loading","setLoading","logout","Loading","App","ready","setReady","placement","Provider","isReady","basename","strict","path","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.c9a4f88b.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nexport const firebaseConfig = {\r\n    apiKey: \"AIzaSyDRlJC_SV_wCL5eTDxVY24e3mHVGFJLNxg\",\r\n    authDomain: \"unidays-3205e.firebaseapp.com\",\r\n    databaseURL: \"https://unidays-3205e.firebaseio.com\",\r\n    projectId: \"unidays-3205e\",\r\n    storageBucket: \"unidays-3205e.appspot.com\",\r\n    messagingSenderId: \"127396561143\",\r\n    appId: \"1:127396561143:web:a032c8f3b20540fc4e53f2\",\r\n    measurementId: \"G-6HPPCPKTZ6\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();","export function log(...args: any[]){\r\n    console.log(...args)\r\n}","import firebase from \"firebase\"\r\nimport { log } from \"./util\"\r\n\r\nexport const auth = firebase.auth()\r\nconst usersRef = firebase.database().ref('users')\r\nconst vendorsRef = firebase.database().ref('vendors')\r\n\r\nexport class User {\r\n    uid: string\r\n    displayName: string\r\n    protected fUser: firebase.User\r\n    readonly isAnonymous: boolean = false\r\n\r\n    constructor(userObj: firebase.User) {\r\n        this.uid = userObj.uid\r\n        this.displayName = userObj.displayName ? userObj.displayName : \"\"\r\n        this.fUser = userObj\r\n        this.isAnonymous = this.fUser.isAnonymous\r\n    }\r\n\r\n    isVendor(): boolean {\r\n        return false\r\n    }\r\n\r\n\r\n    /**\r\n     * All access to app is anonymous by default.\r\n     * \r\n     * Upon registration, the user account is linked to the current aonymous user.\r\n     */\r\n    static async register({ displayName, email, password }: { email: string, password: string, displayName: string }) {\r\n        if (!auth.currentUser) {\r\n            auth.signInAnonymously()\r\n            throw new Error(\"This is weird! Application must start with atleast an anonymous user!\")\r\n        }\r\n\r\n        const credential = firebase.auth.EmailAuthProvider.credential(email, password)\r\n        return auth.currentUser.linkWithCredential(credential).then(async (usercred) => {\r\n            if (!usercred.user) {\r\n                throw new Error(\"User should not be empty!\")\r\n            }\r\n\r\n            const user = usercred.user;\r\n            console.log(\"Anonymous account successfully upgraded\", user);\r\n\r\n            await user.updateProfile({ displayName }).then(() => usersRef.child(user.uid).set({\r\n                displayName,\r\n                email\r\n            })\r\n            ).catch(e => {\r\n                log(e)\r\n                user!.delete()\r\n                throw new Error(\"Could not register user!\")\r\n            })\r\n\r\n            return new User(user)\r\n        }, (error) => {\r\n            console.log('Error upgrading anonymous account', error)\r\n            throw new Error(error.message);\r\n        })\r\n    }\r\n\r\n    static async login(email: string, password: string) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n            .then(cred => {\r\n                if (!cred.user) throw new Error(\"User not found!\")\r\n                return new User(cred.user)\r\n            })\r\n            .catch((error) => {\r\n                // Handle Errors here.\r\n                var errorCode = error.code;\r\n\r\n                console.log(error)\r\n                if (errorCode === 'auth/wrong-password') {\r\n                    throw new Error('Wrong password.');\r\n                } else {\r\n                    throw error;\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport class Vendor extends User {\r\n    companyName: string\r\n\r\n    constructor(userObj: firebase.User, companyName: string) {\r\n        super(userObj)\r\n        this.companyName = companyName\r\n    }\r\n\r\n    isVendor() {\r\n        return true\r\n    }\r\n\r\n    /**`\r\n     * Registers a new vendor.\r\n     * \r\n     * Vendor registration is different from user registration and only one account type can be signedin at a time.\r\n     */\r\n    static async register({ companyName, displayName, email, password }: { companyName: string, email: string, password: string, displayName: string }) {\r\n        if (!auth.currentUser) {\r\n            auth.signInAnonymously()\r\n            throw new Error(\"This is weird! Application must start with atleast an anonymous user!\")\r\n        }\r\n\r\n        const credential = firebase.auth.EmailAuthProvider.credential(email, password)\r\n        return auth.currentUser.linkWithCredential(credential).then(async (usercred) => {\r\n            if (!usercred.user) {\r\n                throw new Error(\"User should not be empty!\")\r\n            }\r\n\r\n            const user = usercred.user;\r\n            console.log(\"Anonymous account successfully upgraded\", user);\r\n            await user.updateProfile({ displayName }).then(() => vendorsRef.child(user.uid).set({\r\n                displayName,\r\n                email,\r\n                companyName\r\n            })\r\n            ).catch(e => {\r\n                log(e)\r\n                user!.delete()\r\n                throw new Error(\"Could not register vendor!\")\r\n            })\r\n\r\n            return new Vendor(user, companyName)\r\n        }, (error) => {\r\n            console.log(\"Error upgrading anonymous account\", error)\r\n            throw new Error(error.message || \"Failed to register account!\");\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Login authenticates the current user as a vendor.\r\n     * \r\n     * If the company name of this vendor account is not found an error is thrown.\r\n     * It is an invalid action to create vendors without populating the company name.\r\n     */\r\n    static async login(email: string, password: string) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n            .then(async cred => {\r\n                if (!cred.user) throw new Error(\"User not found!\")\r\n\r\n                const companyName: string = await new Promise((res, rej) => {\r\n                    vendorsRef.child(`${cred.user!.uid}/companyName`).once('value', (snapshot) => {\r\n                        if (snapshot.exists()) {\r\n                            return res(snapshot.val())\r\n                        }\r\n                        //Vendor cannot exist without having a company name!\r\n                        auth.signOut()\r\n                        rej(new Error('Vendor account not found! Did you mean to login as a user?'))\r\n                    })\r\n                })\r\n                return new Vendor(cred.user, companyName)\r\n            })\r\n            .catch((error) => {\r\n                // Handle Errors here.\r\n                var errorCode = error.code;\r\n\r\n                console.log(error)\r\n                if (errorCode === 'auth/wrong-password') {\r\n                    throw new Error('Wrong password.');\r\n                } else {\r\n                    throw error;\r\n                }\r\n            })\r\n    }\r\n}","export interface Theme {\r\n    /**\r\n     * Main is the lowest level of the screen. This is the reall background of the application.\r\n     */\r\n    main?: React.CSSProperties,\r\n    level1?: React.CSSProperties\r\n    header?: React.CSSProperties\r\n    footer?: React.CSSProperties\r\n}\r\n\r\nexport const DEFAULT_THEME: Theme = {\r\n    main: {\r\n        background: \"#001\",\r\n        color: \"#efefef\",\r\n        minHeight: '100%',\r\n        overflowY: 'scroll',\r\n        paddingTop: '3.25rem'\r\n    },\r\n    level1: {\r\n        background: \"#222\"\r\n    },\r\n    header: {\r\n        background: \"#353545\",\r\n        color: '#fefefe',\r\n        boxShadow: '#2228 0 1px 0.1em 0.1em'\r\n    },\r\n    footer: {\r\n        padding: '1em',\r\n        color: '#555'\r\n    }\r\n}","import { createContext } from 'react'\r\nimport * as fBase from './firebase'\r\nimport { User, Vendor, auth } from './user'\r\nimport { log } from './util'\r\nimport { DEFAULT_THEME } from \"./theme\";\r\nimport firebase from 'firebase';\r\n\r\nlog(fBase.firebaseConfig)\r\n\r\nclass AppContext {\r\n    // App datails\r\n    name = \"My Student Deal\"\r\n    description = \"Bringing the most exciting shopping discounts and deals to students globally!\"\r\n    version = \"0.0.1\"\r\n\r\n    // Theme settings\r\n    theme = DEFAULT_THEME\r\n\r\n    // Instance properties\r\n    //\r\n    // Currently logged in user\r\n    user?: User\r\n\r\n    protected _isReady: Promise<boolean>\r\n\r\n    constructor() {\r\n        document.title = this.name\r\n\r\n        this._isReady = new Promise((res) => {\r\n            auth.onAuthStateChanged(user => {\r\n                if (user) {\r\n                    // If user is anonymous, create a user object to allow saving state once activity is done.\r\n                    if (user.isAnonymous) {\r\n                        console.log(\"Anonymous user created\", user)\r\n                        this.user = new User(user)\r\n                    }\r\n                    else {\r\n                        console.log(\"currently signedin as \", user.displayName)\r\n                        this.user = new User(user)\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    this.user = undefined\r\n                    // Signs in current user anonymously\r\n                    if (!this.user) auth.signInAnonymously()\r\n                }\r\n                res(true)\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    isReady() {\r\n        return this._isReady\r\n    }\r\n\r\n    signedIn() {\r\n        return this.user && !this.user.isAnonymous\r\n    }\r\n\r\n    loginStudent(userDetails: { email: string, password: string }) {\r\n        return User.login(userDetails.email, userDetails.password).then(user => {\r\n            this.user = user\r\n            return this\r\n        })\r\n    }\r\n\r\n    loginVendor(vendorDetails: { email: string, password: string }) {\r\n        return Vendor.login(vendorDetails.email, vendorDetails.password).then(user => {\r\n            this.user = user\r\n            return this\r\n        })\r\n    }\r\n\r\n\r\n    registerUser(userDetails: { displayName: string, email: string, password: string }) {\r\n        return User.register(userDetails).then(user => {\r\n            this.user = user\r\n        })\r\n    }\r\n\r\n    registerVendor(vendorDetails: { displayName: string, email: string, password: string, companyName: string }) {\r\n        return Vendor.register(vendorDetails).then(user => {\r\n            this.user = user\r\n        })\r\n    }\r\n\r\n    async logout() {\r\n        if (this.user) {\r\n            this.user = undefined\r\n            return await auth.signOut()\r\n        }\r\n    }\r\n\r\n\r\n    async getVendorCount() {\r\n        const vendors = await (await fetch(`${fBase.firebaseConfig.databaseURL}/vendors.json?shallow=true`)).json()\r\n        if (!vendors) return 0\r\n        return Object.keys(vendors).length\r\n    }\r\n}\r\n\r\nexport const DefaultAppContext = new AppContext()\r\nexport const ApplicationContext = createContext<AppContext>(DefaultAppContext)\r\n","import React, { useContext } from 'react';\r\nimport { FaHome, FaSignInAlt, FaSign, FaBriefcase, FaWallet, FaSignOutAlt, FaShoppingBasket, FaTags, FaUserCircle } from \"react-icons/fa\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ApplicationContext } from '../lib';\r\nimport { User } from '../lib/user';\r\n\r\nexport default function Toolbar({ hideMenu }: { hideMenu?: boolean }) {\r\n    const ctx = useContext(ApplicationContext)\r\n    let [isActive, updateActive] = React.useState(false)\r\n\r\n    if (hideMenu) {\r\n        return (\r\n            <nav className={`navbar is-centered is-unselectable is-fixed-top is-black`} style={ctx.theme.header} >\r\n                <div className=\"navbar-brand\">\r\n                    <span className=\"navbar-item has-text-weight-bold\">{ctx.name}</span>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <nav className={`navbar is-centered is-unselectable is-fixed-top is-black`} style={ctx.theme.header} >\r\n            <div className=\"navbar-brand\">\r\n                <span className=\"navbar-item has-text-weight-bold\">{ctx.name}</span>\r\n                <span onClick={() => {\r\n                    const isActiveNow = !isActive\r\n                    updateActive(isActiveNow)\r\n                    if (isActiveNow === true) {\r\n                        setTimeout(() => updateActive(false), 10000)\r\n                    }\r\n                }} className={`navbar-burger burger ${isActive ? 'is-active' : ''}`}>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </span>\r\n            </div>\r\n            <div className={`navbar-menu ${isActive ? 'is-active' : ''}`}>\r\n                <div className=\"navbar-start\">\r\n                    <NavLink activeClassName='is-active' exact to='/' className='navbar-item'>\r\n                        <FaHome />&emsp;Home\r\n                </NavLink>\r\n                    <NavLink activeClassName='is-active' exact to='/all' className='navbar-item'>\r\n                        <FaTags />&nbsp; Deals\r\n                </NavLink>\r\n                    {ctx.signedIn() ?\r\n                        <NavLink activeClassName='is-active' exact to='/mydeals' className='navbar-item'>\r\n                            <FaWallet />&emsp;My Deals\r\n                </NavLink> : null}\r\n                </div>\r\n                <div className=\"navbar-end\">\r\n                    {ctx.signedIn() ?\r\n                        <>\r\n                            <div className=\"navbar-item\">\r\n                                <p>Hello {ctx.user!.displayName}!</p>\r\n                            </div>\r\n                            <NavLink title=\"Login to vendor portal!\" activeClassName='is-active' exact to='/vendor/login' className='navbar-item'>\r\n                                <FaUserCircle />&emsp;Profile\r\n                                </NavLink>\r\n                        </> : null}\r\n                    <div className=\"navbar-item\">\r\n                        {!ctx.signedIn() ?\r\n                            <div className=\"field is-grouped is-uppercase\">\r\n                                <p className=\"control\">\r\n                                    <NavLink title='Login to student portal' activeClassName='is-active' exact to='/user/login' className=\"is-primary button\">\r\n                                        <FaSignInAlt />&emsp;Student\r\n                                        </NavLink>\r\n                                </p>\r\n                                <p className=\"control\">\r\n                                    <NavLink title=\"Login to vendor portal!\" activeClassName='is-active' exact to='/vendor/login' className=\"is-link button\">\r\n                                        <FaBriefcase />&emsp;Vendor\r\n                                        </NavLink>\r\n                                </p>\r\n                            </div> :\r\n                            <NavLink title='Logout' activeClassName='is-active' exact to={`/${ctx.user!.isVendor() ? 'vendor' : 'user'}/logout`} className=\"is-danger button\">\r\n                                <FaSignOutAlt />&emsp;Logout\r\n                            </NavLink>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from \"react\";\r\nimport { FaExclamationTriangle, FaGithub } from \"react-icons/fa\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Toolbar from \"../components/toolbar\";\r\nimport { ApplicationContext } from \"../lib\";\r\nimport { Footer } from \"../components/footer\";\r\n\r\nexport function ErrorPage() {\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <div style={ctx.theme.main}>\r\n                    <Toolbar />\r\n                    <div className='hero is-black is-bold is-fullheight'>\r\n                        <div className='hero-body'>\r\n                            <div className='container notification has-text-centered' style={ctx.theme.level1}>\r\n                                <FaExclamationTriangle size={50} className=\"has-text-warning\" />\r\n                                <p className='title is-uppercase'> Page Not Found!</p>\r\n                                <br />\r\n                                <br />\r\n                                <NavLink to='/' className='button is-danger is-outlined'>Go to Homepage!</NavLink>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}","export default {\r\n    Transport: '/deals/transport',\r\n    Fashion: '/deals/fashion',\r\n    LifeStyle: '/deals/lifestyle',\r\n    Technology: '/deals/tech'\r\n}","import React, { useContext } from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport { Footer } from '../components/footer'\r\nimport { GiShirt, GiSmartphone, GiCityCar, GiGlassCelebration, GiVendingMachine } from 'react-icons/gi'\r\nimport { NavLink } from 'react-router-dom'\r\nimport links from '../lib/links'\r\nimport { useIncreaseNumber } from '../lib/hooks'\r\n\r\nexport const Home = () => {\r\n    const ctx = useContext(ApplicationContext)\r\n    const [current, update] = React.useState<number>(0)\r\n\r\n    const startCount = (destination, step = 10) => {\r\n        const intervalID = setInterval(() => {\r\n            if (destination !== current) {\r\n                const newVal = current + step\r\n                if (newVal > destination) {\r\n                    update(destination)\r\n                    clearInterval(intervalID)\r\n                } else {\r\n                    update(newVal)\r\n                }\r\n            } else {\r\n                clearInterval(intervalID)\r\n            }\r\n        }, Math.max(Math.ceil(destination / step)), 0)\r\n    }\r\n\r\n    ctx.getVendorCount().then((d) => startCount(d))\r\n\r\n    return (\r\n        <div style={ctx.theme.main}>\r\n            <Toolbar />\r\n            <div className='hero is-fullheight is-light is-bold'>\r\n                <div className='hero-body has-text-centered'>\r\n                    <div className='container'>\r\n                        <p className='title has-text-weight-bold is-2'>Welcome to {ctx.name}</p>\r\n                        <p className='subtitle'>{ctx.description}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='hero is-medium is-primary is-bold'>\r\n                <div className='hero-body has-text-centered'>\r\n                    <div className='container'>\r\n                        <p className='title is-capitalized'>\r\n                            Gain access to thousands of great student discounts!\r\n                                </p>\r\n                        <div className='tile is-ancestor section'>\r\n                            <NavLink to={links.Fashion} className='tile is-parent'>\r\n                                <div className='tile is-child box'>\r\n                                    <GiShirt className='is-size-1' />\r\n                                    <p className='subtitle has-text-black has-text-weight-bold'>Fashion</p>\r\n                                </div>\r\n                            </NavLink>\r\n                            <NavLink to={links.Technology} className='tile is-parent'>\r\n                                <div className='tile is-child box'>\r\n                                    <GiSmartphone className='is-size-1' />\r\n                                    <p className='subtitle has-text-black has-text-weight-bold'>Technology</p>\r\n                                </div>\r\n                            </NavLink>\r\n                            <NavLink to={links.Transport} className='tile is-parent'>\r\n                                <div className='tile is-child box'>\r\n                                    <GiCityCar className='is-size-1' />\r\n                                    <p className='subtitle has-text-black has-text-weight-bold'>Transportation</p>\r\n                                </div>\r\n                            </NavLink>\r\n                            <NavLink to={links.LifeStyle} className='tile is-parent'>\r\n                                <div className='tile is-child box'>\r\n                                    <GiGlassCelebration className='is-size-1' />\r\n                                    <p className='subtitle has-text-black has-text-weight-bold'>Events &amp; Lifestyle</p>\r\n                                </div>\r\n                            </NavLink>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='hero is-medium is-dark'>\r\n                <div className='hero-body has-text-centered'>\r\n                    <div className='container'>\r\n                        <GiVendingMachine className='is-size-1' />\r\n                        <p className='subtitle'>Vendors Registered</p>\r\n                        <p className='title has-text-weight-bold is-1'>{current}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { ApplicationContext } from \"../lib\";\r\n\r\nexport const Footer = () => (\r\n    <ApplicationContext.Consumer>{ctx => (\r\n        <footer className='footer' style={ctx.theme.footer}>\r\n            <div className=\"content has-text-centered\">\r\n                <p>Copyright &copy; {ctx.name} {new Date().getFullYear()} </p>\r\n            </div>\r\n        </footer>\r\n    )}\r\n    </ApplicationContext.Consumer>\r\n)","import React from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport { Footer } from '../components/footer'\r\nimport { FaEnvelope, FaExclamationCircle, FaEyeSlash, FaEye, FaKey, FaUser, FaBriefcase } from 'react-icons/fa'\r\nimport { NavLink, Redirect } from 'react-router-dom'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nexport const Login = ({ redirectPath, registerPath, onLogin }: { onLogin: (a) => Promise<any>, redirectPath: string, registerPath: string }) => {\r\n    const [state, updateState] = React.useState({ error: null, email: \"\", password: \"\", isLoading: false })\r\n    const [showPassword, updateShowPassword] = React.useState(false)\r\n    const [redirect, setRedirect] = React.useState(false)\r\n    const { addToast } = useToasts()\r\n\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <form onSubmit={(ev) => {\r\n                    ev.preventDefault(); ev.stopPropagation();\r\n                    updateState({ ...state, isLoading: true })\r\n\r\n                    onLogin(state).then(() => {\r\n                        console.log('login success')\r\n                        addToast('Login Success!', { appearance: 'success', autoDismiss: true })\r\n                        updateState({ ...state, isLoading: false })\r\n\r\n                        return setRedirect(true)\r\n                    })\r\n                        .catch(e => {\r\n                            updateState({ ...state, isLoading: false, error: e.message })\r\n                        })\r\n                }}>\r\n                    {redirect ? <Redirect to={redirectPath} /> : null}\r\n                    <div className=\"card\">\r\n                        <section className=\"card-content\">\r\n                            {state.error ?\r\n                                <div className='notification is-warning'>\r\n                                    <FaExclamationCircle /> {state.error}\r\n                                </div>\r\n                                : null}\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Email</label>\r\n                                </div>\r\n                                <div className='field-body'>\r\n                                    <div className=\"field\">\r\n                                        <div className=\"control has-icons-left\">\r\n                                            <input required name='email' value={state.email} onChange={(ev) => updateState({ ...state, email: ev.target.value })} className=\"input\" type=\"email\" placeholder=\"Enter email address\" />\r\n                                            <span className=\"icon is-small is-left\">\r\n                                                <FaEnvelope />\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Password</label>\r\n                                </div>\r\n                                <div className='field-body'>\r\n                                    <div className=\"field has-addons\">\r\n                                        <p className=\"control is-expanded\">\r\n                                            <input required name='password' value={state.password} onChange={(ev) => updateState({ ...state, password: ev.target.value })} className=\"input\" type={showPassword ? 'text' : 'password'} />\r\n                                        </p>\r\n                                        <p className=\"control\">\r\n                                            <button tabIndex={-1} type='button' className=\"button\" onClick={() => updateShowPassword(!showPassword)}>{showPassword ? <FaEyeSlash /> : <FaEye />}</button>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field'>\r\n                                <div className='control'>\r\n                                    <button type='submit' className={`is-success button ${state.isLoading ? 'is-loading' : ''}`} disabled={state.isLoading}>Login</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </section>\r\n\r\n                        <footer className=\"card-footer is-unselectable\">\r\n                            <NavLink to={registerPath} exact className=\"card-footer-item\">Create New Account</NavLink>\r\n                        </footer>\r\n                    </div>\r\n                </form>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const Register = ({ redirectPath, onRegister, vendor, loginPath }: { loginPath: string, vendor?: boolean, onRegister: (a) => Promise<any>, redirectPath: string }) => {\r\n    const [state, updateState] = React.useState({ error: '', email: \"\", password: \"\", passwordVerify: '', isLoading: false, showPassword: false, displayName: '', companyName: '' })\r\n    const { addToast } = useToasts()\r\n    const [redirect, setRedirect] = React.useState(false)\r\n\r\n\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <form onSubmit={(ev) => {\r\n                    ev.preventDefault(); ev.stopPropagation();\r\n\r\n                    if (state.password !== state.passwordVerify) return updateState({ ...state, error: 'Passwords do not match!' })\r\n\r\n                    updateState({ ...state, isLoading: true })\r\n\r\n                    onRegister(state).then(() => {\r\n                        addToast('Registration Success!', { appearance: 'success', autoDismiss: true })\r\n                        updateState({ ...state, isLoading: false })\r\n                        return setRedirect(true)\r\n                    })\r\n                        .catch(e => {\r\n                            updateState({ ...state, isLoading: false, error: e.message })\r\n                        })\r\n                }}>\r\n                    {redirect ? <Redirect to={redirectPath} /> : null}\r\n\r\n                    <div className=\"card\">\r\n                        <section className=\"card-content\">\r\n                            {state.error ?\r\n                                <div className='notification is-warning'>\r\n                                    <FaExclamationCircle /> {state.error}\r\n                                </div>\r\n                                : null}\r\n\r\n                            {vendor ?\r\n                                <div className='field is-horizontal'>\r\n                                    <div className=\"field-label\">\r\n                                        <label className=\"label\">Company Name</label>\r\n                                    </div>\r\n                                    <div className='field-body'>\r\n                                        <div className=\"field\">\r\n                                            <div className=\"control has-icons-left\">\r\n                                                <input required name='companyname' value={state.companyName} onChange={(ev) => updateState({ ...state, companyName: ev.target.value })} className=\"input\" type=\"text\" placeholder=\"Enter company name\" />\r\n                                                <span className=\"icon is-small is-left\">\r\n                                                    <FaBriefcase />\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> : null}\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Name</label>\r\n                                </div>\r\n                                <div className='field-body'>\r\n                                    <div className=\"field\">\r\n                                        <div className=\"control has-icons-left\">\r\n                                            <input required name='name' value={state.displayName} onChange={(ev) => updateState({ ...state, displayName: ev.target.value })} className=\"input\" type=\"person\" placeholder=\"Enter your fullname\" />\r\n                                            <span className=\"icon is-small is-left\">\r\n                                                <FaUser />\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Email</label>\r\n                                </div>\r\n                                <div className='field-body'>\r\n                                    <div className=\"field\">\r\n                                        <div className=\"control has-icons-left\">\r\n                                            <input required name='email' value={state.email} onChange={(ev) => updateState({ ...state, email: ev.target.value })} className=\"input\" type=\"email\" placeholder=\"Enter email address\" />\r\n                                            <span className=\"icon is-small is-left\">\r\n                                                <FaEnvelope />\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Password</label>\r\n                                </div>\r\n                                <div className='field-body'>\r\n                                    <div className=\"field has-addons\">\r\n                                        <p className=\"control is-expanded has-icons-left\">\r\n                                            <input required name='password' value={state.password} onChange={(ev) => updateState({ ...state, password: ev.target.value })} className=\"input\" type={state.showPassword ? 'text' : 'password'} />\r\n                                            <span className=\"icon is-small is-left\">\r\n                                                <FaKey />\r\n                                            </span>\r\n                                        </p>\r\n                                        <p className=\"control\">\r\n                                            <button disabled={state.isLoading} tabIndex={-1} className=\"button\" type=\"button\" onClick={() => updateState({ ...state, showPassword: !state.showPassword })}>{state.showPassword ? <FaEyeSlash /> : <FaEye />}</button>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Confirm Password</label>\r\n                                </div>\r\n                                <div className='field-body'>\r\n\r\n                                    <div className='field'>\r\n                                        <p className=\"control has-icons-left\">\r\n                                            <input required name='password' value={state.passwordVerify} onChange={(ev) => updateState({ ...state, passwordVerify: ev.target.value })} className=\"input\" type={state.showPassword ? 'text' : 'password'} />\r\n                                            <span className=\"icon is-small is-left\">\r\n                                                <FaKey />\r\n                                            </span>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field'>\r\n                                <div className='control'>\r\n                                    <button type='submit' className={`is-success button ${state.isLoading ? 'is-loading' : ''}`} disabled={state.isLoading}>Join</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </section>\r\n\r\n                        <footer className=\"card-footer\">\r\n                            <NavLink to={loginPath} exact className=\"card-footer-item\">Login with existing account</NavLink>\r\n                        </footer>\r\n                    </div>\r\n                </form>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}","import React from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport { Footer } from '../components/footer'\r\nimport { Login } from '../components/auth'\r\n\r\nexport const LoginUser = () => {\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <div style={ctx.theme.main}>\r\n                    <Toolbar />\r\n                    <div className='section container'>\r\n                        <h2 className='is-title is-size-2 has-text-centered'>Login with username and password</h2>\r\n\r\n                        <div className='section'>\r\n                            <Login onLogin={(props) => {\r\n                                return ctx.loginStudent(props)\r\n                            }} redirectPath=\"/\" registerPath={'/user/register'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}\r\n\r\nexport const LoginVendor = () => {\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <div style={ctx.theme.main}>\r\n                    <Toolbar />\r\n                    <div className='section container'>\r\n                        <h2 className='is-title is-size-2 has-text-centered'>Login with username and password</h2>\r\n\r\n                        <div className='section'>\r\n                            <Login onLogin={props => { return ctx.loginVendor(props) }} redirectPath=\"/\" registerPath={'/vendor/register'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}","import React from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport { Footer } from '../components/footer'\r\nimport { Login, Register } from '../components/auth'\r\n\r\nexport const RegisterUser = () => {\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <div style={ctx.theme.main}>\r\n                    <Toolbar />\r\n                    <div className='section container'>\r\n                        <h2 className='is-title is-size-2 has-text-centered'>Create a new account</h2>\r\n\r\n                        <div className='section'>\r\n                            <Register onRegister={props => ctx.registerUser(props)} redirectPath=\"/\" loginPath={'/user/login'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}\r\n\r\nexport const RegisterVendor = () => {\r\n    return (\r\n        <ApplicationContext.Consumer>{(ctx) => {\r\n            return (\r\n                <div style={ctx.theme.main}>\r\n                    <Toolbar />\r\n                    <div className='section container'>\r\n                        <h2 className='is-title is-size-2 has-text-centered'>Create a new vendor account</h2>\r\n\r\n                        <div className='section'>\r\n                            <Register vendor onRegister={props => ctx.registerVendor(props)} redirectPath=\"/\" loginPath={'/vendor/login'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }}\r\n        </ApplicationContext.Consumer>\r\n    )\r\n}","import React, { useContext, useState } from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport { Footer } from '../components/footer'\r\nimport { Login, Register } from '../components/auth'\r\nimport { Redirect } from 'react-router'\r\n\r\nexport const Logout = () => {\r\n    const ctx = useContext(ApplicationContext)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    if (!ctx.signedIn()) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    ctx.logout().then(() => setLoading(false))\r\n\r\n    return (\r\n        <div style={ctx.theme.main}>\r\n            <Toolbar />\r\n            <div className='section container'>\r\n\r\n                <div className='section'>\r\n                    <div className='hero is-fullheight'>\r\n                        <div className='hero-body'>\r\n                            <h2 className='is-title is-size-2'>Thank you for using {ctx.name}!</h2>\r\n                            {loading ? <progress className=\"progress is-small is-info\" max=\"100\">loading...</progress> : null}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ApplicationContext } from '../lib'\r\nimport Toolbar from '../components/toolbar'\r\nimport { Footer } from '../components/footer'\r\nimport { GiShirt, GiSmartphone, GiCityCar, GiGlassCelebration } from 'react-icons/gi'\r\nimport { NavLink } from 'react-router-dom'\r\nimport links from '../lib/links'\r\nimport { useIncreaseNumber } from '../lib/hooks'\r\n\r\nexport const Loading = () => {\r\n    const ctx = useContext(ApplicationContext)\r\n    const [loading, setLoading] = React.useState<boolean>(true)\r\n\r\n    return (\r\n        <div style={ctx.theme.main}>\r\n            <Toolbar hideMenu />\r\n            <div className='hero is-fullheight is-black is-bold'>\r\n                <div className='hero-body has-text-centered'>\r\n                    <div className='container'>\r\n                        <p className='title has-text-weight-bold is-2'>Welcome to {ctx.name}</p>\r\n                        <p className='subtitle'>{ctx.description}</p>\r\n                        <progress className=\"progress is-small is-info\" max=\"100\">loading</progress>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\nimport './App.css';\nimport { ApplicationContext, DefaultAppContext } from './lib';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { ToastProvider } from \"react-toast-notifications\";\nimport { ErrorPage } from './pages/error';\nimport { Home } from './pages/home';\nimport { Footer } from './components/footer';\nimport { auth } from './lib/user';\nimport { LoginUser, LoginVendor } from './pages/login';\nimport { RegisterVendor, RegisterUser } from './pages/register';\nimport { Logout } from './pages/logout';\nimport { Loading } from './pages/loading';\n\n\nconst App: React.FC = () => {\n  const [ready, setReady] = useState(false)\n\n  return (\n    <ToastProvider placement={'bottom-center'}>\n\n      <ApplicationContext.Provider value={DefaultAppContext}  >\n        <ApplicationContext.Consumer>{ctx => {\n          ctx.isReady().then(isReady => setReady(isReady))\n\n          return (\n            <BrowserRouter basename='/deals'>\n              {!ready ? <Loading /> : (\n                <>\n                  <Switch>\n                    <Route strict exact path=\"/vendor/register\" component={RegisterVendor} />\n                    <Route strict exact path=\"/user/register\" component={RegisterUser} />\n                    <Route strict exact path=\"/vendor/login\" component={LoginVendor} />\n                    <Route strict exact path=\"/user/login\" component={LoginUser} />\n                    <Route strict exact path=\"/:user/logout\" component={Logout} />\n                    <Route strict exact path=\"/\" component={Home} />\n                    <Route component={ErrorPage} />\n                  </Switch>\n                  <Footer />\n                </>\n              )}\n            </BrowserRouter>\n          )\n        }}</ApplicationContext.Consumer>\n      </ApplicationContext.Provider>\n    </ToastProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}